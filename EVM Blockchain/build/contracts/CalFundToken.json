{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "GasLimitUsed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasSubsidyFailed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GasSubsidyProvided",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "createPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "getMaticBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maticAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalEndTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "proposeNewCommissionAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedNewCommissionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_matic",
          "type": "address"
        }
      ],
      "name": "setMaticAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setUniswapFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pair",
          "type": "address"
        }
      ],
      "name": "setUniswapPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_router",
          "type": "address"
        }
      ],
      "name": "setUniswapRouter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wmatic",
          "type": "address"
        }
      ],
      "name": "setWmaticAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapFactory",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Factory",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapPair",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Pair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapRouter",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wmatic",
      "outputs": [
        {
          "internalType": "contract IWMATIC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol",
    "1": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/interfaces/draft-IERC6093.sol",
    "10": "contracts/CalFundToken.sol",
    "2": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol",
    "3": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/IERC20.sol",
    "4": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/extensions/IERC20Metadata.sol",
    "5": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/utils/Context.sol",
    "6": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
    "7": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
    "8": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router01.sol",
    "9": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol"
  },
  "ast": {
    "absolutePath": "contracts/CalFundToken.sol",
    "exportedSymbols": {
      "CalFundToken": [
        659
      ],
      "Context": [
        1745
      ],
      "ERC20": [
        1322
      ],
      "IERC20": [
        1960
      ],
      "IERC20Errors": [
        1787
      ],
      "IERC20Metadata": [
        1986
      ],
      "IUniswapV2Factory": [
        1385
      ],
      "IUniswapV2Pair": [
        1627
      ],
      "IUniswapV2Router01": [
        2294
      ],
      "IUniswapV2Router02": [
        1715
      ],
      "IWMATIC": [
        24
      ],
      "Ownable": [
        807
      ]
    },
    "id": 660,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:10"
      },
      {
        "absolutePath": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 1323,
        "src": "57:83:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol",
        "file": "OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 808,
        "src": "141:80:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol",
        "file": "Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 1716,
        "src": "222:87:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 1386,
        "src": "310:82:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
        "file": "Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 660,
        "sourceUnit": 1628,
        "src": "393:79:10",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWMATIC",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 24,
        "linearizedBaseContracts": [
          24
        ],
        "name": "IWMATIC",
        "nameLocation": "484:7:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d0e30db0",
            "id": 9,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "507:7:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:2:10"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "533:0:10"
            },
            "scope": 24,
            "src": "498:36:10",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2e1a7d4d",
            "id": 14,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "548:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "wad",
                  "nameLocation": "562:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 14,
                  "src": "557:8:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "557:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "556:10:10"
            },
            "returnParameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:0:10"
            },
            "scope": 24,
            "src": "539:37:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "a9059cbb",
            "id": 23,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "590:8:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "dst",
                  "nameLocation": "607:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "599:11:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 18,
                  "mutability": "mutable",
                  "name": "wad",
                  "nameLocation": "617:3:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "612:8:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "598:23:10"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23,
                  "src": "640:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "640:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "639:6:10"
            },
            "scope": 24,
            "src": "581:65:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 660,
        "src": "474:174:10",
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25,
              "name": "ERC20",
              "nameLocations": [
                "675:5:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1322,
              "src": "675:5:10"
            },
            "id": 26,
            "nodeType": "InheritanceSpecifier",
            "src": "675:5:10"
          },
          {
            "baseName": {
              "id": 27,
              "name": "Ownable",
              "nameLocations": [
                "682:7:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 807,
              "src": "682:7:10"
            },
            "id": 28,
            "nodeType": "InheritanceSpecifier",
            "src": "682:7:10"
          }
        ],
        "canonicalName": "CalFundToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 659,
        "linearizedBaseContracts": [
          659,
          807,
          1322,
          1787,
          1986,
          1960,
          1745
        ],
        "name": "CalFundToken",
        "nameLocation": "659:12:10",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "735de9f7",
            "id": 31,
            "mutability": "mutable",
            "name": "uniswapRouter",
            "nameLocation": "722:13:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "696:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
              "typeString": "contract IUniswapV2Router02"
            },
            "typeName": {
              "id": 30,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 29,
                "name": "IUniswapV2Router02",
                "nameLocations": [
                  "696:18:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1715,
                "src": "696:18:10"
              },
              "referencedDeclaration": 1715,
              "src": "696:18:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                "typeString": "contract IUniswapV2Router02"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8bdb2afa",
            "id": 34,
            "mutability": "mutable",
            "name": "uniswapFactory",
            "nameLocation": "766:14:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "741:39:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
              "typeString": "contract IUniswapV2Factory"
            },
            "typeName": {
              "id": 33,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32,
                "name": "IUniswapV2Factory",
                "nameLocations": [
                  "741:17:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1385,
                "src": "741:17:10"
              },
              "referencedDeclaration": 1385,
              "src": "741:17:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                "typeString": "contract IUniswapV2Factory"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c816841b",
            "id": 37,
            "mutability": "mutable",
            "name": "uniswapPair",
            "nameLocation": "808:11:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "786:33:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
              "typeString": "contract IUniswapV2Pair"
            },
            "typeName": {
              "id": 36,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 35,
                "name": "IUniswapV2Pair",
                "nameLocations": [
                  "786:14:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1627,
                "src": "786:14:10"
              },
              "referencedDeclaration": 1627,
              "src": "786:14:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                "typeString": "contract IUniswapV2Pair"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fb41be16",
            "id": 40,
            "mutability": "mutable",
            "name": "wmatic",
            "nameLocation": "840:6:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "825:21:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWMATIC_$24",
              "typeString": "contract IWMATIC"
            },
            "typeName": {
              "id": 39,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 38,
                "name": "IWMATIC",
                "nameLocations": [
                  "825:7:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 24,
                "src": "825:7:10"
              },
              "referencedDeclaration": 24,
              "src": "825:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWMATIC_$24",
                "typeString": "contract IWMATIC"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "31fbfb63",
            "id": 42,
            "mutability": "mutable",
            "name": "maticAddress",
            "nameLocation": "867:12:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "852:27:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "852:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "55ea42a5",
            "id": 44,
            "mutability": "mutable",
            "name": "proposedNewCommissionAddress",
            "nameLocation": "900:28:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "885:43:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 43,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "885:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f6cdf42",
            "id": 46,
            "mutability": "mutable",
            "name": "proposalEndTime",
            "nameLocation": "949:15:10",
            "nodeType": "VariableDeclaration",
            "scope": 659,
            "src": "934:30:10",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "934:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "2eb5406d62014fa2d61fda20a970ce8eb194122574a3b4c95881566c61c9776f",
            "id": 52,
            "name": "GasSubsidyProvided",
            "nameLocation": "977:18:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 48,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1004:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "996:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1023:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "1015:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1015:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:35:10"
            },
            "src": "971:60:10"
          },
          {
            "anonymous": false,
            "eventSelector": "ae212e7019f7285aa63e1c08bef427365d16328daffa39134c83274413f16e9a",
            "id": 58,
            "name": "GasSubsidyFailed",
            "nameLocation": "1042:16:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1067:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1059:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1086:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 58,
                  "src": "1078:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1058:35:10"
            },
            "src": "1036:58:10"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "1185:101:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 71,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1201:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1205:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1201:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030",
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1213:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 77,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1223:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 75,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 886,
                              "src": "1229:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 76,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1229:10:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1223:16:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1213:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 70,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "1195:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1195:45:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1195:45:10"
                }
              ]
            },
            "id": 82,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "43616c46756e64546f6b656e",
                    "id": 63,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1140:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4999aaa82bb51925b1edd897848b1f1ab1cf0252478b410b5c1ef5096df4c8f7",
                      "typeString": "literal_string \"CalFundToken\""
                    },
                    "value": "CalFundToken"
                  },
                  {
                    "hexValue": "434654",
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1156:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0162fcad39b5277c1a03887ece6852f4d9d5380f3d48dea0342b19d25dec1573",
                      "typeString": "literal_string \"CFT\""
                    },
                    "value": "CFT"
                  }
                ],
                "id": 65,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 62,
                  "name": "ERC20",
                  "nameLocations": [
                    "1134:5:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1322,
                  "src": "1134:5:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1134:28:10"
              },
              {
                "arguments": [
                  {
                    "id": 67,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60,
                    "src": "1171:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 68,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 66,
                  "name": "Ownable",
                  "nameLocations": [
                    "1163:7:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 807,
                  "src": "1163:7:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1163:21:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1120:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 82,
                  "src": "1112:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:22:10"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1185:0:10"
            },
            "scope": 659,
            "src": "1100:186:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1356:61:10",
              "statements": [
                {
                  "expression": {
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 89,
                      "name": "uniswapFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "1366:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 91,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 84,
                          "src": "1401:8:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 90,
                        "name": "IUniswapV2Factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1385,
                        "src": "1383:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1385_$",
                          "typeString": "type(contract IUniswapV2Factory)"
                        }
                      },
                      "id": 92,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1383:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                        "typeString": "contract IUniswapV2Factory"
                      }
                    },
                    "src": "1366:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1366:44:10"
                }
              ]
            },
            "functionSelector": "e04b677f",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 87,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 86,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1346:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1346:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1346:9:10"
              }
            ],
            "name": "setUniswapFactory",
            "nameLocation": "1301:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 85,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1327:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 96,
                  "src": "1319:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 83,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1318:18:10"
            },
            "returnParameters": {
              "id": 88,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1356:0:10"
            },
            "scope": 659,
            "src": "1292:125:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 109,
              "nodeType": "Block",
              "src": "1485:60:10",
              "statements": [
                {
                  "expression": {
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 103,
                      "name": "uniswapRouter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31,
                      "src": "1495:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 105,
                          "name": "_router",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 98,
                          "src": "1530:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 104,
                        "name": "IUniswapV2Router02",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1715,
                        "src": "1511:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1715_$",
                          "typeString": "type(contract IUniswapV2Router02)"
                        }
                      },
                      "id": 106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1511:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                        "typeString": "contract IUniswapV2Router02"
                      }
                    },
                    "src": "1495:43:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                      "typeString": "contract IUniswapV2Router02"
                    }
                  },
                  "id": 108,
                  "nodeType": "ExpressionStatement",
                  "src": "1495:43:10"
                }
              ]
            },
            "functionSelector": "bea9849e",
            "id": 110,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 100,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1475:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1475:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1475:9:10"
              }
            ],
            "name": "setUniswapRouter",
            "nameLocation": "1432:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "_router",
                  "nameLocation": "1457:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 110,
                  "src": "1449:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1449:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1448:17:10"
            },
            "returnParameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1485:0:10"
            },
            "scope": 659,
            "src": "1423:122:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 123,
              "nodeType": "Block",
              "src": "1609:52:10",
              "statements": [
                {
                  "expression": {
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 117,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "1619:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 119,
                          "name": "_pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 112,
                          "src": "1648:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 118,
                        "name": "IUniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "1633:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1627_$",
                          "typeString": "type(contract IUniswapV2Pair)"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1633:21:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "src": "1619:35:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "1619:35:10"
                }
              ]
            },
            "functionSelector": "d5aed6bf",
            "id": 124,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 115,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 114,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1599:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1599:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1599:9:10"
              }
            ],
            "name": "setUniswapPair",
            "nameLocation": "1560:14:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 112,
                  "mutability": "mutable",
                  "name": "_pair",
                  "nameLocation": "1583:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 124,
                  "src": "1575:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1575:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1574:15:10"
            },
            "returnParameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1609:0:10"
            },
            "scope": 659,
            "src": "1551:110:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "1727:38:10",
              "statements": [
                {
                  "expression": {
                    "id": 133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 131,
                      "name": "maticAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1737:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 132,
                      "name": "_matic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 126,
                      "src": "1752:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1737:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 134,
                  "nodeType": "ExpressionStatement",
                  "src": "1737:21:10"
                }
              ]
            },
            "functionSelector": "aa411d5b",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 128,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1717:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1717:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1717:9:10"
              }
            ],
            "name": "setMaticAddress",
            "nameLocation": "1676:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 126,
                  "mutability": "mutable",
                  "name": "_matic",
                  "nameLocation": "1700:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "1692:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1692:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1691:16:10"
            },
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1727:0:10"
            },
            "scope": 659,
            "src": "1667:98:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 149,
              "nodeType": "Block",
              "src": "1833:42:10",
              "statements": [
                {
                  "expression": {
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 143,
                      "name": "wmatic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1843:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWMATIC_$24",
                        "typeString": "contract IWMATIC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 145,
                          "name": "_wmatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 138,
                          "src": "1860:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 144,
                        "name": "IWMATIC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24,
                        "src": "1852:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWMATIC_$24_$",
                          "typeString": "type(contract IWMATIC)"
                        }
                      },
                      "id": 146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1852:16:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWMATIC_$24",
                        "typeString": "contract IWMATIC"
                      }
                    },
                    "src": "1843:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWMATIC_$24",
                      "typeString": "contract IWMATIC"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "1843:25:10"
                }
              ]
            },
            "functionSelector": "3e37c0dc",
            "id": 150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 141,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 140,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1823:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1823:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1823:9:10"
              }
            ],
            "name": "setWmaticAddress",
            "nameLocation": "1780:16:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "_wmatic",
                  "nameLocation": "1805:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 150,
                  "src": "1797:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1796:17:10"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1833:0:10"
            },
            "scope": 659,
            "src": "1771:104:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "1922:369:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 158,
                              "name": "uniswapFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "1948:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                                "typeString": "contract IUniswapV2Factory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                                "typeString": "contract IUniswapV2Factory"
                              }
                            ],
                            "id": 157,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1940:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 156,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1940:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:23:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1975:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1967:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1967:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1967:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1940:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617020666163746f7279206e6f7420736574",
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1979:25:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e8de8652e8b85e35e2c08c02659a2ec5897998a5681b8388705b52f7d945da9c",
                          "typeString": "literal_string \"Uniswap factory not set\""
                        },
                        "value": "Uniswap factory not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e8de8652e8b85e35e2c08c02659a2ec5897998a5681b8388705b52f7d945da9c",
                          "typeString": "literal_string \"Uniswap factory not set\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1932:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1932:73:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 167,
                  "nodeType": "ExpressionStatement",
                  "src": "1932:73:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 171,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2031:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CalFundToken_$659",
                                "typeString": "contract CalFundToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CalFundToken_$659",
                                "typeString": "contract CalFundToken"
                              }
                            ],
                            "id": 170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2023:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 169,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2023:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2023:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2048:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2040:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 173,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2040:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2040:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2023:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e2061646472657373206e6f7420736574",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2052:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a8c766bf1bc12f13bcad124ce7e0349c455ddc5224949c14d1fb530cffbc32f",
                          "typeString": "literal_string \"Token address not set\""
                        },
                        "value": "Token address not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a8c766bf1bc12f13bcad124ce7e0349c455ddc5224949c14d1fb530cffbc32f",
                          "typeString": "literal_string \"Token address not set\""
                        }
                      ],
                      "id": 168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2015:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2015:61:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2015:61:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 182,
                          "name": "maticAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "2094:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 185,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2118:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2110:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2110:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2110:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2094:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d415449432061646472657373206e6f7420736574",
                        "id": 188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2122:23:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4fbbd60a8012cd94a11d6796f73b092694a92542af3df25621e9a3060a076719",
                          "typeString": "literal_string \"MATIC address not set\""
                        },
                        "value": "MATIC address not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4fbbd60a8012cd94a11d6796f73b092694a92542af3df25621e9a3060a076719",
                          "typeString": "literal_string \"MATIC address not set\""
                        }
                      ],
                      "id": 181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2086:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2086:60:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 190,
                  "nodeType": "ExpressionStatement",
                  "src": "2086:60:10"
                },
                {
                  "assignments": [
                    192
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 192,
                      "mutability": "mutable",
                      "name": "pairAddress",
                      "nameLocation": "2165:11:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 208,
                      "src": "2157:19:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 191,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2157:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 201,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 197,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2213:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CalFundToken_$659",
                              "typeString": "contract CalFundToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CalFundToken_$659",
                              "typeString": "contract CalFundToken"
                            }
                          ],
                          "id": 196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2205:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 195,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2205:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2205:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 199,
                        "name": "maticAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "2220:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 193,
                        "name": "uniswapFactory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "2179:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Factory_$1385",
                          "typeString": "contract IUniswapV2Factory"
                        }
                      },
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2194:10:10",
                      "memberName": "createPair",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1374,
                      "src": "2179:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
                        "typeString": "function (address,address) external returns (address)"
                      }
                    },
                    "id": 200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:54:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2157:76:10"
                },
                {
                  "expression": {
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 202,
                      "name": "uniswapPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37,
                      "src": "2243:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 204,
                          "name": "pairAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2272:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 203,
                        "name": "IUniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1627,
                        "src": "2257:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1627_$",
                          "typeString": "type(contract IUniswapV2Pair)"
                        }
                      },
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2257:27:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                        "typeString": "contract IUniswapV2Pair"
                      }
                    },
                    "src": "2243:41:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$1627",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:41:10"
                }
              ]
            },
            "functionSelector": "9e78fb4f",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 152,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1912:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "1912:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1912:9:10"
              }
            ],
            "name": "createPair",
            "nameLocation": "1890:10:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1900:2:10"
            },
            "returnParameters": {
              "id": 154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1922:0:10"
            },
            "scope": 659,
            "src": "1881:410:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 247,
              "nodeType": "Block",
              "src": "2363:258:10",
              "statements": [
                {
                  "assignments": [
                    219,
                    221
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 219,
                      "mutability": "mutable",
                      "name": "pureAmount",
                      "nameLocation": "2382:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2374:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2374:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 221,
                      "mutability": "mutable",
                      "name": "gasSubsidy",
                      "nameLocation": "2402:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 247,
                      "src": "2394:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 220,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2394:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 225,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 223,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2434:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 222,
                      "name": "extractGasSubsidy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "2416:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2416:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2373:68:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 227,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 211,
                        "src": "2457:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 228,
                        "name": "pureAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 219,
                        "src": "2468:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 226,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "2451:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2451:28:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2451:28:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 231,
                        "name": "gasSubsidy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 221,
                        "src": "2494:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2507:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2494:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 235,
                            "name": "recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 211,
                            "src": "2528:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 234,
                          "name": "getMaticBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "2512:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2512:26:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2541:7:10",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      "src": "2512:36:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2494:54:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 246,
                  "nodeType": "IfStatement",
                  "src": "2490:125:10",
                  "trueBody": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "2550:65:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 241,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 211,
                              "src": "2582:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 242,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 221,
                              "src": "2593:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 240,
                            "name": "provideGasSubsidy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 492,
                            "src": "2564:17:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2564:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 244,
                        "nodeType": "ExpressionStatement",
                        "src": "2564:40:10"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "40c10f19",
            "id": 248,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2353:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 718,
                  "src": "2353:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "2353:9:10"
              }
            ],
            "name": "mint",
            "nameLocation": "2306:4:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 211,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2319:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "2311:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 210,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2338:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 248,
                  "src": "2330:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2310:35:10"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2363:0:10"
            },
            "scope": 659,
            "src": "2297:324:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              932
            ],
            "body": {
              "id": 339,
              "nodeType": "Block",
              "src": "2711:774:10",
              "statements": [
                {
                  "assignments": [
                    259
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 259,
                      "mutability": "mutable",
                      "name": "sender",
                      "nameLocation": "2729:6:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2721:14:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 258,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2721:7:10",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 260,
                      "name": "_msgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1727,
                      "src": "2738:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2738:12:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2721:29:10"
                },
                {
                  "assignments": [
                    264,
                    266
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "pureAmount",
                      "nameLocation": "2769:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2761:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2761:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 266,
                      "mutability": "mutable",
                      "name": "gasSubsidy",
                      "nameLocation": "2789:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 339,
                      "src": "2781:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 265,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2781:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 270,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 268,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 252,
                        "src": "2821:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 267,
                      "name": "extractGasSubsidy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "2803:17:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256) pure returns (uint256,uint256)"
                      }
                    },
                    "id": 269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2803:25:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2760:68:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 271,
                      "name": "gasSubsidy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "2843:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2856:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2843:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 332,
                  "nodeType": "IfStatement",
                  "src": "2839:585:10",
                  "trueBody": {
                    "id": 331,
                    "nodeType": "Block",
                    "src": "2859:565:10",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 275,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "2893:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 274,
                                "name": "getMaticBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 620,
                                "src": "2877:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2877:23:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2903:7:10",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            },
                            "src": "2877:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 280,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 250,
                                  "src": "2930:9:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 279,
                                "name": "getMaticBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 620,
                                "src": "2914:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 281,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2914:26:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 282,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2943:7:10",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            },
                            "src": "2914:36:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2877:73:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "id": 307,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 259,
                                  "src": "3204:6:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 306,
                                "name": "getMaticBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 620,
                                "src": "3188:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address) view returns (uint256)"
                                }
                              },
                              "id": 308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3188:23:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3214:7:10",
                              "subdenomination": "ether",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "value": "1"
                            },
                            "src": "3188:33:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 321,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 318,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 250,
                                    "src": "3319:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 317,
                                  "name": "getMaticBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 620,
                                  "src": "3303:15:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view returns (uint256)"
                                  }
                                },
                                "id": 319,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3303:26:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 320,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3332:7:10",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                },
                                "value": "1"
                              },
                              "src": "3303:36:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 328,
                            "nodeType": "IfStatement",
                            "src": "3299:115:10",
                            "trueBody": {
                              "id": 327,
                              "nodeType": "Block",
                              "src": "3341:73:10",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 323,
                                        "name": "recipient",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 250,
                                        "src": "3377:9:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 324,
                                        "name": "gasSubsidy",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "3388:10:10",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 322,
                                      "name": "provideGasSubsidy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 492,
                                      "src": "3359:17:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,uint256)"
                                      }
                                    },
                                    "id": 325,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3359:40:10",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 326,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3359:40:10"
                                }
                              ]
                            }
                          },
                          "id": 329,
                          "nodeType": "IfStatement",
                          "src": "3184:230:10",
                          "trueBody": {
                            "id": 316,
                            "nodeType": "Block",
                            "src": "3223:70:10",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 312,
                                      "name": "sender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 259,
                                      "src": "3259:6:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "id": 313,
                                      "name": "gasSubsidy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 266,
                                      "src": "3267:10:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 311,
                                    "name": "provideGasSubsidy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 492,
                                    "src": "3241:17:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                      "typeString": "function (address,uint256)"
                                    }
                                  },
                                  "id": 314,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3241:37:10",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 315,
                                "nodeType": "ExpressionStatement",
                                "src": "3241:37:10"
                              }
                            ]
                          }
                        },
                        "id": 330,
                        "nodeType": "IfStatement",
                        "src": "2873:541:10",
                        "trueBody": {
                          "id": 305,
                          "nodeType": "Block",
                          "src": "2952:226:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 285,
                                  "name": "gasSubsidy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "2970:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "*=",
                                "rightHandSide": {
                                  "hexValue": "32",
                                  "id": 286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2984:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "2970:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 288,
                              "nodeType": "ExpressionStatement",
                              "src": "2970:15:10"
                            },
                            {
                              "assignments": [
                                290
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 290,
                                  "mutability": "mutable",
                                  "name": "halfGasSubsidy",
                                  "nameLocation": "3011:14:10",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 305,
                                  "src": "3003:22:10",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 289,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3003:7:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 294,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 291,
                                  "name": "gasSubsidy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "3028:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "32",
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3041:1:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "src": "3028:14:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "3003:39:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 296,
                                    "name": "sender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "3078:6:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 297,
                                    "name": "halfGasSubsidy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 290,
                                    "src": "3086:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 295,
                                  "name": "provideGasSubsidy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "3060:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3060:41:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 299,
                              "nodeType": "ExpressionStatement",
                              "src": "3060:41:10"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 301,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 250,
                                    "src": "3137:9:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 302,
                                    "name": "halfGasSubsidy",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 290,
                                    "src": "3148:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 300,
                                  "name": "provideGasSubsidy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 492,
                                  "src": "3119:17:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3119:44:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 304,
                              "nodeType": "ExpressionStatement",
                              "src": "3119:44:10"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 335,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 250,
                        "src": "3456:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 336,
                        "name": "pureAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "3467:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 333,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3441:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_CalFundToken_$659_$",
                          "typeString": "type(contract super CalFundToken)"
                        }
                      },
                      "id": 334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3447:8:10",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 932,
                      "src": "3441:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3441:37:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 257,
                  "id": 338,
                  "nodeType": "Return",
                  "src": "3434:44:10"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 340,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "2636:8:10",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 254,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2687:8:10"
            },
            "parameters": {
              "id": 253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "2653:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2645:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 252,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2672:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2664:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 251,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2664:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:35:10"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 340,
                  "src": "2705:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2705:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2704:6:10"
            },
            "scope": 659,
            "src": "2627:858:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 404,
              "nodeType": "Block",
              "src": "3575:517:10",
              "statements": [
                {
                  "assignments": [
                    350
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 350,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "3593:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 404,
                      "src": "3585:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 349,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3585:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 352,
                  "initialValue": {
                    "hexValue": "3138",
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3604:2:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3585:21:10"
                },
                {
                  "assignments": [
                    354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 354,
                      "mutability": "mutable",
                      "name": "pureAmount",
                      "nameLocation": "3624:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 404,
                      "src": "3616:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 353,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3616:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 366,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 360,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 355,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 342,
                        "src": "3637:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3647:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "id": 357,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "3653:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3647:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 359,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3646:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3637:25:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3666:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 362,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3672:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3666:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 364,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3665:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3637:44:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3616:65:10"
                },
                {
                  "assignments": [
                    368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 368,
                      "mutability": "mutable",
                      "name": "gasSubsidy",
                      "nameLocation": "3699:10:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 404,
                      "src": "3691:18:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 367,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3691:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 375,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 369,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 342,
                      "src": "3712:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3722:2:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 371,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 350,
                            "src": "3728:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3722:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 373,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3721:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3712:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3691:46:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 376,
                        "name": "gasSubsidy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "3820:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            },
                            "id": 379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 377,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3834:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "hexValue": "3132",
                              "id": 378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3840:2:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_12_by_1",
                                "typeString": "int_const 12"
                              },
                              "value": "12"
                            },
                            "src": "3834:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000_by_1",
                              "typeString": "int_const 1000000000000"
                            }
                          }
                        ],
                        "id": 380,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3833:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000_by_1",
                          "typeString": "int_const 1000000000000"
                        }
                      },
                      "src": "3820:23:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "313233343536",
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3847:6:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_123456_by_1",
                        "typeString": "int_const 123456"
                      },
                      "value": "123456"
                    },
                    "src": "3820:33:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 398,
                    "nodeType": "Block",
                    "src": "3954:90:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 394,
                            "name": "gasSubsidy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "3968:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 395,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3981:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3968:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 397,
                        "nodeType": "ExpressionStatement",
                        "src": "3968:14:10"
                      }
                    ]
                  },
                  "id": 399,
                  "nodeType": "IfStatement",
                  "src": "3816:228:10",
                  "trueBody": {
                    "id": 393,
                    "nodeType": "Block",
                    "src": "3855:93:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 384,
                            "name": "gasSubsidy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "3869:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 385,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 368,
                              "src": "3882:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "%",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  },
                                  "id": 388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3896:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3132",
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3902:2:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_12_by_1",
                                      "typeString": "int_const 12"
                                    },
                                    "value": "12"
                                  },
                                  "src": "3896:8:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000_by_1",
                                    "typeString": "int_const 1000000000000"
                                  }
                                }
                              ],
                              "id": 389,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3895:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000_by_1",
                                "typeString": "int_const 1000000000000"
                              }
                            },
                            "src": "3882:23:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3869:36:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "3869:36:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 400,
                        "name": "pureAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 354,
                        "src": "4062:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 401,
                        "name": "gasSubsidy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "4074:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 402,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "4061:24:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 348,
                  "id": 403,
                  "nodeType": "Return",
                  "src": "4054:31:10"
                }
              ]
            },
            "id": 405,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extractGasSubsidy",
            "nameLocation": "3500:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 342,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3526:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3518:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 341,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3518:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3517:16:10"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 345,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3557:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 344,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 405,
                  "src": "3566:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3566:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3556:18:10"
            },
            "scope": 659,
            "src": "3491:601:10",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 491,
              "nodeType": "Block",
              "src": "4173:872:10",
              "statements": [
                {
                  "assignments": [
                    413
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 413,
                      "mutability": "mutable",
                      "name": "gasPrice",
                      "nameLocation": "4191:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "4183:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 412,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4183:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 416,
                  "initialValue": {
                    "expression": {
                      "id": 414,
                      "name": "tx",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -26,
                      "src": "4202:2:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_transaction",
                        "typeString": "tx"
                      }
                    },
                    "id": 415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4205:8:10",
                    "memberName": "gasprice",
                    "nodeType": "MemberAccess",
                    "src": "4202:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4183:30:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 417,
                      "name": "gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "4227:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4239:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4227:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 427,
                  "nodeType": "IfStatement",
                  "src": "4223:134:10",
                  "trueBody": {
                    "id": 426,
                    "nodeType": "Block",
                    "src": "4242:115:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 421,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "4278:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 422,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "4289:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 420,
                            "name": "GasSubsidyFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4261:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4261:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "EmitStatement",
                        "src": "4256:44:10"
                      },
                      {
                        "functionReturnParameters": 411,
                        "id": 425,
                        "nodeType": "Return",
                        "src": "4314:7:10"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 429,
                      "mutability": "mutable",
                      "name": "gasLimit",
                      "nameLocation": "4375:8:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 491,
                      "src": "4367:16:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 428,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4367:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 430,
                      "name": "gasSubsidy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 409,
                      "src": "4386:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 431,
                      "name": "gasPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 413,
                      "src": "4399:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4386:21:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4367:40:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 434,
                      "name": "gasLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 429,
                      "src": "4421:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4433:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4421:13:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 444,
                  "nodeType": "IfStatement",
                  "src": "4417:145:10",
                  "trueBody": {
                    "id": 443,
                    "nodeType": "Block",
                    "src": "4436:126:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 438,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "4472:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 439,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "4483:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 437,
                            "name": "GasSubsidyFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4455:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4455:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 441,
                        "nodeType": "EmitStatement",
                        "src": "4450:44:10"
                      },
                      {
                        "functionReturnParameters": 411,
                        "id": 442,
                        "nodeType": "Return",
                        "src": "4508:7:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4576:47:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 448,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "4605:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CalFundToken_$659",
                                "typeString": "contract CalFundToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CalFundToken_$659",
                                "typeString": "contract CalFundToken"
                              }
                            ],
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4597:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4597:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4597:13:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 450,
                          "name": "gasSubsidy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "4612:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 445,
                        "name": "swapTokensForWMatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 567,
                        "src": "4577:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4577:46:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 460,
                  "nodeType": "IfStatement",
                  "src": "4572:142:10",
                  "trueBody": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "4625:89:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 454,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "4661:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 455,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "4672:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 453,
                            "name": "GasSubsidyFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4644:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4644:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 457,
                        "nodeType": "EmitStatement",
                        "src": "4639:44:10"
                      },
                      {
                        "functionReturnParameters": 411,
                        "id": 458,
                        "nodeType": "Return",
                        "src": "4697:7:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4728:25:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 462,
                          "name": "gasSubsidy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "4742:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 461,
                        "name": "unwrapWMatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 588,
                        "src": "4729:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (uint256) returns (bool)"
                        }
                      },
                      "id": 463,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4729:24:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 472,
                  "nodeType": "IfStatement",
                  "src": "4724:120:10",
                  "trueBody": {
                    "id": 471,
                    "nodeType": "Block",
                    "src": "4755:89:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 466,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "4791:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 467,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "4802:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 465,
                            "name": "GasSubsidyFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4774:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4774:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 469,
                        "nodeType": "EmitStatement",
                        "src": "4769:44:10"
                      },
                      {
                        "functionReturnParameters": 411,
                        "id": 470,
                        "nodeType": "Return",
                        "src": "4827:7:10"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4858:33:10",
                    "subExpression": {
                      "arguments": [
                        {
                          "id": 474,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 407,
                          "src": "4869:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 475,
                          "name": "gasSubsidy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "4880:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 473,
                        "name": "sendMatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 609,
                        "src": "4859:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                          "typeString": "function (address,uint256) returns (bool)"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4859:32:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 485,
                  "nodeType": "IfStatement",
                  "src": "4854:128:10",
                  "trueBody": {
                    "id": 484,
                    "nodeType": "Block",
                    "src": "4893:89:10",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 479,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "4929:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 480,
                              "name": "gasSubsidy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 409,
                              "src": "4940:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 478,
                            "name": "GasSubsidyFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "4912:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4912:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 482,
                        "nodeType": "EmitStatement",
                        "src": "4907:44:10"
                      },
                      {
                        "functionReturnParameters": 411,
                        "id": 483,
                        "nodeType": "Return",
                        "src": "4965:7:10"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 487,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 407,
                        "src": "5016:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 488,
                        "name": "gasSubsidy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 409,
                        "src": "5027:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 486,
                      "name": "GasSubsidyProvided",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 52,
                      "src": "4997:18:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4997:41:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 490,
                  "nodeType": "EmitStatement",
                  "src": "4992:46:10"
                }
              ]
            },
            "id": 492,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideGasSubsidy",
            "nameLocation": "4107:17:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 410,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 407,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4133:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "4125:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4125:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 409,
                  "mutability": "mutable",
                  "name": "gasSubsidy",
                  "nameLocation": "4152:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 492,
                  "src": "4144:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 408,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4144:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4124:39:10"
            },
            "returnParameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4173:0:10"
            },
            "scope": 659,
            "src": "4098:947:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 566,
              "nodeType": "Block",
              "src": "5138:621:10",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 509,
                        "nodeType": "Block",
                        "src": "5252:2:10",
                        "statements": []
                      },
                      "errorName": "",
                      "id": 510,
                      "nodeType": "TryCatchClause",
                      "src": "5252:2:10"
                    },
                    {
                      "block": {
                        "id": 513,
                        "nodeType": "Block",
                        "src": "5261:37:10",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5282:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 500,
                            "id": 512,
                            "nodeType": "Return",
                            "src": "5275:12:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 514,
                      "nodeType": "TryCatchClause",
                      "src": "5255:43:10"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 505,
                            "name": "uniswapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31,
                            "src": "5223:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                              "typeString": "contract IUniswapV2Router02"
                            }
                          ],
                          "id": 504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5215:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5215:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5215:22:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 507,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "5239:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 501,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "5202:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CalFundToken_$659",
                          "typeString": "contract CalFundToken"
                        }
                      },
                      "id": 502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5207:7:10",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 973,
                      "src": "5202:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5202:49:10",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 515,
                  "nodeType": "TryStatement",
                  "src": "5198:100:10"
                },
                {
                  "assignments": [
                    520
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 520,
                      "mutability": "mutable",
                      "name": "path",
                      "nameLocation": "5333:4:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 566,
                      "src": "5316:21:10",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 518,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5316:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 519,
                        "nodeType": "ArrayTypeName",
                        "src": "5316:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 526,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "32",
                        "id": 524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 523,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "5340:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 521,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5344:7:10",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 522,
                        "nodeType": "ArrayTypeName",
                        "src": "5344:9:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5340:16:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5316:40:10"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 527,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "5366:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 529,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5371:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5366:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 532,
                          "name": "wmatic",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "5384:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IWMATIC_$24",
                            "typeString": "contract IWMATIC"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IWMATIC_$24",
                            "typeString": "contract IWMATIC"
                          }
                        ],
                        "id": 531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5376:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5376:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5376:15:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5366:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "5366:25:10"
                },
                {
                  "expression": {
                    "id": 543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 536,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "5419:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 538,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5424:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5419:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 541,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5437:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CalFundToken_$659",
                            "typeString": "contract CalFundToken"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_CalFundToken_$659",
                            "typeString": "contract CalFundToken"
                          }
                        ],
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5429:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5429:7:10",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 542,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5429:13:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5419:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 544,
                  "nodeType": "ExpressionStatement",
                  "src": "5419:23:10"
                },
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 559,
                        "nodeType": "Block",
                        "src": "5673:36:10",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5694:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 500,
                            "id": 558,
                            "nodeType": "Return",
                            "src": "5687:11:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 560,
                      "nodeType": "TryCatchClause",
                      "src": "5673:36:10"
                    },
                    {
                      "block": {
                        "id": 563,
                        "nodeType": "Block",
                        "src": "5716:37:10",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5737:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 500,
                            "id": 562,
                            "nodeType": "Return",
                            "src": "5730:12:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 564,
                      "nodeType": "TryCatchClause",
                      "src": "5710:43:10"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 547,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 496,
                        "src": "5562:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5587:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 549,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 520,
                        "src": "5602:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 552,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5628:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CalFundToken_$659",
                              "typeString": "contract CalFundToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CalFundToken_$659",
                              "typeString": "contract CalFundToken"
                            }
                          ],
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5620:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 550,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5620:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5620:13:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 554,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "5647:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5653:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "5647:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 545,
                        "name": "uniswapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31,
                        "src": "5481:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Router02_$1715",
                          "typeString": "contract IUniswapV2Router02"
                        }
                      },
                      "id": 546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5495:53:10",
                      "memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1688,
                      "src": "5481:67:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"
                      }
                    },
                    "id": 556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5481:191:10",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 565,
                  "nodeType": "TryStatement",
                  "src": "5477:276:10"
                }
              ]
            },
            "id": 567,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTokensForWMatic",
            "nameLocation": "5060:19:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 494,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5088:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "5080:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5080:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 496,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "5102:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "5094:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 495,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5094:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5079:35:10"
            },
            "returnParameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 567,
                  "src": "5132:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 498,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5132:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5131:6:10"
            },
            "scope": 659,
            "src": "5051:708:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 587,
              "nodeType": "Block",
              "src": "5826:124:10",
              "statements": [
                {
                  "clauses": [
                    {
                      "block": {
                        "id": 580,
                        "nodeType": "Block",
                        "src": "5864:36:10",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "74727565",
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5885:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            "functionReturnParameters": 573,
                            "id": 579,
                            "nodeType": "Return",
                            "src": "5878:11:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 581,
                      "nodeType": "TryCatchClause",
                      "src": "5864:36:10"
                    },
                    {
                      "block": {
                        "id": 584,
                        "nodeType": "Block",
                        "src": "5907:37:10",
                        "statements": [
                          {
                            "expression": {
                              "hexValue": "66616c7365",
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5928:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            "functionReturnParameters": 573,
                            "id": 583,
                            "nodeType": "Return",
                            "src": "5921:12:10"
                          }
                        ]
                      },
                      "errorName": "",
                      "id": 585,
                      "nodeType": "TryCatchClause",
                      "src": "5901:43:10"
                    }
                  ],
                  "externalCall": {
                    "arguments": [
                      {
                        "id": 576,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 569,
                        "src": "5856:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 574,
                        "name": "wmatic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "5840:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IWMATIC_$24",
                          "typeString": "contract IWMATIC"
                        }
                      },
                      "id": 575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5847:8:10",
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14,
                      "src": "5840:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5840:23:10",
                    "tryCall": true,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 586,
                  "nodeType": "TryStatement",
                  "src": "5836:108:10"
                }
              ]
            },
            "id": 588,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unwrapWMatic",
            "nameLocation": "5774:12:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 569,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5795:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "5787:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5787:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5786:16:10"
            },
            "returnParameters": {
              "id": 573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 572,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 588,
                  "src": "5820:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 571,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5820:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5819:6:10"
            },
            "scope": 659,
            "src": "5765:185:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 608,
              "nodeType": "Block",
              "src": "6026:85:10",
              "statements": [
                {
                  "assignments": [
                    598,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 598,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "6042:7:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 608,
                      "src": "6037:12:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 597,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6037:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 605,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6077:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 599,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 590,
                          "src": "6054:2:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6057:4:10",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "6054:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 602,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 601,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 592,
                          "src": "6069:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "6054:22:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6054:26:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6036:44:10"
                },
                {
                  "expression": {
                    "id": 606,
                    "name": "success",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 598,
                    "src": "6097:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 596,
                  "id": 607,
                  "nodeType": "Return",
                  "src": "6090:14:10"
                }
              ]
            },
            "id": 609,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMatic",
            "nameLocation": "5965:9:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 590,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5983:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5975:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 589,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5975:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 592,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5995:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "5987:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5987:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5974:28:10"
            },
            "returnParameters": {
              "id": 596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 595,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 609,
                  "src": "6020:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 594,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6020:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:6:10"
            },
            "scope": 659,
            "src": "5956:155:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 619,
              "nodeType": "Block",
              "src": "6186:36:10",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 616,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 611,
                      "src": "6203:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6208:7:10",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "6203:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 615,
                  "id": 618,
                  "nodeType": "Return",
                  "src": "6196:19:10"
                }
              ]
            },
            "functionSelector": "5b540060",
            "id": 620,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMaticBalance",
            "nameLocation": "6126:15:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 611,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "6150:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6142:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 610,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6142:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6141:14:10"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 614,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 620,
                  "src": "6177:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6177:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6176:9:10"
            },
            "scope": 659,
            "src": "6117:105:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "2e5ab9826bc4b0608acf6d85f6030d9e4115a8dc65618d5df1f76ef7969f187b",
            "id": 624,
            "name": "GasLimitUsed",
            "nameLocation": "6234:12:10",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 622,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "6255:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 624,
                  "src": "6247:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 621,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6247:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6246:18:10"
            },
            "src": "6228:37:10"
          },
          {
            "body": {
              "id": 657,
              "nodeType": "Block",
              "src": "6335:280:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 630,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6353:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6357:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6353:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 632,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 727,
                            "src": "6367:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6367:7:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6353:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e617574686f72697a65643a2043616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6376:39:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_23c7b28284d33b0f28e42417a8c6f67867b8e072d02ed46d68844ce200de583f",
                          "typeString": "literal_string \"Unauthorized: Caller is not the owner\""
                        },
                        "value": "Unauthorized: Caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_23c7b28284d33b0f28e42417a8c6f67867b8e072d02ed46d68844ce200de583f",
                          "typeString": "literal_string \"Unauthorized: Caller is not the owner\""
                        }
                      ],
                      "id": 629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6345:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6345:71:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 637,
                  "nodeType": "ExpressionStatement",
                  "src": "6345:71:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 639,
                          "name": "proposalEndTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "6434:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 640,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6452:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6458:9:10",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "6452:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6434:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416e6f746865722070726f706f73616c206973207374696c6c206163746976652e",
                        "id": 643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6469:35:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef7d74fd8da64cedd13490ecf811eb08aad5e54477eb58d381814541f090d8fd",
                          "typeString": "literal_string \"Another proposal is still active.\""
                        },
                        "value": "Another proposal is still active."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef7d74fd8da64cedd13490ecf811eb08aad5e54477eb58d381814541f090d8fd",
                          "typeString": "literal_string \"Another proposal is still active.\""
                        }
                      ],
                      "id": 638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6426:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6426:79:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 645,
                  "nodeType": "ExpressionStatement",
                  "src": "6426:79:10"
                },
                {
                  "expression": {
                    "id": 648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 646,
                      "name": "proposedNewCommissionAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "6515:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 647,
                      "name": "newAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "6546:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6515:41:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 649,
                  "nodeType": "ExpressionStatement",
                  "src": "6515:41:10"
                },
                {
                  "expression": {
                    "id": 655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 650,
                      "name": "proposalEndTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "6566:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 651,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6584:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6590:9:10",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6584:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 653,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6602:6:10",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_259200_by_1",
                          "typeString": "int_const 259200"
                        },
                        "value": "3"
                      },
                      "src": "6584:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6566:42:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 656,
                  "nodeType": "ExpressionStatement",
                  "src": "6566:42:10"
                }
              ]
            },
            "functionSelector": "2b7d33c2",
            "id": 658,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "proposeNewCommissionAddress",
            "nameLocation": "6280:27:10",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 626,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "6316:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 658,
                  "src": "6308:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6308:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6307:20:10"
            },
            "returnParameters": {
              "id": 628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6335:0:10"
            },
            "scope": 659,
            "src": "6271:344:10",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 660,
        "src": "650:5967:10",
        "usedErrors": [
          673,
          678,
          1757,
          1762,
          1767,
          1776,
          1781,
          1786
        ],
        "usedEvents": [
          52,
          58,
          624,
          684,
          1894,
          1903
        ]
      }
    ],
    "src": "32:6586:10"
  },
  "bytecode": "",
  "bytecodeSha1": "bc73418b9a6146018e9eb74d8fa38e8c3a91d239",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.25+commit.b61c2a91"
  },
  "contractName": "CalFundToken",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable._checkOwner": {
          "104": [
            1855,
            1878,
            false
          ]
        },
        "Ownable.transferOwnership": {
          "103": [
            2627,
            2649,
            false
          ]
        }
      },
      "1": {},
      "10": {
        "CalFundToken.extractGasSubsidy": {
          "87": [
            3820,
            3853,
            false
          ]
        },
        "CalFundToken.mint": {
          "80": [
            2494,
            2508,
            false
          ],
          "81": [
            2512,
            2548,
            false
          ]
        },
        "CalFundToken.proposeNewCommissionAddress": {
          "78": [
            6353,
            6374,
            true
          ],
          "79": [
            6434,
            6467,
            true
          ]
        },
        "CalFundToken.provideGasSubsidy": {
          "88": [
            4227,
            4240,
            false
          ],
          "89": [
            4421,
            4434,
            false
          ],
          "90": [
            4577,
            4623,
            false
          ],
          "91": [
            4729,
            4753,
            false
          ],
          "92": [
            4859,
            4891,
            false
          ]
        },
        "CalFundToken.transfer": {
          "82": [
            2843,
            2857,
            false
          ],
          "83": [
            2877,
            2910,
            false
          ],
          "84": [
            2914,
            2950,
            false
          ],
          "85": [
            3188,
            3221,
            false
          ],
          "86": [
            3303,
            3339,
            false
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "98": [
            10061,
            10080,
            false
          ],
          "99": [
            10159,
            10180,
            false
          ]
        },
        "ERC20._mint": {
          "97": [
            7791,
            7812,
            false
          ]
        },
        "ERC20._spendAllowance": {
          "93": [
            10828,
            10865,
            false
          ],
          "94": [
            10885,
            10909,
            false
          ]
        },
        "ERC20._transfer": {
          "95": [
            5739,
            5757,
            false
          ],
          "96": [
            5834,
            5850,
            false
          ]
        },
        "ERC20._update": {
          "100": [
            6360,
            6378,
            false
          ],
          "101": [
            6603,
            6622,
            false
          ],
          "102": [
            6910,
            6926,
            false
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._checkOwner": {
          "44": [
            1851,
            1952
          ]
        },
        "Ownable._transferOwnership": {
          "58": [
            3020,
            3037
          ],
          "59": [
            3047,
            3092
          ]
        },
        "Ownable.owner": {
          "4": [
            1703,
            1716
          ]
        },
        "Ownable.renounceOwnership": {
          "20": [
            2357,
            2387
          ]
        },
        "Ownable.transferOwnership": {
          "36": [
            2623,
            2714
          ],
          "37": [
            2723,
            2751
          ]
        }
      },
      "1": {},
      "10": {
        "CalFundToken.createPair": {
          "22": [
            1932,
            2005
          ],
          "23": [
            2015,
            2076
          ],
          "24": [
            2086,
            2146
          ],
          "25": [
            2243,
            2284
          ]
        },
        "CalFundToken.extractGasSubsidy": {
          "45": [
            3869,
            3905
          ],
          "46": [
            3968,
            3982
          ],
          "47": [
            4054,
            4085
          ]
        },
        "CalFundToken.getMaticBalance": {
          "2": [
            6196,
            6215
          ]
        },
        "CalFundToken.mint": {
          "18": [
            2451,
            2479
          ],
          "19": [
            2564,
            2604
          ]
        },
        "CalFundToken.proposeNewCommissionAddress": {
          "13": [
            6345,
            6416
          ],
          "14": [
            6426,
            6505
          ],
          "15": [
            6515,
            6556
          ],
          "16": [
            6566,
            6608
          ]
        },
        "CalFundToken.provideGasSubsidy": {
          "50": [
            4256,
            4300
          ],
          "51": [
            4314,
            4321
          ],
          "52": [
            4450,
            4494
          ],
          "53": [
            4508,
            4515
          ],
          "54": [
            4639,
            4683
          ],
          "55": [
            4769,
            4813
          ],
          "56": [
            4907,
            4951
          ],
          "57": [
            4992,
            5038
          ]
        },
        "CalFundToken.setMaticAddress": {
          "32": [
            1737,
            1758
          ]
        },
        "CalFundToken.setUniswapFactory": {
          "35": [
            1366,
            1410
          ]
        },
        "CalFundToken.setUniswapPair": {
          "34": [
            1619,
            1654
          ]
        },
        "CalFundToken.setUniswapRouter": {
          "33": [
            1495,
            1538
          ]
        },
        "CalFundToken.setWmaticAddress": {
          "17": [
            1843,
            1868
          ]
        },
        "CalFundToken.swapTokensForWMatic": {
          "71": [
            5275,
            5287
          ],
          "72": [
            5366,
            5391
          ],
          "73": [
            5419,
            5442
          ],
          "74": [
            5730,
            5742
          ],
          "75": [
            5687,
            5698
          ]
        },
        "CalFundToken.transfer": {
          "26": [
            2970,
            2985
          ],
          "27": [
            3060,
            3101
          ],
          "28": [
            3119,
            3163
          ],
          "29": [
            3241,
            3278
          ],
          "30": [
            3359,
            3399
          ],
          "31": [
            3434,
            3478
          ]
        },
        "CalFundToken.unwrapWMatic": {
          "76": [
            5921,
            5933
          ],
          "77": [
            5878,
            5889
          ]
        }
      },
      "2": {
        "ERC20._approve": {
          "38": [
            9073,
            9110
          ],
          "61": [
            10057,
            10146
          ],
          "62": [
            10155,
            10245
          ],
          "63": [
            10254,
            10289
          ],
          "64": [
            10328,
            10364
          ]
        },
        "ERC20._mint": {
          "48": [
            7787,
            7878
          ],
          "49": [
            7887,
            7922
          ]
        },
        "ERC20._spendAllowance": {
          "39": [
            10881,
            11011
          ],
          "40": [
            11052,
            11109
          ]
        },
        "ERC20._transfer": {
          "41": [
            5735,
            5821
          ],
          "42": [
            5830,
            5916
          ],
          "43": [
            5925,
            5949
          ]
        },
        "ERC20._update": {
          "65": [
            6496,
            6517
          ],
          "66": [
            6599,
            6714
          ],
          "67": [
            6834,
            6871
          ],
          "68": [
            7073,
            7094
          ],
          "69": [
            7284,
            7306
          ],
          "70": [
            7341,
            7371
          ]
        },
        "ERC20.allowance": {
          "5": [
            3945,
            3979
          ]
        },
        "ERC20.approve": {
          "8": [
            4420,
            4451
          ],
          "9": [
            4461,
            4472
          ]
        },
        "ERC20.balanceOf": {
          "3": [
            3383,
            3408
          ]
        },
        "ERC20.decimals": {
          "1": [
            3068,
            3077
          ]
        },
        "ERC20.name": {
          "6": [
            2144,
            2156
          ]
        },
        "ERC20.symbol": {
          "21": [
            2348,
            2362
          ]
        },
        "ERC20.totalSupply": {
          "0": [
            3215,
            3234
          ]
        },
        "ERC20.transfer": {
          "60": [
            3733,
            3760
          ]
        },
        "ERC20.transferFrom": {
          "10": [
            5182,
            5219
          ],
          "11": [
            5229,
            5255
          ],
          "12": [
            5265,
            5276
          ]
        }
      },
      "3": {},
      "4": {},
      "5": {
        "Context._msgSender": {
          "7": [
            728,
            745
          ]
        }
      },
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@5.0.2/Context",
    "OpenZeppelin/openzeppelin-contracts@5.0.2/ERC20",
    "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20",
    "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20Errors",
    "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20Metadata",
    "Uniswap/v2-core@1.0.1/IUniswapV2Factory",
    "Uniswap/v2-core@1.0.1/IUniswapV2Pair",
    "Uniswap/v2-periphery@1.0.0-beta.0/IUniswapV2Router01",
    "Uniswap/v2-periphery@1.0.0-beta.0/IUniswapV2Router02",
    "IWMATIC",
    "OpenZeppelin/openzeppelin-contracts@5.0.2/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106101c45760003560e01c80637f6cdf42116100f9578063bea9849e11610097578063dd62ed3e11610071578063dd62ed3e146103b2578063e04b677f146103eb578063f2fde38b146103fe578063fb41be161461041157600080fd5b8063bea9849e14610379578063c816841b1461038c578063d5aed6bf1461039f57600080fd5b806395d89b41116100d357806395d89b41146103435780639e78fb4f1461034b578063a9059cbb14610353578063aa411d5b1461036657600080fd5b80637f6cdf42146103165780638bdb2afa1461031f5780638da5cb5b1461033257600080fd5b80633e37c0dc116101665780635b540060116101405780635b540060146102b757806370a08231146102d2578063715018a6146102fb578063735de9f71461030357600080fd5b80633e37c0dc1461027e57806340c10f191461029157806355ea42a5146102a457600080fd5b806323b872dd116101a257806323b872dd1461021c5780632b7d33c21461022f578063313ce5671461024457806331fbfb631461025357600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d1610424565b6040516101de91906111e8565b60405180910390f35b6101fa6101f536600461124c565b6104b6565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a366004611278565b6104d0565b61024261023d3660046112b9565b6104f4565b005b604051601281526020016101de565b600a54610266906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b61024261028c3660046112b9565b6105ea565b61024261029f36600461124c565b610614565b600b54610266906001600160a01b031681565b61020e6102c53660046112b9565b6001600160a01b03163190565b61020e6102e03660046112b9565b6001600160a01b031660009081526020819052604090205490565b61024261066c565b600654610266906001600160a01b031681565b61020e600c5481565b600754610266906001600160a01b031681565b6005546001600160a01b0316610266565b6101d1610680565b61024261068f565b6101fa61036136600461124c565b610824565b6102426103743660046112b9565b61090b565b6102426103873660046112b9565b610935565b600854610266906001600160a01b031681565b6102426103ad3660046112b9565b61095f565b61020e6103c03660046112dd565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102426103f93660046112b9565b610989565b61024261040c3660046112b9565b6109b3565b600954610266906001600160a01b031681565b60606003805461043390611316565b80601f016020809104026020016040519081016040528092919081815260200182805461045f90611316565b80156104ac5780601f10610481576101008083540402835291602001916104ac565b820191906000526020600020905b81548152906001019060200180831161048f57829003601f168201915b5050505050905090565b6000336104c48185856109f1565b60019150505b92915050565b6000336104de858285610a03565b6104e9858585610a7b565b506001949350505050565b6005546001600160a01b031633146105615760405162461bcd60e51b815260206004820152602560248201527f556e617574686f72697a65643a2043616c6c6572206973206e6f74207468652060448201526437bbb732b960d91b60648201526084015b60405180910390fd5b42600c54106105bc5760405162461bcd60e51b815260206004820152602160248201527f416e6f746865722070726f706f73616c206973207374696c6c206163746976656044820152601760f91b6064820152608401610558565b600b80546001600160a01b0319166001600160a01b0383161790556105e4426203f480611366565b600c5550565b6105f2610ada565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b61061c610ada565b60008061062883610b07565b915091506106368483610b8f565b6000811180156106575750670de0b6b3a76400006001600160a01b03851631105b15610666576106668482610bc9565b50505050565b610674610ada565b61067e6000610d44565b565b60606004805461043390611316565b610697610ada565b6007546001600160a01b03166106ef5760405162461bcd60e51b815260206004820152601760248201527f556e697377617020666163746f7279206e6f74207365740000000000000000006044820152606401610558565b306107345760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610558565b600a546001600160a01b03166107845760405162461bcd60e51b81526020600482015260156024820152741350551250c81859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610558565b600754600a546040516364e329cb60e11b81523060048201526001600160a01b039182166024820152600092919091169063c9c65396906044016020604051808303816000875af11580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190611379565b600880546001600160a01b0319166001600160a01b039290921691909117905550565b600033818061083285610b07565b909250905080156108f757670de0b6b3a76400006001600160a01b0384163110801561086f5750670de0b6b3a76400006001600160a01b03871631105b156108aa5761087f600282611396565b9050600061088e6002836113c3565b905061089a8482610bc9565b6108a48782610bc9565b506108f7565b670de0b6b3a76400006001600160a01b0384163110156108d3576108ce8382610bc9565b6108f7565b670de0b6b3a76400006001600160a01b0387163110156108f7576108f78682610bc9565b6109018683610d96565b9695505050505050565b610913610ada565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b61093d610ada565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b610967610ada565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b610991610ada565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6109bb610ada565b6001600160a01b0381166109e557604051631e4fbdf760e01b815260006004820152602401610558565b6109ee81610d44565b50565b6109fe8383836001610da4565b505050565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146106665781811015610a6c57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610558565b61066684848484036000610da4565b6001600160a01b038316610aa557604051634b637e8f60e11b815260006004820152602401610558565b6001600160a01b038216610acf5760405163ec442f0560e01b815260006004820152602401610558565b6109fe838383610e79565b6005546001600160a01b0316331461067e5760405163118cdaa760e01b8152336004820152602401610558565b600080601281610b1882600a6114ac565b610b2383600a6114ac565b610b2d90876113c3565b610b379190611396565b90506000610b4683600a6114ac565b610b5090876114b8565b9050610b6164e8d4a51000826113c3565b6201e24003610b8057610b7964e8d4a51000826114b8565b9050610b84565b5060005b909590945092505050565b6001600160a01b038216610bb95760405163ec442f0560e01b815260006004820152602401610558565b610bc560008383610e79565b5050565b3a6000819003610c0857604080516001600160a01b038516815260208101849052600080516020611578833981519152910160405180910390a1505050565b6000610c1482846113c3565b905080600003610c5557604080516001600160a01b03861681526020810185905260008051602061157883398151915291015b60405180910390a150505050565b610c5f3084610fa3565b610c9057604080516001600160a01b0386168152602081018590526000805160206115788339815191529101610c47565b610c998361111e565b610cca57604080516001600160a01b0386168152602081018590526000805160206115788339815191529101610c47565b610cd4848461118a565b610d0557604080516001600160a01b0386168152602081018590526000805160206115788339815191529101610c47565b604080516001600160a01b0386168152602081018590527f2eb5406d62014fa2d61fda20a970ce8eb194122574a3b4c95881566c61c9776f9101610c47565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000336104c4818585610a7b565b6001600160a01b038416610dce5760405163e602df0560e01b815260006004820152602401610558565b6001600160a01b038316610df857604051634a1406b160e11b815260006004820152602401610558565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561066657826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610e6b91815260200190565b60405180910390a350505050565b6001600160a01b038316610ea4578060026000828254610e999190611366565b90915550610f169050565b6001600160a01b03831660009081526020819052604090205481811015610ef75760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610558565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610f3257600280548290039055610f51565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f9691815260200190565b60405180910390a3505050565b60065460405163095ea7b360e01b81526001600160a01b03909116600482015260248101829052600090309063095ea7b3906044016020604051808303816000875af1925050508015611013575060408051601f3d908101601f19168201909252611010918101906114cc565b60015b61101f575060006104ca565b50604080516002808252606082018352600092602083019080368337505060095482519293506001600160a01b031691839150600090611061576110616114ee565b60200260200101906001600160a01b031690816001600160a01b0316815250503081600181518110611095576110956114ee565b6001600160a01b039283166020918202929092010152600654604051635c11d79560e01b8152911690635c11d795906110db908690600090869030904290600401611504565b600060405180830381600087803b1580156110f557600080fd5b505af1925050508015611106575060015b6111145760009150506104ca565b60019150506104ca565b600954604051632e1a7d4d60e01b8152600481018390526000916001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561116557600080fd5b505af1925050508015611176575060015b61118257506000919050565b506001919050565b600080836001600160a01b03168360405160006040518083038185875af1925050503d80600081146111d8576040519150601f19603f3d011682016040523d82523d6000602084013e6111dd565b606091505b509095945050505050565b60006020808352835180602085015260005b81811015611216578581018301518582016040015282016111fa565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146109ee57600080fd5b6000806040838503121561125f57600080fd5b823561126a81611237565b946020939093013593505050565b60008060006060848603121561128d57600080fd5b833561129881611237565b925060208401356112a881611237565b929592945050506040919091013590565b6000602082840312156112cb57600080fd5b81356112d681611237565b9392505050565b600080604083850312156112f057600080fd5b82356112fb81611237565b9150602083013561130b81611237565b809150509250929050565b600181811c9082168061132a57607f821691505b60208210810361134a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104ca576104ca611350565b60006020828403121561138b57600080fd5b81516112d681611237565b80820281158282048414176104ca576104ca611350565b634e487b7160e01b600052601260045260246000fd5b6000826113d2576113d26113ad565b500490565b600181815b808511156114125781600019048211156113f8576113f8611350565b8085161561140557918102915b93841c93908002906113dc565b509250929050565b600082611429575060016104ca565b81611436575060006104ca565b816001811461111457600281036114635760ff84111561145857611458611350565b50506001821b6104ca565b5060208310610133831016604e8410600b8410161715611486575081810a6104ca565b61149083836113d7565b80600019048211156114a4576114a4611350565b029392505050565b60006112d6838361141a565b6000826114c7576114c76113ad565b500690565b6000602082840312156114de57600080fd5b815180151581146112d657600080fd5b634e487b7160e01b600052603260045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156115565784516001600160a01b031683529383019391830191600101611531565b50506001600160a01b0396909616606085015250505060800152939250505056feae212e7019f7285aa63e1c08bef427365d16328daffa39134c83274413f16e9aa2646970667358221220e9243920a666d41ba68bfc3058c87a9f425d3b324317b558ff593118b64551d164736f6c63430008190033",
  "deployedSourceMap": "650:5967:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1188:14:11;;1181:22;1163:41;;1151:2;1136:18;4293:186:2;1023:187:11;3144:97:2;3222:12;;3144:97;;;1361:25:11;;;1349:2;1334:18;3144:97:2;1215:177:11;5039:244:2;;;;;;:::i;:::-;;:::i;6271:344:10:-;;;;;;:::i;:::-;;:::i;:::-;;3002:82:2;;;3075:2;2252:36:11;;2240:2;2225:18;3002:82:2;2110:184:11;852:27:10;;;;;-1:-1:-1;;;;;852:27:10;;;;;;-1:-1:-1;;;;;2463:32:11;;;2445:51;;2433:2;2418:18;852:27:10;2299:203:11;1771:104:10;;;;;;:::i;:::-;;:::i;2297:324::-;;;;;;:::i;:::-;;:::i;885:43::-;;;;;-1:-1:-1;;;;;885:43:10;;;6117:105;;;;;;:::i;:::-;-1:-1:-1;;;;;6203:12:10;;;6117:105;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;696:39:10:-;;;;;-1:-1:-1;;;;;696:39:10;;;934:30;;;;;;741:39;;;;;-1:-1:-1;;;;;741:39:10;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2276:93:2;;;:::i;1881:410:10:-;;;:::i;2627:858::-;;;;;;:::i;:::-;;:::i;1667:98::-;;;;;;:::i;:::-;;:::i;1423:122::-;;;;;;:::i;:::-;;:::i;786:33::-;;;;;-1:-1:-1;;;;;786:33:10;;;1551:110;;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1292:125:10;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;825:21:10:-;;;;;-1:-1:-1;;;;;825:21:10;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;6271:344:10:-;1710:6:0;;-1:-1:-1;;;;;1710:6:0;6353:10:10;:21;6345:71;;;;-1:-1:-1;;;6345:71:10;;4409:2:11;6345:71:10;;;4391:21:11;4448:2;4428:18;;;4421:30;4487:34;4467:18;;;4460:62;-1:-1:-1;;;4538:18:11;;;4531:35;4583:19;;6345:71:10;;;;;;;;;6452:15;6434;;:33;6426:79;;;;-1:-1:-1;;;6426:79:10;;4815:2:11;6426:79:10;;;4797:21:11;4854:2;4834:18;;;4827:30;4893:34;4873:18;;;4866:62;-1:-1:-1;;;4944:18:11;;;4937:31;4985:19;;6426:79:10;4613:397:11;6426:79:10;6515:28;:41;;-1:-1:-1;;;;;;6515:41:10;-1:-1:-1;;;;;6515:41:10;;;;;6584:24;:15;6602:6;6584:24;:::i;:::-;6566:15;:42;-1:-1:-1;6271:344:10:o;1771:104::-;1531:13:0;:11;:13::i;:::-;1843:6:10::1;:25:::0;;-1:-1:-1;;;;;;1843:25:10::1;-1:-1:-1::0;;;;;1843:25:10;;;::::1;::::0;;;::::1;::::0;;1771:104::o;2297:324::-;1531:13:0;:11;:13::i;:::-;2374:18:10::1;2394::::0;2416:25:::1;2434:6;2416:17;:25::i;:::-;2373:68;;;;2451:28;2457:9;2468:10;2451:5;:28::i;:::-;2507:1;2494:10;:14;:54;;;;-1:-1:-1::0;2541:7:10::1;-1:-1:-1::0;;;;;6203:12:10;;;2512:36:::1;2494:54;2490:125;;;2564:40;2582:9;2593:10;2564:17;:40::i;:::-;2363:258;;2297:324:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;1881:410:10:-;1531:13:0;:11;:13::i;:::-;1948:14:10::1;::::0;-1:-1:-1;;;;;1948:14:10::1;1932:73;;;::::0;-1:-1:-1;;;1932:73:10;;5479:2:11;1932:73:10::1;::::0;::::1;5461:21:11::0;5518:2;5498:18;;;5491:30;5557:25;5537:18;;;5530:53;5600:18;;1932:73:10::1;5277:347:11::0;1932:73:10::1;2031:4;2015:61;;;::::0;-1:-1:-1;;;2015:61:10;;5831:2:11;2015:61:10::1;::::0;::::1;5813:21:11::0;5870:2;5850:18;;;5843:30;-1:-1:-1;;;5889:18:11;;;5882:51;5950:18;;2015:61:10::1;5629:345:11::0;2015:61:10::1;2094:12;::::0;-1:-1:-1;;;;;2094:12:10::1;2086:60;;;::::0;-1:-1:-1;;;2086:60:10;;6181:2:11;2086:60:10::1;::::0;::::1;6163:21:11::0;6220:2;6200:18;;;6193:30;-1:-1:-1;;;6239:18:11;;;6232:51;6300:18;;2086:60:10::1;5979:345:11::0;2086:60:10::1;2179:14;::::0;2220:12:::1;::::0;2179:54:::1;::::0;-1:-1:-1;;;2179:54:10;;2213:4:::1;2179:54;::::0;::::1;6541:34:11::0;-1:-1:-1;;;;;2220:12:10;;::::1;6591:18:11::0;;;6584:43;2157:19:10::1;::::0;2179:14;;;::::1;::::0;:25:::1;::::0;6476:18:11;;2179:54:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2243:11;:41:::0;;-1:-1:-1;;;;;;2243:41:10::1;-1:-1:-1::0;;;;;2243:41:10;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1881:410:10:o;2627:858::-;2705:4;735:10:5;2705:4:10;;2803:25;2821:6;2803:17;:25::i;:::-;2760:68;;-1:-1:-1;2760:68:10;-1:-1:-1;2843:14:10;;2839:585;;2903:7;-1:-1:-1;;;;;6203:12:10;;;2877:33;:73;;;;-1:-1:-1;2943:7:10;-1:-1:-1;;;;;6203:12:10;;;2914:36;2877:73;2873:541;;;2970:15;2984:1;2970:15;;:::i;:::-;;-1:-1:-1;3003:22:10;3028:14;3041:1;2970:15;3028:14;:::i;:::-;3003:39;;3060:41;3078:6;3086:14;3060:17;:41::i;:::-;3119:44;3137:9;3148:14;3119:17;:44::i;:::-;2952:226;2873:541;;;3214:7;-1:-1:-1;;;;;6203:12:10;;;3188:33;3184:230;;;3241:37;3259:6;3267:10;3241:17;:37::i;:::-;3184:230;;;3332:7;-1:-1:-1;;;;;6203:12:10;;;3303:36;3299:115;;;3359:40;3377:9;3388:10;3359:17;:40::i;:::-;3441:37;3456:9;3467:10;3441:14;:37::i;:::-;3434:44;2627:858;-1:-1:-1;;;;;;2627:858:10:o;1667:98::-;1531:13:0;:11;:13::i;:::-;1737:12:10::1;:21:::0;;-1:-1:-1;;;;;;1737:21:10::1;-1:-1:-1::0;;;;;1737:21:10;;;::::1;::::0;;;::::1;::::0;;1667:98::o;1423:122::-;1531:13:0;:11;:13::i;:::-;1495::10::1;:43:::0;;-1:-1:-1;;;;;;1495:43:10::1;-1:-1:-1::0;;;;;1495:43:10;;;::::1;::::0;;;::::1;::::0;;1423:122::o;1551:110::-;1531:13:0;:11;:13::i;:::-;1619:11:10::1;:35:::0;;-1:-1:-1;;;;;;1619:35:10::1;-1:-1:-1::0;;;;;1619:35:10;;;::::1;::::0;;;::::1;::::0;;1551:110::o;1292:125::-;1531:13:0;:11;:13::i;:::-;1366:14:10::1;:44:::0;;-1:-1:-1;;;;;;1366:44:10::1;-1:-1:-1::0;;;;;1366:44:10;;;::::1;::::0;;;::::1;::::0;;1292:125::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2445:51:11::0;2418:18;;2672:31:0::1;2299:203:11::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;7544:32:11;;10936:60:2;;;7526:51:11;7593:18;;;7586:34;;;7636:18;;;7629:34;;;7499:18;;10936:60:2;7324:345:11;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2445:51:11;2418:18;;5780:30:2;2299:203:11;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2445:51:11;2418:18;;5873:32:2;2299:203:11;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2445:51:11;2418:18;;1901:40:0;2299:203:11;3491:601:10;3557:7;;3604:2;3557:7;3666:14;3604:2;3666;:14;:::i;:::-;3647;3653:8;3647:2;:14;:::i;:::-;3637:25;;:6;:25;:::i;:::-;:44;;;;:::i;:::-;3616:65;-1:-1:-1;3691:18:10;3722:14;3728:8;3722:2;:14;:::i;:::-;3712:25;;:6;:25;:::i;:::-;3691:46;-1:-1:-1;3820:23:10;3834:8;3691:46;3820:23;:::i;:::-;3847:6;3820:33;3816:228;;3882:23;3896:8;3882:10;:23;:::i;:::-;3869:36;;3816:228;;;-1:-1:-1;3981:1:10;3816:228;4062:10;;4074;;-1:-1:-1;3491:601:10;-1:-1:-1;;;3491:601:10:o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2445:51:11;2418:18;;7835:32:2;2299:203:11;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;4098:947:10:-;4202:11;4183:16;4227:13;;;4223:134;;4261:39;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;-1:-1:-1;;;;;;;;;;;4261:39:10;9306:18:11;4261:39:10;;;;;;;4314:7;4098:947;;:::o;4223:134::-;4367:16;4386:21;4399:8;4386:10;:21;:::i;:::-;4367:40;;4421:8;4433:1;4421:13;4417:145;;4455:39;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;-1:-1:-1;;;;;;;;;;;4455:39:10;9306:18:11;4455:39:10;;;;;;;;4508:7;;4098:947;;:::o;4417:145::-;4577:46;4605:4;4612:10;4577:19;:46::i;:::-;4572:142;;4644:39;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;-1:-1:-1;;;;;;;;;;;4644:39:10;9306:18:11;4644:39:10;9159:274:11;4572:142:10;4729:24;4742:10;4729:12;:24::i;:::-;4724:120;;4774:39;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;-1:-1:-1;;;;;;;;;;;4774:39:10;9306:18:11;4774:39:10;9159:274:11;4724:120:10;4859:32;4869:9;4880:10;4859:9;:32::i;:::-;4854:128;;4912:39;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;-1:-1:-1;;;;;;;;;;;4912:39:10;9306:18:11;4912:39:10;9159:274:11;4854:128:10;4997:41;;;-1:-1:-1;;;;;9351:32:11;;9333:51;;9415:2;9400:18;;9393:34;;;4997:41:10;;9306:18:11;4997:41:10;9159:274:11;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2445:51:11;2418:18;;10103:32:2;2299:203:11;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2445:51:11;2418:18;;10203:31:2;2299:203:11;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1361:25:11;;1349:2;1334:18;;1215:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;7544:32:11;;6649:50:2;;;7526:51:11;7593:18;;;7586:34;;;7636:18;;;7629:34;;;7499:18;;6649:50:2;7324:345:11;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1361::11;;1349:2;1334:18;;1215:177;7346:25:2;;;;;;;;6271:1107;;;:::o;5051:708:10:-;5223:13;;5202:49;;-1:-1:-1;;;5202:49:10;;-1:-1:-1;;;;;5223:13:10;;;5202:49;;;9333:51:11;9400:18;;;9393:34;;;5132:4:10;;5202;;:12;;9306:18:11;;5202:49:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;5202:49:10;;;;;;;;-1:-1:-1;;5202:49:10;;;;;;;;;;;;:::i;:::-;;;5198:100;;-1:-1:-1;5282:5:10;5275:12;;5198:100;-1:-1:-1;5340:16:10;;;5354:1;5340:16;;;;;;;;5316:21;;5340:16;;;;;;;;-1:-1:-1;;5384:6:10;;5366:7;;;;-1:-1:-1;;;;;;5384:6:10;;5366:7;;-1:-1:-1;5384:6:10;;5366:7;;;;:::i;:::-;;;;;;:25;-1:-1:-1;;;;;5366:25:10;;;-1:-1:-1;;;;;5366:25:10;;;;;5437:4;5419;5424:1;5419:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5419:23:10;;;:7;;;;;;;;;:23;5481:13;;:191;;-1:-1:-1;;;5481:191:10;;:13;;;:67;;:191;;5562:11;;5481:13;;5602:4;;5628;;5647:15;;5481:191;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5477:276;;5737:5;5730:12;;;;;5477:276;5694:4;5687:11;;;;;5765:185;5840:6;;:23;;-1:-1:-1;;;5840:23:10;;;;;1361:25:11;;;5820:4:10;;-1:-1:-1;;;;;5840:6:10;;:15;;1334:18:11;;5840:23:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5836:108;;-1:-1:-1;5928:5:10;;5765:185;-1:-1:-1;5765:185:10:o;5836:108::-;-1:-1:-1;5885:4:10;;5765:185;-1:-1:-1;5765:185:10:o;5956:155::-;6020:4;6037:12;6054:2;-1:-1:-1;;;;;6054:7:10;6069:6;6054:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6036:44:10;;5956:155;-1:-1:-1;;;;;5956:155:10:o;14:548:11:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:131::-;-1:-1:-1;;;;;642:31:11;;632:42;;622:70;;688:1;685;678:12;703:315;771:6;779;832:2;820:9;811:7;807:23;803:32;800:52;;;848:1;845;838:12;800:52;887:9;874:23;906:31;931:5;906:31;:::i;:::-;956:5;1008:2;993:18;;;;980:32;;-1:-1:-1;;;703:315:11:o;1397:456::-;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1598:9;1585:23;1617:31;1642:5;1617:31;:::i;:::-;1667:5;-1:-1:-1;1724:2:11;1709:18;;1696:32;1737:33;1696:32;1737:33;:::i;:::-;1397:456;;1789:7;;-1:-1:-1;;;1843:2:11;1828:18;;;;1815:32;;1397:456::o;1858:247::-;1917:6;1970:2;1958:9;1949:7;1945:23;1941:32;1938:52;;;1986:1;1983;1976:12;1938:52;2025:9;2012:23;2044:31;2069:5;2044:31;:::i;:::-;2094:5;1858:247;-1:-1:-1;;;1858:247:11:o;3207:388::-;3275:6;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3517:2:11;3502:18;;3489:32;3530:33;3489:32;3530:33;:::i;:::-;3582:7;3572:17;;;3207:388;;;;;:::o;3822:380::-;3901:1;3897:12;;;;3944;;;3965:61;;4019:4;4011:6;4007:17;3997:27;;3965:61;4072:2;4064:6;4061:14;4041:18;4038:38;4035:161;;4118:10;4113:3;4109:20;4106:1;4099:31;4153:4;4150:1;4143:15;4181:4;4178:1;4171:15;4035:161;;3822:380;;;:::o;5015:127::-;5076:10;5071:3;5067:20;5064:1;5057:31;5107:4;5104:1;5097:15;5131:4;5128:1;5121:15;5147:125;5212:9;;;5233:10;;;5230:36;;;5246:18;;:::i;6638:251::-;6708:6;6761:2;6749:9;6740:7;6736:23;6732:32;6729:52;;;6777:1;6774;6767:12;6729:52;6809:9;6803:16;6828:31;6853:5;6828:31;:::i;6894:168::-;6967:9;;;6998;;7015:15;;;7009:22;;6995:37;6985:71;;7036:18;;:::i;7067:127::-;7128:10;7123:3;7119:20;7116:1;7109:31;7159:4;7156:1;7149:15;7183:4;7180:1;7173:15;7199:120;7239:1;7265;7255:35;;7270:18;;:::i;:::-;-1:-1:-1;7304:9:11;;7199:120::o;7674:416::-;7763:1;7800:5;7763:1;7814:270;7835:7;7825:8;7822:21;7814:270;;;7894:4;7890:1;7886:6;7882:17;7876:4;7873:27;7870:53;;;7903:18;;:::i;:::-;7953:7;7943:8;7939:22;7936:55;;;7973:16;;;;7936:55;8052:22;;;;8012:15;;;;7814:270;;;7818:3;7674:416;;;;;:::o;8095:806::-;8144:5;8174:8;8164:80;;-1:-1:-1;8215:1:11;8229:5;;8164:80;8263:4;8253:76;;-1:-1:-1;8300:1:11;8314:5;;8253:76;8345:4;8363:1;8358:59;;;;8431:1;8426:130;;8338:218;8426:130;8463:3;8453:8;8450:17;8447:43;;;8470:18;;:::i;:::-;-1:-1:-1;;8526:1:11;8512:16;;8541:5;;8338:218;;8640:2;8630:8;8627:16;8621:3;8615:4;8612:13;8608:36;8602:2;8592:8;8589:16;8584:2;8578:4;8575:12;8571:35;8568:77;8565:159;;;-1:-1:-1;8677:19:11;;;8709:5;;8565:159;8756:34;8781:8;8775:4;8756:34;:::i;:::-;8826:6;8822:1;8818:6;8814:19;8805:7;8802:32;8799:58;;;8837:18;;:::i;:::-;8875:20;;8095:806;-1:-1:-1;;;8095:806:11:o;8906:131::-;8966:5;8995:36;9022:8;9016:4;8995:36;:::i;9042:112::-;9074:1;9100;9090:35;;9105:18;;:::i;:::-;-1:-1:-1;9139:9:11;;9042:112::o;9438:277::-;9505:6;9558:2;9546:9;9537:7;9533:23;9529:32;9526:52;;;9574:1;9571;9564:12;9526:52;9606:9;9600:16;9659:5;9652:13;9645:21;9638:5;9635:32;9625:60;;9681:1;9678;9671:12;9852:127;9913:10;9908:3;9904:20;9901:1;9894:31;9944:4;9941:1;9934:15;9968:4;9965:1;9958:15;9984:980;10246:4;10294:3;10283:9;10279:19;10325:6;10314:9;10307:25;10351:2;10389:6;10384:2;10373:9;10369:18;10362:34;10432:3;10427:2;10416:9;10412:18;10405:31;10456:6;10491;10485:13;10522:6;10514;10507:22;10560:3;10549:9;10545:19;10538:26;;10599:2;10591:6;10587:15;10573:29;;10620:1;10630:195;10644:6;10641:1;10638:13;10630:195;;;10709:13;;-1:-1:-1;;;;;10705:39:11;10693:52;;10800:15;;;;10765:12;;;;10741:1;10659:9;10630:195;;;-1:-1:-1;;;;;;;10881:32:11;;;;10876:2;10861:18;;10854:60;-1:-1:-1;;;10945:3:11;10930:19;10923:35;10842:3;9984:980;-1:-1:-1;;;9984:980:11:o",
  "language": "Solidity",
  "natspec": {
    "errors": {
      "ERC20InsufficientAllowance(address,uint256,uint256)": [
        {
          "details": "Indicates a failure with the `spender`\u2019s `allowance`. Used in transfers.",
          "params": {
            "allowance": "Amount of tokens a `spender` is allowed to operate with.",
            "needed": "Minimum amount required to perform a transfer.",
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "ERC20InsufficientBalance(address,uint256,uint256)": [
        {
          "details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
          "params": {
            "balance": "Current balance for the interacting account.",
            "needed": "Minimum amount required to perform a transfer.",
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidApprover(address)": [
        {
          "details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
          "params": {
            "approver": "Address initiating an approval operation."
          }
        }
      ],
      "ERC20InvalidReceiver(address)": [
        {
          "details": "Indicates a failure with the token `receiver`. Used in transfers.",
          "params": {
            "receiver": "Address to which tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSender(address)": [
        {
          "details": "Indicates a failure with the token `sender`. Used in transfers.",
          "params": {
            "sender": "Address whose tokens are being transferred."
          }
        }
      ],
      "ERC20InvalidSpender(address)": [
        {
          "details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
          "params": {
            "spender": "Address that may be allowed to operate on tokens without being their owner."
          }
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    650,
    6617
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F6CDF42 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBEA9849E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xE04B677F EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xFB41BE16 EQ PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA9849E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xD5AED6BF EQ PUSH2 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0x9E78FB4F EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x353 JUMPI DUP1 PUSH4 0xAA411D5B EQ PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F6CDF42 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH2 0x31F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E37C0DC GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5B540060 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5B540060 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E37C0DC EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x55EA42A5 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x2B7D33C2 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x31FBFB63 EQ PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x424 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x11E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x1F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x124C JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0x1278 JUMP JUMPDEST PUSH2 0x4D0 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x242 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x5EA JUMP JUMPDEST PUSH2 0x242 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x124C JUMP JUMPDEST PUSH2 0x614 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0x20E PUSH2 0x2E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x66C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x20E PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x266 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x680 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x68F JUMP JUMPDEST PUSH2 0x1FA PUSH2 0x361 CALLDATASIZE PUSH1 0x4 PUSH2 0x124C JUMP JUMPDEST PUSH2 0x824 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x374 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x90B JUMP JUMPDEST PUSH2 0x242 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x935 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3AD CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x95F JUMP JUMPDEST PUSH2 0x20E PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x12DD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x3F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x989 JUMP JUMPDEST PUSH2 0x242 PUSH2 0x40C CALLDATASIZE PUSH1 0x4 PUSH2 0x12B9 JUMP JUMPDEST PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x433 SWAP1 PUSH2 0x1316 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45F SWAP1 PUSH2 0x1316 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x481 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C4 DUP2 DUP6 DUP6 PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4DE DUP6 DUP3 DUP6 PUSH2 0xA03 JUMP JUMPDEST PUSH2 0x4E9 DUP6 DUP6 DUP6 PUSH2 0xA7B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x561 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E617574686F72697A65643A2043616C6C6572206973206E6F742074686520 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0xC SLOAD LT PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416E6F746865722070726F706F73616C206973207374696C6C20616374697665 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH2 0x5E4 TIMESTAMP PUSH3 0x3F480 PUSH2 0x1366 JUMP JUMPDEST PUSH1 0xC SSTORE POP JUMP JUMPDEST PUSH2 0x5F2 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x61C PUSH2 0xADA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x628 DUP4 PUSH2 0xB07 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x636 DUP5 DUP4 PUSH2 0xB8F JUMP JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x657 JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND BALANCE LT JUMPDEST ISZERO PUSH2 0x666 JUMPI PUSH2 0x666 DUP5 DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x674 PUSH2 0xADA JUMP JUMPDEST PUSH2 0x67E PUSH1 0x0 PUSH2 0xD44 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x433 SWAP1 PUSH2 0x1316 JUMP JUMPDEST PUSH2 0x697 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617020666163746F7279206E6F7420736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST ADDRESS PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x784 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1350551250C81859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xC9C65396 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7DD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x801 SWAP2 SWAP1 PUSH2 0x1379 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 DUP1 PUSH2 0x832 DUP6 PUSH2 0xB07 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP DUP1 ISZERO PUSH2 0x8F7 JUMPI PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND BALANCE LT DUP1 ISZERO PUSH2 0x86F JUMPI POP PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND BALANCE LT JUMPDEST ISZERO PUSH2 0x8AA JUMPI PUSH2 0x87F PUSH1 0x2 DUP3 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x88E PUSH1 0x2 DUP4 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP PUSH2 0x89A DUP5 DUP3 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x8A4 DUP8 DUP3 PUSH2 0xBC9 JUMP JUMPDEST POP PUSH2 0x8F7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND BALANCE LT ISZERO PUSH2 0x8D3 JUMPI PUSH2 0x8CE DUP4 DUP3 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x8F7 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND BALANCE LT ISZERO PUSH2 0x8F7 JUMPI PUSH2 0x8F7 DUP7 DUP3 PUSH2 0xBC9 JUMP JUMPDEST PUSH2 0x901 DUP7 DUP4 PUSH2 0xD96 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x913 PUSH2 0xADA JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x93D PUSH2 0xADA JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x967 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x991 PUSH2 0xADA JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x9BB PUSH2 0xADA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x9EE DUP2 PUSH2 0xD44 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x9FE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xDA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x666 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x666 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xDA4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xAA5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xACF JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0x9FE DUP4 DUP4 DUP4 PUSH2 0xE79 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x12 DUP2 PUSH2 0xB18 DUP3 PUSH1 0xA PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xB23 DUP4 PUSH1 0xA PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xB2D SWAP1 DUP8 PUSH2 0x13C3 JUMP JUMPDEST PUSH2 0xB37 SWAP2 SWAP1 PUSH2 0x1396 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB46 DUP4 PUSH1 0xA PUSH2 0x14AC JUMP JUMPDEST PUSH2 0xB50 SWAP1 DUP8 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB61 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x13C3 JUMP JUMPDEST PUSH3 0x1E240 SUB PUSH2 0xB80 JUMPI PUSH2 0xB79 PUSH5 0xE8D4A51000 DUP3 PUSH2 0x14B8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB84 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH2 0xBC5 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE79 JUMP JUMPDEST POP POP JUMP JUMPDEST GASPRICE PUSH1 0x0 DUP2 SWAP1 SUB PUSH2 0xC08 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1578 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC14 DUP3 DUP5 PUSH2 0x13C3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0xC55 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1578 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0xC5F ADDRESS DUP5 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0xC90 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1578 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xC99 DUP4 PUSH2 0x111E JUMP JUMPDEST PUSH2 0xCCA JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1578 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xCD4 DUP5 DUP5 PUSH2 0x118A JUMP JUMPDEST PUSH2 0xD05 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1578 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 ADD PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x2EB5406D62014FA2D61FDA20A970CE8EB194122574A3B4C95881566C61C9776F SWAP2 ADD PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C4 DUP2 DUP6 DUP6 PUSH2 0xA7B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xDCE JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDF8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x666 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xE6B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xEA4 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xE99 SWAP2 SWAP1 PUSH2 0x1366 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xF16 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x558 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF32 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF96 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1013 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1010 SWAP2 DUP2 ADD SWAP1 PUSH2 0x14CC JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x101F JUMPI POP PUSH1 0x0 PUSH2 0x4CA JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x9 SLOAD DUP3 MLOAD SWAP3 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP4 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1061 JUMPI PUSH2 0x1061 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP ADDRESS DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1095 JUMPI PUSH2 0x1095 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x5C11D795 SWAP1 PUSH2 0x10DB SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1504 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1106 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1114 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1176 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x1182 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11DD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1216 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x11FA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x125F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x126A DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1298 DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x12A8 DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12D6 DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x12FB DUP2 PUSH2 0x1237 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x130B DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x132A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x134A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4CA JUMPI PUSH2 0x4CA PUSH2 0x1350 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x12D6 DUP2 PUSH2 0x1237 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4CA JUMPI PUSH2 0x4CA PUSH2 0x1350 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x13D2 JUMPI PUSH2 0x13D2 PUSH2 0x13AD JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x1412 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x13F8 JUMPI PUSH2 0x13F8 PUSH2 0x1350 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x1405 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x13DC JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1429 JUMPI POP PUSH1 0x1 PUSH2 0x4CA JUMP JUMPDEST DUP2 PUSH2 0x1436 JUMPI POP PUSH1 0x0 PUSH2 0x4CA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1114 JUMPI PUSH1 0x2 DUP2 SUB PUSH2 0x1463 JUMPI PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1458 PUSH2 0x1350 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x4CA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x1486 JUMPI POP DUP2 DUP2 EXP PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x1490 DUP4 DUP4 PUSH2 0x13D7 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x14A4 JUMPI PUSH2 0x14A4 PUSH2 0x1350 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D6 DUP4 DUP4 PUSH2 0x141A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x14C7 JUMPI PUSH2 0x14C7 PUSH2 0x13AD JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x12D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1556 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1531 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID 0xAE 0x21 0x2E PUSH17 0x19F7285AA63E1C08BEF427365D16328DAF STATICCALL CODECOPY SGT 0x4C DUP4 0x27 DIFFICULTY SGT CALL PUSH15 0x9AA2646970667358221220E9243920 0xA6 PUSH7 0xD41BA68BFC3058 0xC8 PUSH27 0x9F425D3B324317B558FF593118B64551D164736F6C634300081900 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "5": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "CALLVALUE",
      "path": "10"
    },
    "6": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "7": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "8": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "12": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "16": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "17": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "POP",
      "path": "10"
    },
    "18": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "21": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "LT",
      "path": "10"
    },
    "22": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C4"
    },
    "25": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "26": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "CALLDATALOAD",
      "path": "10"
    },
    "29": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "SHR",
      "path": "10"
    },
    "32": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "33": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7F6CDF42"
    },
    "38": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "39": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xF9"
    },
    "42": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "43": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "44": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBEA9849E"
    },
    "49": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "50": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x97"
    },
    "53": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "54": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "55": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "60": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "61": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x71"
    },
    "64": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "65": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "66": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xDD62ED3E"
    },
    "71": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "72": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3B2"
    },
    "75": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "76": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "77": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xE04B677F"
    },
    "82": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "83": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3EB"
    },
    "86": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "87": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "88": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "94": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3FE"
    },
    "97": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "98": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "99": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xFB41BE16"
    },
    "104": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "105": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x411"
    },
    "108": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "109": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "112": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "113": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "114": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "115": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xBEA9849E"
    },
    "120": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "121": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x379"
    },
    "124": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "125": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "126": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC816841B"
    },
    "131": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "132": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x38C"
    },
    "135": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "136": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "137": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xD5AED6BF"
    },
    "142": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "143": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x39F"
    },
    "146": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "147": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "149": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "150": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "151": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "152": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "153": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "158": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "159": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD3"
    },
    "162": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "163": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "164": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95D89B41"
    },
    "169": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "170": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x343"
    },
    "173": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "174": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "175": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x9E78FB4F"
    },
    "180": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "181": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x34B"
    },
    "184": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "185": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "186": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xA9059CBB"
    },
    "191": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "192": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x353"
    },
    "195": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "196": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "197": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xAA411D5B"
    },
    "202": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "203": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x366"
    },
    "206": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "207": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "209": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "210": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "211": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "212": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "213": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x7F6CDF42"
    },
    "218": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "219": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x316"
    },
    "222": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "223": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "224": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8BDB2AFA"
    },
    "229": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "230": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x31F"
    },
    "233": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "234": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "235": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x8DA5CB5B"
    },
    "240": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "241": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x332"
    },
    "244": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "245": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "247": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "248": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "249": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "250": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "251": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3E37C0DC"
    },
    "256": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "257": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x166"
    },
    "260": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "261": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "262": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B540060"
    },
    "267": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "268": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x140"
    },
    "271": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "272": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "273": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5B540060"
    },
    "278": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "279": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2B7"
    },
    "282": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "283": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "284": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x70A08231"
    },
    "289": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "290": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2D2"
    },
    "293": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "294": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "295": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x715018A6"
    },
    "300": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "301": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2FB"
    },
    "304": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "305": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "306": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x735DE9F7"
    },
    "311": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "312": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x303"
    },
    "315": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "316": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "318": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "319": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "320": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "321": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "322": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x3E37C0DC"
    },
    "327": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "328": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x27E"
    },
    "331": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "332": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "333": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x40C10F19"
    },
    "338": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "339": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x291"
    },
    "342": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "343": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "344": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x55EA42A5"
    },
    "349": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "350": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2A4"
    },
    "353": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "354": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "356": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "357": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "358": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "359": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "360": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "365": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "GT",
      "path": "10"
    },
    "366": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1A2"
    },
    "369": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "370": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "371": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x23B872DD"
    },
    "376": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "377": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x21C"
    },
    "380": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "381": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "382": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2B7D33C2"
    },
    "387": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "388": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x22F"
    },
    "391": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "392": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "393": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x313CE567"
    },
    "398": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "399": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x244"
    },
    "402": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "403": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "404": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x31FBFB63"
    },
    "409": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "410": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x253"
    },
    "413": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "414": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "416": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "417": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "418": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "419": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "420": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x6FDDE03"
    },
    "425": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "426": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1C9"
    },
    "429": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "430": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "431": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "436": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "437": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1E7"
    },
    "440": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "441": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "442": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x18160DDD"
    },
    "447": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "EQ",
      "path": "10"
    },
    "448": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20A"
    },
    "451": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "452": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "453": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "455": {
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "DUP1",
      "path": "10"
    },
    "456": {
      "first_revert": true,
      "fn": null,
      "offset": [
        650,
        6617
      ],
      "op": "REVERT",
      "path": "10"
    },
    "457": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "458": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "461": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x424"
    },
    "464": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMP",
      "path": "2"
    },
    "465": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "466": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "468": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "469": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "472": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "473": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "474": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x11E8"
    },
    "477": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMP",
      "path": "2"
    },
    "478": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "479": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "481": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "482": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "DUP1",
      "path": "2"
    },
    "483": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "484": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SUB",
      "path": "2"
    },
    "485": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "486": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "RETURN",
      "path": "2"
    },
    "487": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "488": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "491": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5"
    },
    "494": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "495": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "497": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x124C"
    },
    "500": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMP",
      "path": "2"
    },
    "501": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "502": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4B6"
    },
    "505": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMP",
      "path": "2"
    },
    "506": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "507": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "509": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "510": {
      "op": "SWAP1"
    },
    "511": {
      "op": "ISZERO"
    },
    "512": {
      "op": "ISZERO"
    },
    "513": {
      "op": "DUP2"
    },
    "514": {
      "op": "MSTORE"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "517": {
      "op": "ADD"
    },
    "518": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "521": {
      "op": "JUMP"
    },
    "522": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3144,
        3241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "523": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3222,
        3234
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 0,
      "value": "0x2"
    },
    "525": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3222,
        3234
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "526": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3144,
        3241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "527": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3144,
        3241
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "529": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3144,
        3241
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "530": {
      "op": "SWAP1"
    },
    "531": {
      "op": "DUP2"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "535": {
      "op": "ADD"
    },
    "536": {
      "fn": "ERC20.totalSupply",
      "offset": [
        3144,
        3241
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "539": {
      "op": "JUMP"
    },
    "540": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "541": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1FA"
    },
    "544": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22A"
    },
    "547": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "548": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "550": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1278"
    },
    "553": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "554": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "555": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4D0"
    },
    "558": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "559": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "560": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "563": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x23D"
    },
    "566": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "567": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "569": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "572": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "jump": "i",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMP",
      "path": "10"
    },
    "573": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "574": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4F4"
    },
    "577": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "jump": "i",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMP",
      "path": "10"
    },
    "578": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "579": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "STOP",
      "path": "10"
    },
    "580": {
      "fn": "ERC20.decimals",
      "offset": [
        3002,
        3084
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "581": {
      "fn": "ERC20.decimals",
      "offset": [
        3002,
        3084
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "583": {
      "fn": "ERC20.decimals",
      "offset": [
        3002,
        3084
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "584": {
      "fn": "ERC20.decimals",
      "offset": [
        3075,
        3077
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 1,
      "value": "0x12"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "MSTORE"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "fn": "ERC20.decimals",
      "offset": [
        3002,
        3084
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DE"
    },
    "594": {
      "op": "JUMP"
    },
    "595": {
      "offset": [
        852,
        879
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "596": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "598": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "599": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "602": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "609": {
      "op": "SHL"
    },
    "610": {
      "op": "SUB"
    },
    "611": {
      "offset": [
        852,
        879
      ],
      "op": "AND",
      "path": "10"
    },
    "612": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "DUP2",
      "path": "10"
    },
    "613": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "JUMP",
      "path": "10"
    },
    "614": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "615": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "617": {
      "fn": "ERC20.decimals",
      "offset": [
        852,
        879
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "622": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "624": {
      "op": "SHL"
    },
    "625": {
      "op": "SUB"
    },
    "626": {
      "op": "SWAP1"
    },
    "627": {
      "op": "SWAP2"
    },
    "628": {
      "op": "AND"
    },
    "629": {
      "op": "DUP2"
    },
    "630": {
      "op": "MSTORE"
    },
    "631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "633": {
      "op": "ADD"
    },
    "634": {
      "offset": [
        852,
        879
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1DE"
    },
    "637": {
      "op": "JUMP"
    },
    "638": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "639": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "642": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x28C"
    },
    "645": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "646": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "648": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "651": {
      "fn": "CalFundToken.setWmaticAddress",
      "jump": "i",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "652": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "653": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5EA"
    },
    "656": {
      "fn": "CalFundToken.setWmaticAddress",
      "jump": "i",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "657": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "658": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "661": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x29F"
    },
    "664": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "665": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "667": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124C"
    },
    "670": {
      "fn": "CalFundToken.mint",
      "jump": "i",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMP",
      "path": "10"
    },
    "671": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "672": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x614"
    },
    "675": {
      "fn": "CalFundToken.mint",
      "jump": "i",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMP",
      "path": "10"
    },
    "676": {
      "offset": [
        885,
        928
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "677": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xB"
    },
    "679": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "680": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "683": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "690": {
      "op": "SHL"
    },
    "691": {
      "op": "SUB"
    },
    "692": {
      "offset": [
        885,
        928
      ],
      "op": "AND",
      "path": "10"
    },
    "693": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "DUP2",
      "path": "10"
    },
    "694": {
      "fn": "CalFundToken.mint",
      "offset": [
        885,
        928
      ],
      "op": "JUMP",
      "path": "10"
    },
    "695": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "696": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20E"
    },
    "699": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x2C5"
    },
    "702": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "703": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "705": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "708": {
      "fn": "CalFundToken.getMaticBalance",
      "jump": "i",
      "offset": [
        6117,
        6222
      ],
      "op": "JUMP",
      "path": "10"
    },
    "709": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "714": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "716": {
      "op": "SHL"
    },
    "717": {
      "op": "SUB"
    },
    "718": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10",
      "statement": 2
    },
    "719": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "720": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "721": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6117,
        6222
      ],
      "op": "JUMP",
      "path": "10"
    },
    "722": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "723": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E"
    },
    "726": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2E0"
    },
    "729": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "730": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "732": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B9"
    },
    "735": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [
        3299,
        3415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "736": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "739": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "741": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "743": {
      "op": "SHL"
    },
    "744": {
      "op": "SUB"
    },
    "745": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "AND",
      "path": "2",
      "statement": 3
    },
    "746": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3364,
        3371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "748": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "749": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "DUP2",
      "path": "2"
    },
    "750": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "751": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "DUP2",
      "path": "2"
    },
    "754": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "755": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "756": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "758": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "759": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "760": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "761": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3390,
        3408
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "762": {
      "fn": "ERC20.balanceOf",
      "offset": [
        3299,
        3415
      ],
      "op": "JUMP",
      "path": "2"
    },
    "763": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "764": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "767": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66C"
    },
    "770": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "771": {
      "offset": [
        696,
        735
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "772": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "775": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "778": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "779": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "783": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "785": {
      "op": "SHL"
    },
    "786": {
      "op": "SUB"
    },
    "787": {
      "offset": [
        696,
        735
      ],
      "op": "AND",
      "path": "10"
    },
    "788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "DUP2",
      "path": "10"
    },
    "789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        696,
        735
      ],
      "op": "JUMP",
      "path": "10"
    },
    "790": {
      "offset": [
        934,
        964
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        934,
        964
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x20E"
    },
    "794": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        934,
        964
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "796": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        934,
        964
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "797": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        934,
        964
      ],
      "op": "DUP2",
      "path": "10"
    },
    "798": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        934,
        964
      ],
      "op": "JUMP",
      "path": "10"
    },
    "799": {
      "offset": [
        741,
        780
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "800": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "803": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "806": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "813": {
      "op": "SHL"
    },
    "814": {
      "op": "SUB"
    },
    "815": {
      "offset": [
        741,
        780
      ],
      "op": "AND",
      "path": "10"
    },
    "816": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "DUP2",
      "path": "10"
    },
    "817": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        741,
        780
      ],
      "op": "JUMP",
      "path": "10"
    },
    "818": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "819": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x5"
    },
    "821": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "828": {
      "op": "SHL"
    },
    "829": {
      "op": "SUB"
    },
    "830": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "AND",
      "path": "0"
    },
    "831": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x266"
    },
    "834": {
      "fn": "Ownable.owner",
      "offset": [
        1638,
        1723
      ],
      "op": "JUMP",
      "path": "0"
    },
    "835": {
      "fn": "ERC20.symbol",
      "offset": [
        2276,
        2369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "836": {
      "fn": "ERC20.symbol",
      "offset": [
        2276,
        2369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D1"
    },
    "839": {
      "fn": "ERC20.symbol",
      "offset": [
        2276,
        2369
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x680"
    },
    "842": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2276,
        2369
      ],
      "op": "JUMP",
      "path": "2"
    },
    "843": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1881,
        2291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "844": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1881,
        2291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "847": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1881,
        2291
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x68F"
    },
    "850": {
      "fn": "CalFundToken.createPair",
      "jump": "i",
      "offset": [
        1881,
        2291
      ],
      "op": "JUMP",
      "path": "10"
    },
    "851": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "852": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1FA"
    },
    "855": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x361"
    },
    "858": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "859": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "861": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x124C"
    },
    "864": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMP",
      "path": "10"
    },
    "865": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "866": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x824"
    },
    "869": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMP",
      "path": "10"
    },
    "870": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "871": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "874": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x374"
    },
    "877": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "878": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "880": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "883": {
      "fn": "CalFundToken.setMaticAddress",
      "jump": "i",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMP",
      "path": "10"
    },
    "884": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "885": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x90B"
    },
    "888": {
      "fn": "CalFundToken.setMaticAddress",
      "jump": "i",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMP",
      "path": "10"
    },
    "889": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "890": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "893": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x387"
    },
    "896": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "897": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "899": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "902": {
      "fn": "CalFundToken.setUniswapRouter",
      "jump": "i",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMP",
      "path": "10"
    },
    "903": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "904": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x935"
    },
    "907": {
      "fn": "CalFundToken.setUniswapRouter",
      "jump": "i",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMP",
      "path": "10"
    },
    "908": {
      "offset": [
        786,
        819
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "909": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x8"
    },
    "911": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "912": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "915": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "op": "SUB"
    },
    "924": {
      "offset": [
        786,
        819
      ],
      "op": "AND",
      "path": "10"
    },
    "925": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "DUP2",
      "path": "10"
    },
    "926": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        786,
        819
      ],
      "op": "JUMP",
      "path": "10"
    },
    "927": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "928": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "931": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3AD"
    },
    "934": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "935": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "937": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "940": {
      "fn": "CalFundToken.setUniswapPair",
      "jump": "i",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMP",
      "path": "10"
    },
    "941": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "942": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x95F"
    },
    "945": {
      "fn": "CalFundToken.setUniswapPair",
      "jump": "i",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMP",
      "path": "10"
    },
    "946": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "947": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E"
    },
    "950": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C0"
    },
    "953": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "954": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "956": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12DD"
    },
    "959": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [
        3846,
        3986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "960": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 5
    },
    "970": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP3",
      "path": "2"
    },
    "971": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "AND",
      "path": "2"
    },
    "972": {
      "fn": "ERC20.allowance",
      "offset": [
        3926,
        3933
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "975": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP2",
      "path": "2"
    },
    "976": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "977": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "979": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "981": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "982": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP2",
      "path": "2"
    },
    "983": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "984": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "986": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP1",
      "path": "2"
    },
    "987": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP4",
      "path": "2"
    },
    "988": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "989": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "990": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "991": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "992": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "AND",
      "path": "2"
    },
    "993": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "DUP3",
      "path": "2"
    },
    "994": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "995": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "996": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "997": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "998": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "999": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1000": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1001": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1002": {
      "fn": "ERC20.allowance",
      "offset": [
        3846,
        3986
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1003": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1004": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x242"
    },
    "1007": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x3F9"
    },
    "1010": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "1011": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1013": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x12B9"
    },
    "1016": {
      "fn": "CalFundToken.setUniswapFactory",
      "jump": "i",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1017": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1018": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x989"
    },
    "1021": {
      "fn": "CalFundToken.setUniswapFactory",
      "jump": "i",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1022": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1023": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x242"
    },
    "1026": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x40C"
    },
    "1029": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1032": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B9"
    },
    "1035": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1036": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9B3"
    },
    "1040": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "offset": [
        825,
        846
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1042": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "1044": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1045": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x266"
    },
    "1048": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1055": {
      "op": "SHL"
    },
    "1056": {
      "op": "SUB"
    },
    "1057": {
      "offset": [
        825,
        846
      ],
      "op": "AND",
      "path": "10"
    },
    "1058": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1059": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        825,
        846
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1060": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1061": {
      "fn": "ERC20.name",
      "offset": [
        2119,
        2132
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1063": {
      "fn": "ERC20.name",
      "offset": [
        2151,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 6,
      "value": "0x3"
    },
    "1065": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1066": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1067": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x433"
    },
    "1070": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1071": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1316"
    },
    "1074": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1075": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1076": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1077": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1079": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1080": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1082": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1083": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1084": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DIV",
      "path": "2"
    },
    "1085": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MUL",
      "path": "2"
    },
    "1086": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1088": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1089": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1091": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1092": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1093": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1094": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1095": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1097": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1098": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1099": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1100": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1101": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1102": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1103": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1104": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1105": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1107": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1108": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1109": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1110": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1111": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x45F"
    },
    "1114": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1115": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1316"
    },
    "1118": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1119": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1120": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1121": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1122": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1125": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1126": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1127": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1129": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "LT",
      "path": "2"
    },
    "1130": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x481"
    },
    "1133": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1134": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "1137": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1138": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1139": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1140": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DIV",
      "path": "2"
    },
    "1141": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MUL",
      "path": "2"
    },
    "1142": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1143": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1144": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1145": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1147": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1148": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1149": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4AC"
    },
    "1152": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1153": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1154": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1155": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1156": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1157": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1158": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1160": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1161": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1165": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1166": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1167": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1168": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1169": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1170": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1171": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1172": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1173": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1175": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1176": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1177": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1179": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1180": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1181": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1182": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "GT",
      "path": "2"
    },
    "1183": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x48F"
    },
    "1186": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1187": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1188": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1189": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SUB",
      "path": "2"
    },
    "1190": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "1192": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "AND",
      "path": "2"
    },
    "1193": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1194": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "ADD",
      "path": "2"
    },
    "1195": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1196": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1197": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1198": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1199": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1200": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1201": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1202": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1203": {
      "fn": "ERC20.name",
      "offset": [
        2144,
        2156
      ],
      "op": "POP",
      "path": "2"
    },
    "1204": {
      "fn": "ERC20.name",
      "offset": [
        2074,
        2163
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1205": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [
        2074,
        2163
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1206": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1207": {
      "fn": "ERC20.approve",
      "offset": [
        4366,
        4370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1209": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 7
    },
    "1210": {
      "fn": "ERC20.approve",
      "offset": [
        4420,
        4451
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 8,
      "value": "0x4C4"
    },
    "1213": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1214": {
      "fn": "ERC20.approve",
      "offset": [
        4436,
        4443
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1215": {
      "fn": "ERC20.approve",
      "offset": [
        4445,
        4450
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1216": {
      "fn": "ERC20.approve",
      "offset": [
        4420,
        4428
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x9F1"
    },
    "1219": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [
        4420,
        4451
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1220": {
      "fn": "ERC20.approve",
      "offset": [
        4420,
        4451
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1221": {
      "fn": "ERC20.approve",
      "offset": [
        4468,
        4472
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 9,
      "value": "0x1"
    },
    "1223": {
      "fn": "ERC20.approve",
      "offset": [
        4461,
        4472
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1224": {
      "fn": "ERC20.approve",
      "offset": [
        4461,
        4472
      ],
      "op": "POP",
      "path": "2"
    },
    "1225": {
      "fn": "ERC20.approve",
      "offset": [
        4461,
        4472
      ],
      "op": "POP",
      "path": "2"
    },
    "1226": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1227": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1228": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1229": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "POP",
      "path": "2"
    },
    "1230": {
      "fn": "ERC20.approve",
      "offset": [
        4293,
        4479
      ],
      "op": "POP",
      "path": "2"
    },
    "1231": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [
        4293,
        4479
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1232": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1233": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5126,
        5130
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1235": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1236": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5182,
        5219
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 10,
      "value": "0x4DE"
    },
    "1239": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5198,
        5202
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1240": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1241": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5213,
        5218
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1242": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5182,
        5197
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA03"
    },
    "1245": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5182,
        5219
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1246": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5182,
        5219
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1247": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5229,
        5255
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 11,
      "value": "0x4E9"
    },
    "1250": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5239,
        5243
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1251": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5245,
        5247
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1252": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5249,
        5254
      ],
      "op": "DUP6",
      "path": "2"
    },
    "1253": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5229,
        5238
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA7B"
    },
    "1256": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [
        5229,
        5255
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1257": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5229,
        5255
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1258": {
      "op": "POP"
    },
    "1259": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 12,
      "value": "0x1"
    },
    "1261": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5272,
        5276
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1262": {
      "fn": "ERC20.transferFrom",
      "offset": [
        5039,
        5283
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "op": "POP"
    },
    "1266": {
      "op": "POP"
    },
    "1267": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [
        5039,
        5283
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1268": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1269": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1271": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1278": {
      "op": "SHL"
    },
    "1279": {
      "op": "SUB"
    },
    "1280": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "AND",
      "path": "0"
    },
    "1281": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6353,
        6363
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 13
    },
    "1282": {
      "branch": 78,
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6353,
        6374
      ],
      "op": "EQ",
      "path": "10"
    },
    "1283": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x561"
    },
    "1286": {
      "branch": 78,
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1287": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1289": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1290": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1296": {
      "op": "SHL"
    },
    "1297": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1298": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1299": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1301": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1303": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1304": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "ADD",
      "path": "10"
    },
    "1305": {
      "op": "MSTORE"
    },
    "1306": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1308": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1310": {
      "op": "DUP3"
    },
    "1311": {
      "op": "ADD"
    },
    "1312": {
      "op": "MSTORE"
    },
    "1313": {
      "op": "PUSH32",
      "value": "0x556E617574686F72697A65643A2043616C6C6572206973206E6F742074686520"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1348": {
      "op": "DUP3"
    },
    "1349": {
      "op": "ADD"
    },
    "1350": {
      "op": "MSTORE"
    },
    "1351": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "1357": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "1359": {
      "op": "SHL"
    },
    "1360": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1362": {
      "op": "DUP3"
    },
    "1363": {
      "op": "ADD"
    },
    "1364": {
      "op": "MSTORE"
    },
    "1365": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1369": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1371": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1372": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1373": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1374": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "SUB",
      "path": "10"
    },
    "1375": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1376": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "10"
    },
    "1377": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6345,
        6416
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1378": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6452,
        6467
      ],
      "op": "TIMESTAMP",
      "path": "10",
      "statement": 14
    },
    "1379": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6434,
        6449
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "1381": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6434,
        6449
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1382": {
      "branch": 79,
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6434,
        6467
      ],
      "op": "LT",
      "path": "10"
    },
    "1383": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x5BC"
    },
    "1386": {
      "branch": 79,
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1387": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1389": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1390": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1394": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1396": {
      "op": "SHL"
    },
    "1397": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1398": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1399": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1401": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1403": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1404": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "ADD",
      "path": "10"
    },
    "1405": {
      "op": "MSTORE"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1410": {
      "op": "DUP3"
    },
    "1411": {
      "op": "ADD"
    },
    "1412": {
      "op": "MSTORE"
    },
    "1413": {
      "op": "PUSH32",
      "value": "0x416E6F746865722070726F706F73616C206973207374696C6C20616374697665"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1448": {
      "op": "DUP3"
    },
    "1449": {
      "op": "ADD"
    },
    "1450": {
      "op": "MSTORE"
    },
    "1451": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "1455": {
      "op": "SHL"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1458": {
      "op": "DUP3"
    },
    "1459": {
      "op": "ADD"
    },
    "1460": {
      "op": "MSTORE"
    },
    "1461": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1463": {
      "op": "ADD"
    },
    "1464": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x558"
    },
    "1467": {
      "op": "JUMP"
    },
    "1468": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6426,
        6505
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1469": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6543
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 15,
      "value": "0xB"
    },
    "1471": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1472": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1479": {
      "op": "SHL"
    },
    "1480": {
      "op": "SUB"
    },
    "1481": {
      "op": "NOT"
    },
    "1482": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "AND",
      "path": "10"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1492": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "AND",
      "path": "10"
    },
    "1493": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "OR",
      "path": "10"
    },
    "1494": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1495": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6515,
        6556
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1496": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6584,
        6608
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 16,
      "value": "0x5E4"
    },
    "1499": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6584,
        6599
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "1500": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6602,
        6608
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x3F480"
    },
    "1504": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6584,
        6608
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1366"
    },
    "1507": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "jump": "i",
      "offset": [
        6584,
        6608
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1508": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6584,
        6608
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1509": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6566,
        6581
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xC"
    },
    "1511": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "offset": [
        6566,
        6608
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1512": {
      "op": "POP"
    },
    "1513": {
      "fn": "CalFundToken.proposeNewCommissionAddress",
      "jump": "o",
      "offset": [
        6271,
        6615
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1514": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1515": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5F2"
    },
    "1518": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "1521": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1522": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1523": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1849
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 17,
      "value": "0x9"
    },
    "1525": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1526": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1531": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1533": {
      "op": "SHL"
    },
    "1534": {
      "op": "SUB"
    },
    "1535": {
      "op": "NOT"
    },
    "1536": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "AND",
      "path": "10"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1543": {
      "op": "SHL"
    },
    "1544": {
      "op": "SUB"
    },
    "1545": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1546": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1547": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1548": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "AND",
      "path": "10"
    },
    "1549": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1550": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1551": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1552": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "OR",
      "path": "10"
    },
    "1553": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1554": {
      "fn": "CalFundToken.setWmaticAddress",
      "offset": [
        1843,
        1868
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "1555": {
      "fn": "CalFundToken.setWmaticAddress",
      "jump": "o",
      "offset": [
        1771,
        1875
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1556": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1557": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61C"
    },
    "1560": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "1563": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1564": {
      "fn": "CalFundToken.mint",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1565": {
      "fn": "CalFundToken.mint",
      "offset": [
        2374,
        2392
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1567": {
      "fn": "CalFundToken.mint",
      "offset": [
        2394,
        2412
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1568": {
      "fn": "CalFundToken.mint",
      "offset": [
        2416,
        2441
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x628"
    },
    "1571": {
      "fn": "CalFundToken.mint",
      "offset": [
        2434,
        2440
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1572": {
      "fn": "CalFundToken.mint",
      "offset": [
        2416,
        2433
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB07"
    },
    "1575": {
      "fn": "CalFundToken.mint",
      "jump": "i",
      "offset": [
        2416,
        2441
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1576": {
      "fn": "CalFundToken.mint",
      "offset": [
        2416,
        2441
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1577": {
      "fn": "CalFundToken.mint",
      "offset": [
        2373,
        2441
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1578": {
      "fn": "CalFundToken.mint",
      "offset": [
        2373,
        2441
      ],
      "op": "POP",
      "path": "10"
    },
    "1579": {
      "fn": "CalFundToken.mint",
      "offset": [
        2373,
        2441
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1580": {
      "fn": "CalFundToken.mint",
      "offset": [
        2373,
        2441
      ],
      "op": "POP",
      "path": "10"
    },
    "1581": {
      "fn": "CalFundToken.mint",
      "offset": [
        2451,
        2479
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 18,
      "value": "0x636"
    },
    "1584": {
      "fn": "CalFundToken.mint",
      "offset": [
        2457,
        2466
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1585": {
      "fn": "CalFundToken.mint",
      "offset": [
        2468,
        2478
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1586": {
      "fn": "CalFundToken.mint",
      "offset": [
        2451,
        2456
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB8F"
    },
    "1589": {
      "fn": "CalFundToken.mint",
      "jump": "i",
      "offset": [
        2451,
        2479
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1590": {
      "fn": "CalFundToken.mint",
      "offset": [
        2451,
        2479
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1591": {
      "fn": "CalFundToken.mint",
      "offset": [
        2507,
        2508
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1593": {
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2504
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1594": {
      "branch": 80,
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2508
      ],
      "op": "GT",
      "path": "10"
    },
    "1595": {
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2548
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1596": {
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2548
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1597": {
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2548
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x657"
    },
    "1600": {
      "branch": 80,
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2548
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "fn": "CalFundToken.mint",
      "offset": [
        2541,
        2548
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "1611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1617": {
      "op": "SHL"
    },
    "1618": {
      "op": "SUB"
    },
    "1619": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP6",
      "path": "10"
    },
    "1620": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10"
    },
    "1621": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "1622": {
      "branch": 81,
      "fn": "CalFundToken.mint",
      "offset": [
        2512,
        2548
      ],
      "op": "LT",
      "path": "10"
    },
    "1623": {
      "fn": "CalFundToken.mint",
      "offset": [
        2494,
        2548
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1624": {
      "fn": "CalFundToken.mint",
      "offset": [
        2490,
        2615
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1625": {
      "fn": "CalFundToken.mint",
      "offset": [
        2490,
        2615
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x666"
    },
    "1628": {
      "branch": 81,
      "fn": "CalFundToken.mint",
      "offset": [
        2490,
        2615
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1629": {
      "fn": "CalFundToken.mint",
      "offset": [
        2564,
        2604
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 19,
      "value": "0x666"
    },
    "1632": {
      "fn": "CalFundToken.mint",
      "offset": [
        2582,
        2591
      ],
      "op": "DUP5",
      "path": "10"
    },
    "1633": {
      "fn": "CalFundToken.mint",
      "offset": [
        2593,
        2603
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1634": {
      "fn": "CalFundToken.mint",
      "offset": [
        2564,
        2581
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC9"
    },
    "1637": {
      "fn": "CalFundToken.mint",
      "jump": "i",
      "offset": [
        2564,
        2604
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1638": {
      "fn": "CalFundToken.mint",
      "offset": [
        2564,
        2604
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1639": {
      "fn": "CalFundToken.mint",
      "offset": [
        2363,
        2621
      ],
      "op": "POP",
      "path": "10"
    },
    "1640": {
      "fn": "CalFundToken.mint",
      "offset": [
        2363,
        2621
      ],
      "op": "POP",
      "path": "10"
    },
    "1641": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "POP",
      "path": "10"
    },
    "1642": {
      "fn": "CalFundToken.mint",
      "offset": [
        2297,
        2621
      ],
      "op": "POP",
      "path": "10"
    },
    "1643": {
      "fn": "CalFundToken.mint",
      "jump": "o",
      "offset": [
        2297,
        2621
      ],
      "op": "JUMP",
      "path": "10"
    },
    "1644": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1645": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x674"
    },
    "1648": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "1651": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1652": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1653": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2387
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 20,
      "value": "0x67E"
    },
    "1656": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2384,
        2385
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1658": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2375
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD44"
    },
    "1661": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2357,
        2387
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1662": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2357,
        2387
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1663": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2293,
        2394
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1664": {
      "fn": "ERC20.symbol",
      "offset": [
        2276,
        2369
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1665": {
      "fn": "ERC20.symbol",
      "offset": [
        2323,
        2336
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1667": {
      "fn": "ERC20.symbol",
      "offset": [
        2355,
        2362
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 21,
      "value": "0x4"
    },
    "1669": {
      "fn": "ERC20.symbol",
      "offset": [
        2348,
        2362
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1670": {
      "fn": "ERC20.symbol",
      "offset": [
        2348,
        2362
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1671": {
      "fn": "ERC20.symbol",
      "offset": [
        2348,
        2362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x433"
    },
    "1674": {
      "fn": "ERC20.symbol",
      "offset": [
        2348,
        2362
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1675": {
      "fn": "ERC20.symbol",
      "offset": [
        2348,
        2362
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1316"
    },
    "1678": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [
        2348,
        2362
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1679": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1881,
        2291
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1680": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x697"
    },
    "1683": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "1686": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1687": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1688": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1948,
        1962
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 22,
      "value": "0x7"
    },
    "1690": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1948,
        1962
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1693": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1697": {
      "op": "SHL"
    },
    "1698": {
      "op": "SUB"
    },
    "1699": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1948,
        1962
      ],
      "op": "AND",
      "path": "10"
    },
    "1700": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x6EF"
    },
    "1703": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1704": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1706": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1713": {
      "op": "SHL"
    },
    "1714": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1715": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1718": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1720": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1721": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "ADD",
      "path": "10"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "1725": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1727": {
      "op": "DUP3"
    },
    "1728": {
      "op": "ADD"
    },
    "1729": {
      "op": "MSTORE"
    },
    "1730": {
      "op": "PUSH32",
      "value": "0x556E697377617020666163746F7279206E6F7420736574000000000000000000"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1765": {
      "op": "DUP3"
    },
    "1766": {
      "op": "ADD"
    },
    "1767": {
      "op": "MSTORE"
    },
    "1768": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1770": {
      "op": "ADD"
    },
    "1771": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x558"
    },
    "1774": {
      "op": "JUMP"
    },
    "1775": {
      "fn": "CalFundToken.createPair",
      "offset": [
        1932,
        2005
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1776": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2031,
        2035
      ],
      "op": "ADDRESS",
      "path": "10",
      "statement": 23
    },
    "1777": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x734"
    },
    "1780": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1781": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1783": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1784": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1788": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1790": {
      "op": "SHL"
    },
    "1791": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1792": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1795": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1797": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1798": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "ADD",
      "path": "10"
    },
    "1799": {
      "op": "MSTORE"
    },
    "1800": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1804": {
      "op": "DUP3"
    },
    "1805": {
      "op": "ADD"
    },
    "1806": {
      "op": "MSTORE"
    },
    "1807": {
      "op": "PUSH21",
      "value": "0x151BDAD95B881859191C995CDCC81B9BDD081CD95D"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1834": {
      "op": "DUP3"
    },
    "1835": {
      "op": "ADD"
    },
    "1836": {
      "op": "MSTORE"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1839": {
      "op": "ADD"
    },
    "1840": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x558"
    },
    "1843": {
      "op": "JUMP"
    },
    "1844": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2015,
        2076
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1845": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2094,
        2106
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 24,
      "value": "0xA"
    },
    "1847": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2094,
        2106
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1854": {
      "op": "SHL"
    },
    "1855": {
      "op": "SUB"
    },
    "1856": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2094,
        2106
      ],
      "op": "AND",
      "path": "10"
    },
    "1857": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x784"
    },
    "1860": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "1861": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1863": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1864": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1870": {
      "op": "SHL"
    },
    "1871": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1872": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1875": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1877": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1878": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "ADD",
      "path": "10"
    },
    "1879": {
      "op": "MSTORE"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "1882": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1884": {
      "op": "DUP3"
    },
    "1885": {
      "op": "ADD"
    },
    "1886": {
      "op": "MSTORE"
    },
    "1887": {
      "op": "PUSH21",
      "value": "0x1350551250C81859191C995CDCC81B9BDD081CD95D"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x5A"
    },
    "1911": {
      "op": "SHL"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1914": {
      "op": "DUP3"
    },
    "1915": {
      "op": "ADD"
    },
    "1916": {
      "op": "MSTORE"
    },
    "1917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1919": {
      "op": "ADD"
    },
    "1920": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x558"
    },
    "1923": {
      "op": "JUMP"
    },
    "1924": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2086,
        2146
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "1925": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x7"
    },
    "1927": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1928": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2220,
        2232
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "1930": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2220,
        2232
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "1931": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1933": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1934": {
      "op": "PUSH4",
      "value": "0x64E329CB"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1943": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "1944": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2213,
        2217
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "1945": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "1947": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1948": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ADD",
      "path": "10"
    },
    "1949": {
      "op": "MSTORE"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1956": {
      "op": "SHL"
    },
    "1957": {
      "op": "SUB"
    },
    "1958": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2220,
        2232
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1959": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2220,
        2232
      ],
      "op": "DUP3",
      "path": "10"
    },
    "1960": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2220,
        2232
      ],
      "op": "AND",
      "path": "10"
    },
    "1961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1963": {
      "op": "DUP3"
    },
    "1964": {
      "op": "ADD"
    },
    "1965": {
      "op": "MSTORE"
    },
    "1966": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2157,
        2176
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1968": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2157,
        2176
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "1969": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1970": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1971": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "1972": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "AND",
      "path": "10"
    },
    "1973": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2193
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1974": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2204
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0xC9C65396"
    },
    "1979": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2204
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "1980": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1982": {
      "op": "ADD"
    },
    "1983": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "1985": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "1987": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "1988": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1989": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP4",
      "path": "10"
    },
    "1990": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "SUB",
      "path": "10"
    },
    "1991": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "1992": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "1994": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP8",
      "path": "10"
    },
    "1995": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "GAS",
      "path": "10"
    },
    "1996": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "CALL",
      "path": "10"
    },
    "1997": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "1998": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "1999": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2000": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x7DD"
    },
    "2003": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2004": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2005": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2007": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2008": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "2009": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2010": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2012": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "REVERT",
      "path": "10"
    },
    "2013": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2014": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "POP",
      "path": "10"
    },
    "2015": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "POP",
      "path": "10"
    },
    "2016": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "POP",
      "path": "10"
    },
    "2017": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "POP",
      "path": "10"
    },
    "2018": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2020": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2021": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "2022": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2024": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "NOT",
      "path": "10"
    },
    "2025": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2027": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2028": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ADD",
      "path": "10"
    },
    "2029": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "AND",
      "path": "10"
    },
    "2030": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2031": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ADD",
      "path": "10"
    },
    "2032": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2033": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2035": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2036": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "POP",
      "path": "10"
    },
    "2037": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2038": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "ADD",
      "path": "10"
    },
    "2039": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2040": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x801"
    },
    "2043": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2044": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2045": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1379"
    },
    "2048": {
      "fn": "CalFundToken.createPair",
      "jump": "i",
      "offset": [
        2179,
        2233
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2049": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2179,
        2233
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2050": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2254
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 25,
      "value": "0x8"
    },
    "2052": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2053": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2060": {
      "op": "SHL"
    },
    "2061": {
      "op": "SUB"
    },
    "2062": {
      "op": "NOT"
    },
    "2063": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "AND",
      "path": "10"
    },
    "2064": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2068": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2070": {
      "op": "SHL"
    },
    "2071": {
      "op": "SUB"
    },
    "2072": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2073": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2074": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2075": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "AND",
      "path": "10"
    },
    "2076": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2077": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2078": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2079": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "OR",
      "path": "10"
    },
    "2080": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2081": {
      "fn": "CalFundToken.createPair",
      "offset": [
        2243,
        2284
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2082": {
      "op": "POP"
    },
    "2083": {
      "fn": "CalFundToken.createPair",
      "jump": "o",
      "offset": [
        1881,
        2291
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2084": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2085": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2705,
        2709
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2087": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2088": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2705,
        2709
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2089": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2705,
        2709
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2090": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2803,
        2828
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x832"
    },
    "2093": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2821,
        2827
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2094": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2803,
        2820
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB07"
    },
    "2097": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        2803,
        2828
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2098": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2803,
        2828
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2099": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2760,
        2828
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2100": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2760,
        2828
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2101": {
      "op": "POP"
    },
    "2102": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2760,
        2828
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2103": {
      "op": "POP"
    },
    "2104": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2843,
        2857
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2105": {
      "branch": 82,
      "fn": "CalFundToken.transfer",
      "offset": [
        2843,
        2857
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2106": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2839,
        3424
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8F7"
    },
    "2109": {
      "branch": 82,
      "fn": "CalFundToken.transfer",
      "offset": [
        2839,
        3424
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2110": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2903,
        2910
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "2119": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2125": {
      "op": "SHL"
    },
    "2126": {
      "op": "SUB"
    },
    "2127": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2128": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10"
    },
    "2129": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "2130": {
      "branch": 83,
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2910
      ],
      "op": "LT",
      "path": "10"
    },
    "2131": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2950
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2132": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2950
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2133": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2950
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x86F"
    },
    "2136": {
      "branch": 83,
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2950
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2137": {
      "op": "POP"
    },
    "2138": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2943,
        2950
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2156": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10"
    },
    "2157": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "2158": {
      "branch": 84,
      "fn": "CalFundToken.transfer",
      "offset": [
        2914,
        2950
      ],
      "op": "LT",
      "path": "10"
    },
    "2159": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2877,
        2950
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2160": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2161": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8AA"
    },
    "2164": {
      "branch": 84,
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2165": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 26,
      "value": "0x87F"
    },
    "2168": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2984,
        2985
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2170": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2171": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1396"
    },
    "2174": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        2970,
        2985
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2175": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2176": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2177": {
      "op": "POP"
    },
    "2178": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3003,
        3025
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2180": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x88E"
    },
    "2183": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3041,
        3042
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "2185": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2970,
        2985
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2186": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C3"
    },
    "2189": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3028,
        3042
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2190": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3028,
        3042
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2191": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3003,
        3042
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2192": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3003,
        3042
      ],
      "op": "POP",
      "path": "10"
    },
    "2193": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3060,
        3101
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 27,
      "value": "0x89A"
    },
    "2196": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3078,
        3084
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2197": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3086,
        3100
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2198": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3060,
        3077
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC9"
    },
    "2201": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3060,
        3101
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2202": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3060,
        3101
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2203": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3119,
        3163
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 28,
      "value": "0x8A4"
    },
    "2206": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3137,
        3146
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2207": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3148,
        3162
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2208": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3119,
        3136
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC9"
    },
    "2211": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3119,
        3163
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2212": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3119,
        3163
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2213": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2952,
        3178
      ],
      "op": "POP",
      "path": "10"
    },
    "2214": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8F7"
    },
    "2217": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2218": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2873,
        3414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2219": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3214,
        3221
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "2228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2234": {
      "op": "SHL"
    },
    "2235": {
      "op": "SUB"
    },
    "2236": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2237": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10"
    },
    "2238": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "2239": {
      "branch": 85,
      "fn": "CalFundToken.transfer",
      "offset": [
        3188,
        3221
      ],
      "op": "LT",
      "path": "10"
    },
    "2240": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2241": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8D3"
    },
    "2244": {
      "branch": 85,
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2245": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3241,
        3278
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 29,
      "value": "0x8CE"
    },
    "2248": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3259,
        3265
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2249": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3267,
        3277
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2250": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3241,
        3258
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC9"
    },
    "2253": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3241,
        3278
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2254": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3241,
        3278
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2255": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8F7"
    },
    "2258": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2259": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3184,
        3414
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2260": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3332,
        3339
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xDE0B6B3A7640000"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2271": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "op": "SUB"
    },
    "2277": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2278": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "AND",
      "path": "10"
    },
    "2279": {
      "fn": "CalFundToken.getMaticBalance",
      "offset": [
        6203,
        6215
      ],
      "op": "BALANCE",
      "path": "10"
    },
    "2280": {
      "branch": 86,
      "fn": "CalFundToken.transfer",
      "offset": [
        3303,
        3339
      ],
      "op": "LT",
      "path": "10"
    },
    "2281": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3299,
        3414
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2282": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3299,
        3414
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x8F7"
    },
    "2285": {
      "branch": 86,
      "fn": "CalFundToken.transfer",
      "offset": [
        3299,
        3414
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2286": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3359,
        3399
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 30,
      "value": "0x8F7"
    },
    "2289": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3377,
        3386
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2290": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3388,
        3398
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2291": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3359,
        3376
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xBC9"
    },
    "2294": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3359,
        3399
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2295": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3359,
        3399
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2296": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3441,
        3478
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 31,
      "value": "0x901"
    },
    "2299": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3456,
        3465
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2300": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3467,
        3477
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2301": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3441,
        3455
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD96"
    },
    "2304": {
      "fn": "CalFundToken.transfer",
      "jump": "i",
      "offset": [
        3441,
        3478
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2305": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3441,
        3478
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2306": {
      "fn": "CalFundToken.transfer",
      "offset": [
        3434,
        3478
      ],
      "op": "SWAP7",
      "path": "10"
    },
    "2307": {
      "fn": "CalFundToken.transfer",
      "offset": [
        2627,
        3485
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "2308": {
      "op": "POP"
    },
    "2309": {
      "op": "POP"
    },
    "2310": {
      "op": "POP"
    },
    "2311": {
      "op": "POP"
    },
    "2312": {
      "op": "POP"
    },
    "2313": {
      "op": "POP"
    },
    "2314": {
      "fn": "CalFundToken.transfer",
      "jump": "o",
      "offset": [
        2627,
        3485
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2315": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2316": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x913"
    },
    "2319": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2322": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2323": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2324": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1749
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 32,
      "value": "0xA"
    },
    "2326": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2327": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "op": "NOT"
    },
    "2337": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "AND",
      "path": "10"
    },
    "2338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2344": {
      "op": "SHL"
    },
    "2345": {
      "op": "SUB"
    },
    "2346": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2347": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2348": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2349": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "AND",
      "path": "10"
    },
    "2350": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2351": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2352": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2353": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "OR",
      "path": "10"
    },
    "2354": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2355": {
      "fn": "CalFundToken.setMaticAddress",
      "offset": [
        1737,
        1758
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2356": {
      "fn": "CalFundToken.setMaticAddress",
      "jump": "o",
      "offset": [
        1667,
        1765
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2357": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2358": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x93D"
    },
    "2361": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2364": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2365": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2366": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1508
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 33,
      "value": "0x6"
    },
    "2368": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2369": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2376": {
      "op": "SHL"
    },
    "2377": {
      "op": "SUB"
    },
    "2378": {
      "op": "NOT"
    },
    "2379": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "AND",
      "path": "10"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2386": {
      "op": "SHL"
    },
    "2387": {
      "op": "SUB"
    },
    "2388": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2389": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2390": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2391": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "AND",
      "path": "10"
    },
    "2392": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2393": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2394": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2395": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "OR",
      "path": "10"
    },
    "2396": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2397": {
      "fn": "CalFundToken.setUniswapRouter",
      "offset": [
        1495,
        1538
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2398": {
      "fn": "CalFundToken.setUniswapRouter",
      "jump": "o",
      "offset": [
        1423,
        1545
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2399": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2400": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x967"
    },
    "2403": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2406": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2407": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2408": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1630
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 34,
      "value": "0x8"
    },
    "2410": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2411": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2418": {
      "op": "SHL"
    },
    "2419": {
      "op": "SUB"
    },
    "2420": {
      "op": "NOT"
    },
    "2421": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "AND",
      "path": "10"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2428": {
      "op": "SHL"
    },
    "2429": {
      "op": "SUB"
    },
    "2430": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2431": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2432": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2433": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "AND",
      "path": "10"
    },
    "2434": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2435": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2436": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2437": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "OR",
      "path": "10"
    },
    "2438": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2439": {
      "fn": "CalFundToken.setUniswapPair",
      "offset": [
        1619,
        1654
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2440": {
      "fn": "CalFundToken.setUniswapPair",
      "jump": "o",
      "offset": [
        1551,
        1661
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2441": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2442": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x991"
    },
    "2445": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2448": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2449": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2450": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1380
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 35,
      "value": "0x7"
    },
    "2452": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2453": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2458": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2460": {
      "op": "SHL"
    },
    "2461": {
      "op": "SUB"
    },
    "2462": {
      "op": "NOT"
    },
    "2463": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "AND",
      "path": "10"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2470": {
      "op": "SHL"
    },
    "2471": {
      "op": "SUB"
    },
    "2472": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2473": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2474": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2475": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "AND",
      "path": "10"
    },
    "2476": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2477": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2478": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2479": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "OR",
      "path": "10"
    },
    "2480": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2481": {
      "fn": "CalFundToken.setUniswapFactory",
      "offset": [
        1366,
        1410
      ],
      "op": "SSTORE",
      "path": "10"
    },
    "2482": {
      "fn": "CalFundToken.setUniswapFactory",
      "jump": "o",
      "offset": [
        1292,
        1417
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2484": {
      "offset": [
        1531,
        1544
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9BB"
    },
    "2487": {
      "offset": [
        1531,
        1542
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xADA"
    },
    "2490": {
      "jump": "i",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2491": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1531,
        1544
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2496": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2498": {
      "op": "SHL"
    },
    "2499": {
      "op": "SUB"
    },
    "2500": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2627,
        2649
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 36
    },
    "2501": {
      "branch": 103,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2627,
        2649
      ],
      "op": "AND",
      "path": "0"
    },
    "2502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E5"
    },
    "2505": {
      "branch": 103,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2506": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2508": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2509": {
      "op": "PUSH4",
      "value": "0x1E4FBDF7"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2516": {
      "op": "SHL"
    },
    "2517": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2700,
        2701
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2521": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "ADD",
      "path": "0"
    },
    "2525": {
      "op": "MSTORE"
    },
    "2526": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2528": {
      "op": "ADD"
    },
    "2529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2672,
        2703
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x558"
    },
    "2532": {
      "op": "JUMP"
    },
    "2533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2623,
        2714
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2751
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 37,
      "value": "0x9EE"
    },
    "2537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2742,
        2750
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2741
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD44"
    },
    "2541": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2723,
        2751
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2723,
        2751
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2543,
        2758
      ],
      "op": "POP",
      "path": "0"
    },
    "2544": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        2543,
        2758
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2545": {
      "fn": "ERC20._approve",
      "offset": [
        8989,
        9117
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2546": {
      "fn": "ERC20._approve",
      "offset": [
        9073,
        9110
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 38,
      "value": "0x9FE"
    },
    "2549": {
      "fn": "ERC20._approve",
      "offset": [
        9082,
        9087
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2550": {
      "fn": "ERC20._approve",
      "offset": [
        9089,
        9096
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2551": {
      "fn": "ERC20._approve",
      "offset": [
        9098,
        9103
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2552": {
      "fn": "ERC20._approve",
      "offset": [
        9105,
        9109
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2554": {
      "fn": "ERC20._approve",
      "offset": [
        9073,
        9081
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA4"
    },
    "2557": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [
        9073,
        9110
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2558": {
      "fn": "ERC20._approve",
      "offset": [
        9073,
        9110
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2559": {
      "fn": "ERC20._approve",
      "offset": [
        8989,
        9117
      ],
      "op": "POP",
      "path": "2"
    },
    "2560": {
      "fn": "ERC20._approve",
      "offset": [
        8989,
        9117
      ],
      "op": "POP",
      "path": "2"
    },
    "2561": {
      "fn": "ERC20._approve",
      "offset": [
        8989,
        9117
      ],
      "op": "POP",
      "path": "2"
    },
    "2562": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        8989,
        9117
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2563": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10663,
        11140
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2570": {
      "op": "SHL"
    },
    "2571": {
      "op": "SUB"
    },
    "2572": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2573": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2574": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "AND",
      "path": "2"
    },
    "2575": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10762,
        10786
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2577": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2578": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2579": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2580": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3963
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2582": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2584": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2585": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2586": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2587": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2589": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2590": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2591": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3970
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2592": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "2593": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "DUP7",
      "path": "2"
    },
    "2594": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "AND",
      "path": "2"
    },
    "2595": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2596": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2597": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2598": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2599": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2600": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2601": {
      "fn": "ERC20.allowance",
      "offset": [
        3952,
        3979
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2604": {
      "op": "NOT"
    },
    "2605": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10828,
        10865
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2606": {
      "branch": 93,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10828,
        10865
      ],
      "op": "EQ",
      "path": "2"
    },
    "2607": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10824,
        11134
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "2610": {
      "branch": 93,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10824,
        11134
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2611": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10904,
        10909
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 39
    },
    "2612": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10885,
        10901
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2613": {
      "branch": 94,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10885,
        10909
      ],
      "op": "LT",
      "path": "2"
    },
    "2614": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10881,
        11011
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2615": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10881,
        11011
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA6C"
    },
    "2618": {
      "branch": 94,
      "fn": "ERC20._spendAllowance",
      "offset": [
        10881,
        11011
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2619": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2621": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2622": {
      "op": "PUSH4",
      "value": "0x7DC7A0D9"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2629": {
      "op": "SHL"
    },
    "2630": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2631": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "op": "DUP5"
    },
    "2641": {
      "op": "AND"
    },
    "2642": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2644": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2645": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "ADD",
      "path": "2"
    },
    "2646": {
      "op": "MSTORE"
    },
    "2647": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2649": {
      "op": "DUP2"
    },
    "2650": {
      "op": "ADD"
    },
    "2651": {
      "op": "DUP3"
    },
    "2652": {
      "op": "SWAP1"
    },
    "2653": {
      "op": "MSTORE"
    },
    "2654": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2656": {
      "op": "DUP2"
    },
    "2657": {
      "op": "ADD"
    },
    "2658": {
      "op": "DUP4"
    },
    "2659": {
      "op": "SWAP1"
    },
    "2660": {
      "op": "MSTORE"
    },
    "2661": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2663": {
      "op": "ADD"
    },
    "2664": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10936,
        10996
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "2667": {
      "op": "JUMP"
    },
    "2668": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        10881,
        11011
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2669": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11052,
        11109
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 40,
      "value": "0x666"
    },
    "2672": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11061,
        11066
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2673": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11068,
        11075
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2674": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11096,
        11101
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2675": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11077,
        11093
      ],
      "op": "DUP5",
      "path": "2"
    },
    "2676": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11077,
        11101
      ],
      "op": "SUB",
      "path": "2"
    },
    "2677": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11103,
        11108
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2679": {
      "fn": "ERC20._spendAllowance",
      "offset": [
        11052,
        11060
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDA4"
    },
    "2682": {
      "fn": "ERC20._spendAllowance",
      "jump": "i",
      "offset": [
        11052,
        11109
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2683": {
      "fn": "ERC20._transfer",
      "offset": [
        5656,
        5956
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "op": "SUB"
    },
    "2692": {
      "fn": "ERC20._transfer",
      "offset": [
        5739,
        5757
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 41
    },
    "2693": {
      "branch": 95,
      "fn": "ERC20._transfer",
      "offset": [
        5739,
        5757
      ],
      "op": "AND",
      "path": "2"
    },
    "2694": {
      "fn": "ERC20._transfer",
      "offset": [
        5735,
        5821
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAA5"
    },
    "2697": {
      "branch": 95,
      "fn": "ERC20._transfer",
      "offset": [
        5735,
        5821
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2698": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2700": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2701": {
      "op": "PUSH4",
      "value": "0x4B637E8F"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2708": {
      "op": "SHL"
    },
    "2709": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2710": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2711": {
      "fn": "ERC20._transfer",
      "offset": [
        5807,
        5808
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2713": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2715": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2716": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "ADD",
      "path": "2"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "fn": "ERC20._transfer",
      "offset": [
        5780,
        5810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "2724": {
      "op": "JUMP"
    },
    "2725": {
      "fn": "ERC20._transfer",
      "offset": [
        5735,
        5821
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2730": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2732": {
      "op": "SHL"
    },
    "2733": {
      "op": "SUB"
    },
    "2734": {
      "fn": "ERC20._transfer",
      "offset": [
        5834,
        5850
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 42
    },
    "2735": {
      "branch": 96,
      "fn": "ERC20._transfer",
      "offset": [
        5834,
        5850
      ],
      "op": "AND",
      "path": "2"
    },
    "2736": {
      "fn": "ERC20._transfer",
      "offset": [
        5830,
        5916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACF"
    },
    "2739": {
      "branch": 96,
      "fn": "ERC20._transfer",
      "offset": [
        5830,
        5916
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2740": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2742": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2743": {
      "op": "PUSH4",
      "value": "0xEC442F05"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2750": {
      "op": "SHL"
    },
    "2751": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2752": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2753": {
      "fn": "ERC20._transfer",
      "offset": [
        5902,
        5903
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2755": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2757": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2758": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "ADD",
      "path": "2"
    },
    "2759": {
      "op": "MSTORE"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2762": {
      "op": "ADD"
    },
    "2763": {
      "fn": "ERC20._transfer",
      "offset": [
        5873,
        5905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "2766": {
      "op": "JUMP"
    },
    "2767": {
      "fn": "ERC20._transfer",
      "offset": [
        5830,
        5916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2768": {
      "fn": "ERC20._transfer",
      "offset": [
        5925,
        5949
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 43,
      "value": "0x9FE"
    },
    "2771": {
      "fn": "ERC20._transfer",
      "offset": [
        5933,
        5937
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2772": {
      "fn": "ERC20._transfer",
      "offset": [
        5939,
        5941
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2773": {
      "fn": "ERC20._transfer",
      "offset": [
        5943,
        5948
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2774": {
      "fn": "ERC20._transfer",
      "offset": [
        5925,
        5932
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE79"
    },
    "2777": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [
        5925,
        5949
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2778": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1796,
        1958
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2779": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2781": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2788": {
      "op": "SHL"
    },
    "2789": {
      "op": "SUB"
    },
    "2790": {
      "fn": "Ownable.owner",
      "offset": [
        1710,
        1716
      ],
      "op": "AND",
      "path": "0"
    },
    "2791": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2792": {
      "branch": 104,
      "fn": "Ownable._checkOwner",
      "offset": [
        1855,
        1878
      ],
      "op": "EQ",
      "path": "0",
      "statement": 44
    },
    "2793": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1851,
        1952
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67E"
    },
    "2796": {
      "branch": 104,
      "fn": "Ownable._checkOwner",
      "offset": [
        1851,
        1952
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2797": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2799": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2800": {
      "op": "PUSH4",
      "value": "0x118CDAA7"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2809": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2810": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2811": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2813": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2814": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "ADD",
      "path": "0"
    },
    "2815": {
      "op": "MSTORE"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2818": {
      "op": "ADD"
    },
    "2819": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1901,
        1941
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x558"
    },
    "2822": {
      "op": "JUMP"
    },
    "2823": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3491,
        4092
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2824": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3557,
        3564
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2826": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3557,
        3564
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2827": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3604,
        3606
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x12"
    },
    "2829": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3557,
        3564
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2830": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3666,
        3680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB18"
    },
    "2833": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3604,
        3606
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2834": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3666,
        3668
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2836": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3666,
        3680
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AC"
    },
    "2839": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3666,
        3680
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2840": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3666,
        3680
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2841": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3647,
        3661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB23"
    },
    "2844": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3653,
        3661
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2845": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3647,
        3649
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2847": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3647,
        3661
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AC"
    },
    "2850": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3647,
        3661
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2851": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3647,
        3661
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2852": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB2D"
    },
    "2855": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3662
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2856": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3643
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2857": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3662
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C3"
    },
    "2860": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3637,
        3662
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2861": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3662
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2862": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3681
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB37"
    },
    "2865": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3681
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "2866": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2867": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3681
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1396"
    },
    "2870": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3637,
        3681
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2871": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3637,
        3681
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2872": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3616,
        3681
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2873": {
      "op": "POP"
    },
    "2874": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3691,
        3709
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2876": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3722,
        3736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB46"
    },
    "2879": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3728,
        3736
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2880": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3722,
        3724
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2882": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3722,
        3736
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14AC"
    },
    "2885": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3722,
        3736
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2886": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3722,
        3736
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2887": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3712,
        3737
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB50"
    },
    "2890": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3712,
        3737
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2891": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3712,
        3718
      ],
      "op": "DUP8",
      "path": "10"
    },
    "2892": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3712,
        3737
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14B8"
    },
    "2895": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3712,
        3737
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2896": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3712,
        3737
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2897": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3691,
        3737
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2898": {
      "op": "POP"
    },
    "2899": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3820,
        3843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB61"
    },
    "2902": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3834,
        3842
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0xE8D4A51000"
    },
    "2908": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3691,
        3737
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2909": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3820,
        3843
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C3"
    },
    "2912": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3820,
        3843
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2913": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3820,
        3843
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2914": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3847,
        3853
      ],
      "op": "PUSH3",
      "path": "10",
      "value": "0x1E240"
    },
    "2918": {
      "branch": 87,
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3820,
        3853
      ],
      "op": "SUB",
      "path": "10"
    },
    "2919": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB80"
    },
    "2922": {
      "branch": 87,
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2923": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3882,
        3905
      ],
      "op": "PUSH2",
      "path": "10",
      "statement": 45,
      "value": "0xB79"
    },
    "2926": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3896,
        3904
      ],
      "op": "PUSH5",
      "path": "10",
      "value": "0xE8D4A51000"
    },
    "2932": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3882,
        3892
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2933": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3882,
        3905
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14B8"
    },
    "2936": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "i",
      "offset": [
        3882,
        3905
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2937": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3882,
        3905
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2938": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3869,
        3905
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2939": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3869,
        3905
      ],
      "op": "POP",
      "path": "10"
    },
    "2940": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xB84"
    },
    "2943": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2944": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2945": {
      "op": "POP"
    },
    "2946": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3981,
        3982
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 46,
      "value": "0x0"
    },
    "2948": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3816,
        4044
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2949": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        4062,
        4072
      ],
      "op": "SWAP1",
      "path": "10",
      "statement": 47
    },
    "2950": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        4062,
        4072
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "2951": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        4074,
        4084
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2952": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        4074,
        4084
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2953": {
      "op": "POP"
    },
    "2954": {
      "fn": "CalFundToken.extractGasSubsidy",
      "offset": [
        3491,
        4092
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2955": {
      "op": "POP"
    },
    "2956": {
      "op": "POP"
    },
    "2957": {
      "op": "POP"
    },
    "2958": {
      "fn": "CalFundToken.extractGasSubsidy",
      "jump": "o",
      "offset": [
        3491,
        4092
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2959": {
      "fn": "ERC20._mint",
      "offset": [
        7721,
        7929
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2960": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2962": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2964": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2966": {
      "op": "SHL"
    },
    "2967": {
      "op": "SUB"
    },
    "2968": {
      "fn": "ERC20._mint",
      "offset": [
        7791,
        7812
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 48
    },
    "2969": {
      "branch": 97,
      "fn": "ERC20._mint",
      "offset": [
        7791,
        7812
      ],
      "op": "AND",
      "path": "2"
    },
    "2970": {
      "fn": "ERC20._mint",
      "offset": [
        7787,
        7878
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xBB9"
    },
    "2973": {
      "branch": 97,
      "fn": "ERC20._mint",
      "offset": [
        7787,
        7878
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2974": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2976": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2977": {
      "op": "PUSH4",
      "value": "0xEC442F05"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2984": {
      "op": "SHL"
    },
    "2985": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2986": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2987": {
      "fn": "ERC20._mint",
      "offset": [
        7864,
        7865
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2989": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2991": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2992": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "ADD",
      "path": "2"
    },
    "2993": {
      "op": "MSTORE"
    },
    "2994": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2996": {
      "op": "ADD"
    },
    "2997": {
      "fn": "ERC20._mint",
      "offset": [
        7835,
        7867
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "3000": {
      "op": "JUMP"
    },
    "3001": {
      "fn": "ERC20._mint",
      "offset": [
        7787,
        7878
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3002": {
      "fn": "ERC20._mint",
      "offset": [
        7887,
        7922
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 49,
      "value": "0xBC5"
    },
    "3005": {
      "fn": "ERC20._mint",
      "offset": [
        7903,
        7904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3007": {
      "fn": "ERC20._mint",
      "offset": [
        7907,
        7914
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3008": {
      "fn": "ERC20._mint",
      "offset": [
        7916,
        7921
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3009": {
      "fn": "ERC20._mint",
      "offset": [
        7887,
        7894
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE79"
    },
    "3012": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [
        7887,
        7922
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3013": {
      "fn": "ERC20._mint",
      "offset": [
        7887,
        7922
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3014": {
      "fn": "ERC20._mint",
      "offset": [
        7721,
        7929
      ],
      "op": "POP",
      "path": "2"
    },
    "3015": {
      "fn": "ERC20._mint",
      "offset": [
        7721,
        7929
      ],
      "op": "POP",
      "path": "2"
    },
    "3016": {
      "fn": "ERC20._mint",
      "jump": "o",
      "offset": [
        7721,
        7929
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3017": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4098,
        5045
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3018": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4202,
        4213
      ],
      "op": "GASPRICE",
      "path": "10"
    },
    "3019": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4183,
        4199
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3021": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4227,
        4240
      ],
      "op": "DUP2",
      "path": "10"
    },
    "3022": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4227,
        4240
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3023": {
      "branch": 88,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4227,
        4240
      ],
      "op": "SUB",
      "path": "10"
    },
    "3024": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4223,
        4357
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC08"
    },
    "3027": {
      "branch": 88,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4223,
        4357
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3028": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 50,
      "value": "0x40"
    },
    "3030": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3031": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3036": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3038": {
      "op": "SHL"
    },
    "3039": {
      "op": "SUB"
    },
    "3040": {
      "op": "DUP6"
    },
    "3041": {
      "op": "AND"
    },
    "3042": {
      "op": "DUP2"
    },
    "3043": {
      "op": "MSTORE"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3046": {
      "op": "DUP2"
    },
    "3047": {
      "op": "ADD"
    },
    "3048": {
      "op": "DUP5"
    },
    "3049": {
      "op": "SWAP1"
    },
    "3050": {
      "op": "MSTORE"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3053": {
      "op": "DUP1"
    },
    "3054": {
      "op": "MLOAD"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3057": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3060": {
      "op": "DUP4"
    },
    "3061": {
      "op": "CODECOPY"
    },
    "3062": {
      "op": "DUP2"
    },
    "3063": {
      "op": "MLOAD"
    },
    "3064": {
      "op": "SWAP2"
    },
    "3065": {
      "op": "MSTORE"
    },
    "3066": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3067": {
      "op": "ADD"
    },
    "3068": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3070": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3071": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3072": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3073": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "SUB",
      "path": "10"
    },
    "3074": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3075": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4261,
        4300
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3076": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4314,
        4321
      ],
      "op": "POP",
      "path": "10",
      "statement": 51
    },
    "3077": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4098,
        5045
      ],
      "op": "POP",
      "path": "10"
    },
    "3078": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4098,
        5045
      ],
      "op": "POP",
      "path": "10"
    },
    "3079": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "o",
      "offset": [
        4098,
        5045
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3080": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4223,
        4357
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3081": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4367,
        4383
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3083": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4386,
        4407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC14"
    },
    "3086": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4399,
        4407
      ],
      "op": "DUP3",
      "path": "10"
    },
    "3087": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4386,
        4396
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3088": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4386,
        4407
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x13C3"
    },
    "3091": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "i",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3092": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4386,
        4407
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3093": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4367,
        4407
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3094": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4367,
        4407
      ],
      "op": "POP",
      "path": "10"
    },
    "3095": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4421,
        4429
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3096": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4433,
        4434
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "3098": {
      "branch": 89,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4421,
        4434
      ],
      "op": "SUB",
      "path": "10"
    },
    "3099": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4417,
        4562
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC55"
    },
    "3102": {
      "branch": 89,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4417,
        4562
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3103": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 52,
      "value": "0x40"
    },
    "3105": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3106": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3111": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3113": {
      "op": "SHL"
    },
    "3114": {
      "op": "SUB"
    },
    "3115": {
      "op": "DUP7"
    },
    "3116": {
      "op": "AND"
    },
    "3117": {
      "op": "DUP2"
    },
    "3118": {
      "op": "MSTORE"
    },
    "3119": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3121": {
      "op": "DUP2"
    },
    "3122": {
      "op": "ADD"
    },
    "3123": {
      "op": "DUP6"
    },
    "3124": {
      "op": "SWAP1"
    },
    "3125": {
      "op": "MSTORE"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3128": {
      "op": "DUP1"
    },
    "3129": {
      "op": "MLOAD"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3132": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3135": {
      "op": "DUP4"
    },
    "3136": {
      "op": "CODECOPY"
    },
    "3137": {
      "op": "DUP2"
    },
    "3138": {
      "op": "MLOAD"
    },
    "3139": {
      "op": "SWAP2"
    },
    "3140": {
      "op": "MSTORE"
    },
    "3141": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3142": {
      "op": "ADD"
    },
    "3143": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3144": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "3146": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3147": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3148": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3149": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "SUB",
      "path": "10"
    },
    "3150": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3151": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4455,
        4494
      ],
      "op": "LOG1",
      "path": "10"
    },
    "3152": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4508,
        4515
      ],
      "op": "POP",
      "path": "10",
      "statement": 53
    },
    "3153": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4508,
        4515
      ],
      "op": "POP",
      "path": "10"
    },
    "3154": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4098,
        5045
      ],
      "op": "POP",
      "path": "10"
    },
    "3155": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4098,
        5045
      ],
      "op": "POP",
      "path": "10"
    },
    "3156": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "o",
      "offset": [
        4098,
        5045
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3157": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4417,
        4562
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3158": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4577,
        4623
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC5F"
    },
    "3161": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4605,
        4609
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "3162": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4612,
        4622
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3163": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4577,
        4596
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xFA3"
    },
    "3166": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "i",
      "offset": [
        4577,
        4623
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3167": {
      "branch": 90,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4577,
        4623
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3168": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4572,
        4714
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC90"
    },
    "3171": {
      "branch": 90,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4572,
        4714
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3172": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4644,
        4683
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 54,
      "value": "0x40"
    },
    "3174": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4644,
        4683
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3175": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4644,
        4683
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3180": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3182": {
      "op": "SHL"
    },
    "3183": {
      "op": "SUB"
    },
    "3184": {
      "op": "DUP7"
    },
    "3185": {
      "op": "AND"
    },
    "3186": {
      "op": "DUP2"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3190": {
      "op": "DUP2"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "DUP6"
    },
    "3193": {
      "op": "SWAP1"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3197": {
      "op": "DUP1"
    },
    "3198": {
      "op": "MLOAD"
    },
    "3199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3201": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3204": {
      "op": "DUP4"
    },
    "3205": {
      "op": "CODECOPY"
    },
    "3206": {
      "op": "DUP2"
    },
    "3207": {
      "op": "MLOAD"
    },
    "3208": {
      "op": "SWAP2"
    },
    "3209": {
      "op": "MSTORE"
    },
    "3210": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4644,
        4683
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3211": {
      "op": "ADD"
    },
    "3212": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4644,
        4683
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC47"
    },
    "3215": {
      "op": "JUMP"
    },
    "3216": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4572,
        4714
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3217": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4729,
        4753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC99"
    },
    "3220": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4742,
        4752
      ],
      "op": "DUP4",
      "path": "10"
    },
    "3221": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4729,
        4741
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x111E"
    },
    "3224": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "i",
      "offset": [
        4729,
        4753
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3225": {
      "branch": 91,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4729,
        4753
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3226": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4724,
        4844
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCCA"
    },
    "3229": {
      "branch": 91,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4724,
        4844
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3230": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4774,
        4813
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 55,
      "value": "0x40"
    },
    "3232": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4774,
        4813
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3233": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4774,
        4813
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3240": {
      "op": "SHL"
    },
    "3241": {
      "op": "SUB"
    },
    "3242": {
      "op": "DUP7"
    },
    "3243": {
      "op": "AND"
    },
    "3244": {
      "op": "DUP2"
    },
    "3245": {
      "op": "MSTORE"
    },
    "3246": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3248": {
      "op": "DUP2"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "op": "DUP6"
    },
    "3251": {
      "op": "SWAP1"
    },
    "3252": {
      "op": "MSTORE"
    },
    "3253": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3255": {
      "op": "DUP1"
    },
    "3256": {
      "op": "MLOAD"
    },
    "3257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3259": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3262": {
      "op": "DUP4"
    },
    "3263": {
      "op": "CODECOPY"
    },
    "3264": {
      "op": "DUP2"
    },
    "3265": {
      "op": "MLOAD"
    },
    "3266": {
      "op": "SWAP2"
    },
    "3267": {
      "op": "MSTORE"
    },
    "3268": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4774,
        4813
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3269": {
      "op": "ADD"
    },
    "3270": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4774,
        4813
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC47"
    },
    "3273": {
      "op": "JUMP"
    },
    "3274": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4724,
        4844
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3275": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4859,
        4891
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xCD4"
    },
    "3278": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4869,
        4878
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3279": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4880,
        4890
      ],
      "op": "DUP5",
      "path": "10"
    },
    "3280": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4859,
        4868
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x118A"
    },
    "3283": {
      "fn": "CalFundToken.provideGasSubsidy",
      "jump": "i",
      "offset": [
        4859,
        4891
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3284": {
      "branch": 92,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4859,
        4891
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3285": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4854,
        4982
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xD05"
    },
    "3288": {
      "branch": 92,
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4854,
        4982
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "3289": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4912,
        4951
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 56,
      "value": "0x40"
    },
    "3291": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4912,
        4951
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3292": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4912,
        4951
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3299": {
      "op": "SHL"
    },
    "3300": {
      "op": "SUB"
    },
    "3301": {
      "op": "DUP7"
    },
    "3302": {
      "op": "AND"
    },
    "3303": {
      "op": "DUP2"
    },
    "3304": {
      "op": "MSTORE"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3307": {
      "op": "DUP2"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "DUP6"
    },
    "3310": {
      "op": "SWAP1"
    },
    "3311": {
      "op": "MSTORE"
    },
    "3312": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3314": {
      "op": "DUP1"
    },
    "3315": {
      "op": "MLOAD"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3318": {
      "op": "PUSH2",
      "value": "0x1578"
    },
    "3321": {
      "op": "DUP4"
    },
    "3322": {
      "op": "CODECOPY"
    },
    "3323": {
      "op": "DUP2"
    },
    "3324": {
      "op": "MLOAD"
    },
    "3325": {
      "op": "SWAP2"
    },
    "3326": {
      "op": "MSTORE"
    },
    "3327": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4912,
        4951
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3328": {
      "op": "ADD"
    },
    "3329": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4912,
        4951
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC47"
    },
    "3332": {
      "op": "JUMP"
    },
    "3333": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4854,
        4982
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3334": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 57,
      "value": "0x40"
    },
    "3336": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "DUP1",
      "path": "10"
    },
    "3337": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3344": {
      "op": "SHL"
    },
    "3345": {
      "op": "SUB"
    },
    "3346": {
      "op": "DUP7"
    },
    "3347": {
      "op": "AND"
    },
    "3348": {
      "op": "DUP2"
    },
    "3349": {
      "op": "MSTORE"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3352": {
      "op": "DUP2"
    },
    "3353": {
      "op": "ADD"
    },
    "3354": {
      "op": "DUP6"
    },
    "3355": {
      "op": "SWAP1"
    },
    "3356": {
      "op": "MSTORE"
    },
    "3357": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "PUSH32",
      "path": "10",
      "value": "0x2EB5406D62014FA2D61FDA20A970CE8EB194122574A3B4C95881566C61C9776F"
    },
    "3390": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "fn": "CalFundToken.provideGasSubsidy",
      "offset": [
        4997,
        5038
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC47"
    },
    "3395": {
      "op": "JUMP"
    },
    "3396": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2912,
        3099
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3397": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3399": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3400": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3401": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3407": {
      "op": "SHL"
    },
    "3408": {
      "op": "SUB"
    },
    "3409": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 58
    },
    "3410": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3411": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "AND",
      "path": "0"
    },
    "3412": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3414": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3416": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3418": {
      "op": "SHL"
    },
    "3419": {
      "op": "SUB"
    },
    "3420": {
      "op": "NOT"
    },
    "3421": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3422": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "AND",
      "path": "0"
    },
    "3423": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3424": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "OR",
      "path": "0"
    },
    "3425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3427": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 59,
      "value": "0x40"
    },
    "3430": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3431": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3432": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "AND",
      "path": "0"
    },
    "3433": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3434": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3020,
        3037
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3435": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3436": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3004,
        3010
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3437": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3470": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3471": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2985,
        3001
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3473": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2985,
        3001
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3474": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        3052,
        3092
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3475": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2975,
        3099
      ],
      "op": "POP",
      "path": "0"
    },
    "3476": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2912,
        3099
      ],
      "op": "POP",
      "path": "0"
    },
    "3477": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2912,
        3099
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3478": {
      "fn": "ERC20.transfer",
      "offset": [
        3610,
        3788
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3479": {
      "fn": "ERC20.transfer",
      "offset": [
        3679,
        3683
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3481": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3482": {
      "fn": "ERC20.transfer",
      "offset": [
        3733,
        3760
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 60,
      "value": "0x4C4"
    },
    "3485": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        745
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3486": {
      "fn": "ERC20.transfer",
      "offset": [
        3750,
        3752
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3487": {
      "fn": "ERC20.transfer",
      "offset": [
        3754,
        3759
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3488": {
      "fn": "ERC20.transfer",
      "offset": [
        3733,
        3742
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA7B"
    },
    "3491": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [
        3733,
        3760
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3492": {
      "fn": "ERC20._approve",
      "offset": [
        9949,
        10381
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3499": {
      "op": "SHL"
    },
    "3500": {
      "op": "SUB"
    },
    "3501": {
      "fn": "ERC20._approve",
      "offset": [
        10061,
        10080
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 61
    },
    "3502": {
      "branch": 98,
      "fn": "ERC20._approve",
      "offset": [
        10061,
        10080
      ],
      "op": "AND",
      "path": "2"
    },
    "3503": {
      "fn": "ERC20._approve",
      "offset": [
        10057,
        10146
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDCE"
    },
    "3506": {
      "branch": 98,
      "fn": "ERC20._approve",
      "offset": [
        10057,
        10146
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3507": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3509": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3510": {
      "op": "PUSH4",
      "value": "0xE602DF05"
    },
    "3515": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3517": {
      "op": "SHL"
    },
    "3518": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3519": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3520": {
      "fn": "ERC20._approve",
      "offset": [
        10132,
        10133
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3522": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3524": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3525": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "ADD",
      "path": "2"
    },
    "3526": {
      "op": "MSTORE"
    },
    "3527": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3529": {
      "op": "ADD"
    },
    "3530": {
      "fn": "ERC20._approve",
      "offset": [
        10103,
        10135
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "3533": {
      "op": "JUMP"
    },
    "3534": {
      "fn": "ERC20._approve",
      "offset": [
        10057,
        10146
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3539": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3541": {
      "op": "SHL"
    },
    "3542": {
      "op": "SUB"
    },
    "3543": {
      "fn": "ERC20._approve",
      "offset": [
        10159,
        10180
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 62
    },
    "3544": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        10159,
        10180
      ],
      "op": "AND",
      "path": "2"
    },
    "3545": {
      "fn": "ERC20._approve",
      "offset": [
        10155,
        10245
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xDF8"
    },
    "3548": {
      "branch": 99,
      "fn": "ERC20._approve",
      "offset": [
        10155,
        10245
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3549": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3551": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3552": {
      "op": "PUSH4",
      "value": "0x4A1406B1"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3559": {
      "op": "SHL"
    },
    "3560": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3561": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3562": {
      "fn": "ERC20._approve",
      "offset": [
        10231,
        10232
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3564": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3566": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3567": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "ADD",
      "path": "2"
    },
    "3568": {
      "op": "MSTORE"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "fn": "ERC20._approve",
      "offset": [
        10203,
        10234
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "3575": {
      "op": "JUMP"
    },
    "3576": {
      "fn": "ERC20._approve",
      "offset": [
        10155,
        10245
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3579": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3583": {
      "op": "SHL"
    },
    "3584": {
      "op": "SUB"
    },
    "3585": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 63
    },
    "3586": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3587": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "AND",
      "path": "2"
    },
    "3588": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3590": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3591": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3592": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3593": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10265
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3595": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3597": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3598": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3599": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3600": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3602": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3603": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3604": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10272
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3605": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3606": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "DUP8",
      "path": "2"
    },
    "3607": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "AND",
      "path": "2"
    },
    "3608": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3609": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3610": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3611": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3612": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3613": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10281
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3614": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10289
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3615": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10289
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3616": {
      "fn": "ERC20._approve",
      "offset": [
        10254,
        10289
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3617": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10375
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3618": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10375
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3619": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10375
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x666"
    },
    "3622": {
      "fn": "ERC20._approve",
      "offset": [
        10299,
        10375
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3623": {
      "fn": "ERC20._approve",
      "offset": [
        10349,
        10356
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 64
    },
    "3624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3630": {
      "op": "SHL"
    },
    "3631": {
      "op": "SUB"
    },
    "3632": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "AND",
      "path": "2"
    },
    "3633": {
      "fn": "ERC20._approve",
      "offset": [
        10342,
        10347
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3640": {
      "op": "SHL"
    },
    "3641": {
      "op": "SUB"
    },
    "3642": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "AND",
      "path": "2"
    },
    "3643": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3676": {
      "fn": "ERC20._approve",
      "offset": [
        10358,
        10363
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3677": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3679": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3680": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6B"
    },
    "3683": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3684": {
      "op": "DUP2"
    },
    "3685": {
      "op": "MSTORE"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3688": {
      "op": "ADD"
    },
    "3689": {
      "op": "SWAP1"
    },
    "3690": {
      "op": "JUMP"
    },
    "3691": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3692": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3694": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3695": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3696": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3697": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "SUB",
      "path": "2"
    },
    "3698": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3699": {
      "fn": "ERC20._approve",
      "offset": [
        10333,
        10364
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3700": {
      "fn": "ERC20._approve",
      "offset": [
        9949,
        10381
      ],
      "op": "POP",
      "path": "2"
    },
    "3701": {
      "fn": "ERC20._approve",
      "offset": [
        9949,
        10381
      ],
      "op": "POP",
      "path": "2"
    },
    "3702": {
      "fn": "ERC20._approve",
      "offset": [
        9949,
        10381
      ],
      "op": "POP",
      "path": "2"
    },
    "3703": {
      "fn": "ERC20._approve",
      "offset": [
        9949,
        10381
      ],
      "op": "POP",
      "path": "2"
    },
    "3704": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [
        9949,
        10381
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3705": {
      "fn": "ERC20._update",
      "offset": [
        6271,
        7378
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3712": {
      "op": "SHL"
    },
    "3713": {
      "op": "SUB"
    },
    "3714": {
      "fn": "ERC20._update",
      "offset": [
        6360,
        6378
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3715": {
      "branch": 100,
      "fn": "ERC20._update",
      "offset": [
        6360,
        6378
      ],
      "op": "AND",
      "path": "2"
    },
    "3716": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEA4"
    },
    "3719": {
      "branch": 100,
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3720": {
      "fn": "ERC20._update",
      "offset": [
        6512,
        6517
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 65
    },
    "3721": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3723": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6508
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3725": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3726": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3727": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3728": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE99"
    },
    "3731": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3732": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3733": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1366"
    },
    "3736": {
      "fn": "ERC20._update",
      "jump": "i",
      "offset": [
        6496,
        6517
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3737": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3738": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3739": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3740": {
      "fn": "ERC20._update",
      "offset": [
        6496,
        6517
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF16"
    },
    "3745": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3746": {
      "op": "POP"
    },
    "3747": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3748": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3755": {
      "op": "SHL"
    },
    "3756": {
      "op": "SUB"
    },
    "3757": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3758": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "AND",
      "path": "2"
    },
    "3759": {
      "fn": "ERC20._update",
      "offset": [
        6548,
        6567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3761": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3762": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3763": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3764": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3766": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3767": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3768": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3769": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3771": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3772": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3773": {
      "fn": "ERC20._update",
      "offset": [
        6570,
        6585
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3774": {
      "fn": "ERC20._update",
      "offset": [
        6603,
        6622
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 66
    },
    "3775": {
      "fn": "ERC20._update",
      "offset": [
        6603,
        6622
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3776": {
      "branch": 101,
      "fn": "ERC20._update",
      "offset": [
        6603,
        6622
      ],
      "op": "LT",
      "path": "2"
    },
    "3777": {
      "fn": "ERC20._update",
      "offset": [
        6599,
        6714
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3778": {
      "fn": "ERC20._update",
      "offset": [
        6599,
        6714
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEF7"
    },
    "3781": {
      "branch": 101,
      "fn": "ERC20._update",
      "offset": [
        6599,
        6714
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3782": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3784": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3785": {
      "op": "PUSH4",
      "value": "0x391434E3"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3794": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3795": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3797": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3801": {
      "op": "SHL"
    },
    "3802": {
      "op": "SUB"
    },
    "3803": {
      "op": "DUP6"
    },
    "3804": {
      "op": "AND"
    },
    "3805": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3807": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3808": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "ADD",
      "path": "2"
    },
    "3809": {
      "op": "MSTORE"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3812": {
      "op": "DUP2"
    },
    "3813": {
      "op": "ADD"
    },
    "3814": {
      "op": "DUP3"
    },
    "3815": {
      "op": "SWAP1"
    },
    "3816": {
      "op": "MSTORE"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3819": {
      "op": "DUP2"
    },
    "3820": {
      "op": "ADD"
    },
    "3821": {
      "op": "DUP4"
    },
    "3822": {
      "op": "SWAP1"
    },
    "3823": {
      "op": "MSTORE"
    },
    "3824": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3826": {
      "op": "ADD"
    },
    "3827": {
      "fn": "ERC20._update",
      "offset": [
        6649,
        6699
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x558"
    },
    "3830": {
      "op": "JUMP"
    },
    "3831": {
      "fn": "ERC20._update",
      "offset": [
        6599,
        6714
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3838": {
      "op": "SHL"
    },
    "3839": {
      "op": "SUB"
    },
    "3840": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 67
    },
    "3841": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "AND",
      "path": "2"
    },
    "3842": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6843
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3844": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3845": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3846": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3847": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3849": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3850": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3851": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3852": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3854": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3855": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6849
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3856": {
      "fn": "ERC20._update",
      "offset": [
        6852,
        6871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3857": {
      "fn": "ERC20._update",
      "offset": [
        6852,
        6871
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3858": {
      "fn": "ERC20._update",
      "offset": [
        6852,
        6871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3859": {
      "fn": "ERC20._update",
      "offset": [
        6852,
        6871
      ],
      "op": "SUB",
      "path": "2"
    },
    "3860": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6871
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3861": {
      "fn": "ERC20._update",
      "offset": [
        6834,
        6871
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3862": {
      "fn": "ERC20._update",
      "offset": [
        6356,
        6896
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3867": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3869": {
      "op": "SHL"
    },
    "3870": {
      "op": "SUB"
    },
    "3871": {
      "fn": "ERC20._update",
      "offset": [
        6910,
        6926
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3872": {
      "branch": 102,
      "fn": "ERC20._update",
      "offset": [
        6910,
        6926
      ],
      "op": "AND",
      "path": "2"
    },
    "3873": {
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF32"
    },
    "3876": {
      "branch": 102,
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3877": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7085
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 68,
      "value": "0x2"
    },
    "3879": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3880": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3881": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3882": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3883": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "SUB",
      "path": "2"
    },
    "3884": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3885": {
      "fn": "ERC20._update",
      "offset": [
        7073,
        7094
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3886": {
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF51"
    },
    "3889": {
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3890": {
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3897": {
      "op": "SHL"
    },
    "3898": {
      "op": "SUB"
    },
    "3899": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 69
    },
    "3900": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "AND",
      "path": "2"
    },
    "3901": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7293
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3903": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3904": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3905": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3906": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3908": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3909": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3910": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3911": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3913": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3914": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7297
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3915": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3916": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3917": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3918": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "ADD",
      "path": "2"
    },
    "3919": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3920": {
      "fn": "ERC20._update",
      "offset": [
        7284,
        7306
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3921": {
      "fn": "ERC20._update",
      "offset": [
        6906,
        7331
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3922": {
      "fn": "ERC20._update",
      "offset": [
        7361,
        7363
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 70
    },
    "3923": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3925": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3929": {
      "op": "SHL"
    },
    "3930": {
      "op": "SUB"
    },
    "3931": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "AND",
      "path": "2"
    },
    "3932": {
      "fn": "ERC20._update",
      "offset": [
        7355,
        7359
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3933": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3935": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3937": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3939": {
      "op": "SHL"
    },
    "3940": {
      "op": "SUB"
    },
    "3941": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "AND",
      "path": "2"
    },
    "3942": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3975": {
      "fn": "ERC20._update",
      "offset": [
        7365,
        7370
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3976": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3978": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3979": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF96"
    },
    "3982": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3983": {
      "op": "DUP2"
    },
    "3984": {
      "op": "MSTORE"
    },
    "3985": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3987": {
      "op": "ADD"
    },
    "3988": {
      "op": "SWAP1"
    },
    "3989": {
      "op": "JUMP"
    },
    "3990": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3991": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3993": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3994": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3995": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3996": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "SUB",
      "path": "2"
    },
    "3997": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3998": {
      "fn": "ERC20._update",
      "offset": [
        7346,
        7371
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3999": {
      "fn": "ERC20._update",
      "offset": [
        6271,
        7378
      ],
      "op": "POP",
      "path": "2"
    },
    "4000": {
      "fn": "ERC20._update",
      "offset": [
        6271,
        7378
      ],
      "op": "POP",
      "path": "2"
    },
    "4001": {
      "fn": "ERC20._update",
      "offset": [
        6271,
        7378
      ],
      "op": "POP",
      "path": "2"
    },
    "4002": {
      "fn": "ERC20._update",
      "jump": "o",
      "offset": [
        6271,
        7378
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4003": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5051,
        5759
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4004": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5223,
        5236
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4006": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5223,
        5236
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4007": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4009": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4010": {
      "op": "PUSH4",
      "value": "0x95EA7B3"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4017": {
      "op": "SHL"
    },
    "4018": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4019": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4026": {
      "op": "SHL"
    },
    "4027": {
      "op": "SUB"
    },
    "4028": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5223,
        5236
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4029": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5223,
        5236
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4030": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5223,
        5236
      ],
      "op": "AND",
      "path": "10"
    },
    "4031": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4033": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4034": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "ADD",
      "path": "10"
    },
    "4035": {
      "op": "MSTORE"
    },
    "4036": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4038": {
      "op": "DUP2"
    },
    "4039": {
      "op": "ADD"
    },
    "4040": {
      "op": "DUP3"
    },
    "4041": {
      "op": "SWAP1"
    },
    "4042": {
      "op": "MSTORE"
    },
    "4043": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5132,
        5136
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4045": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5132,
        5136
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4046": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5206
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "4047": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5206
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4048": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5214
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x95EA7B3"
    },
    "4053": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5214
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4054": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4056": {
      "op": "ADD"
    },
    "4057": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4059": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4061": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4062": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4063": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4064": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SUB",
      "path": "10"
    },
    "4065": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4066": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4068": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4069": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "GAS",
      "path": "10"
    },
    "4070": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "CALL",
      "path": "10"
    },
    "4071": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4072": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "POP",
      "path": "10"
    },
    "4073": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "POP",
      "path": "10"
    },
    "4074": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "POP",
      "path": "10"
    },
    "4075": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4076": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4077": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1013"
    },
    "4080": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4081": {
      "op": "POP"
    },
    "4082": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4084": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4085": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4086": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "4088": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4089": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4090": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4091": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "ADD",
      "path": "10"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4094": {
      "op": "NOT"
    },
    "4095": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "AND",
      "path": "10"
    },
    "4096": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4097": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "ADD",
      "path": "10"
    },
    "4098": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4099": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4100": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4101": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1010"
    },
    "4104": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4105": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4106": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "ADD",
      "path": "10"
    },
    "4107": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4108": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14CC"
    },
    "4111": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "jump": "i",
      "offset": [
        5202,
        5251
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4112": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4113": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4115": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5202,
        5251
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4116": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5198,
        5298
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x101F"
    },
    "4119": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5198,
        5298
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4120": {
      "op": "POP"
    },
    "4121": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5282,
        5287
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 71,
      "value": "0x0"
    },
    "4123": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5275,
        5287
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CA"
    },
    "4126": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5275,
        5287
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4127": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5198,
        5298
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4131": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4132": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4133": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5354,
        5355
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x2"
    },
    "4135": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4136": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4137": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4138": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "4140": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4141": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "ADD",
      "path": "10"
    },
    "4142": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4143": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4144": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5316,
        5337
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4146": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5316,
        5337
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4147": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4149": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4150": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "ADD",
      "path": "10"
    },
    "4151": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4152": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4153": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "4154": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4155": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5340,
        5356
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "4156": {
      "op": "POP"
    },
    "4157": {
      "op": "POP"
    },
    "4158": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 72,
      "value": "0x9"
    },
    "4160": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4161": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4162": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4163": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4164": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "4165": {
      "op": "POP"
    },
    "4166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4172": {
      "op": "SHL"
    },
    "4173": {
      "op": "SUB"
    },
    "4174": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "AND",
      "path": "10"
    },
    "4175": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4176": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4177": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4178": {
      "op": "POP"
    },
    "4179": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4181": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5384,
        5390
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4182": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1061"
    },
    "4185": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4186": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1061"
    },
    "4189": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14EE"
    },
    "4192": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "jump": "i",
      "offset": [
        5366,
        5373
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4193": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4194": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4196": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "MUL",
      "path": "10"
    },
    "4197": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4199": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "ADD",
      "path": "10"
    },
    "4200": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5373
      ],
      "op": "ADD",
      "path": "10"
    },
    "4201": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4206": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4208": {
      "op": "SHL"
    },
    "4209": {
      "op": "SUB"
    },
    "4210": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "AND",
      "path": "10"
    },
    "4211": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4212": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4219": {
      "op": "SHL"
    },
    "4220": {
      "op": "SUB"
    },
    "4221": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "AND",
      "path": "10"
    },
    "4222": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4223": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4224": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "POP",
      "path": "10"
    },
    "4225": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5366,
        5391
      ],
      "op": "POP",
      "path": "10"
    },
    "4226": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5437,
        5441
      ],
      "op": "ADDRESS",
      "path": "10",
      "statement": 73
    },
    "4227": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5423
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4228": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5424,
        5425
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4230": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4231": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4232": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4233": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "LT",
      "path": "10"
    },
    "4234": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1095"
    },
    "4237": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4238": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1095"
    },
    "4241": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x14EE"
    },
    "4244": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "jump": "i",
      "offset": [
        5419,
        5426
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4245": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4248": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4250": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4252": {
      "op": "SHL"
    },
    "4253": {
      "op": "SUB"
    },
    "4254": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5442
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4255": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5442
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4256": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5442
      ],
      "op": "AND",
      "path": "10"
    },
    "4257": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4259": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4260": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4261": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "MUL",
      "path": "10"
    },
    "4262": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4263": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4264": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4265": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "ADD",
      "path": "10"
    },
    "4266": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5426
      ],
      "op": "ADD",
      "path": "10"
    },
    "4267": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5419,
        5442
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4268": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x6"
    },
    "4270": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4271": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4273": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4274": {
      "op": "PUSH4",
      "value": "0x5C11D795"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4283": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4284": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4285": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "AND",
      "path": "10"
    },
    "4286": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4287": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5548
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x5C11D795"
    },
    "4292": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5548
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4293": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10DB"
    },
    "4296": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4297": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5562,
        5573
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4298": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5562,
        5573
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4299": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4301": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5494
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4302": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5602,
        5606
      ],
      "op": "DUP7",
      "path": "10"
    },
    "4303": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5602,
        5606
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4304": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5628,
        5632
      ],
      "op": "ADDRESS",
      "path": "10"
    },
    "4305": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5628,
        5632
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4306": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5647,
        5662
      ],
      "op": "TIMESTAMP",
      "path": "10"
    },
    "4307": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5647,
        5662
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4308": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4310": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "ADD",
      "path": "10"
    },
    "4311": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1504"
    },
    "4314": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "jump": "i",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4315": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4316": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4318": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4320": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4321": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4322": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4323": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "SUB",
      "path": "10"
    },
    "4324": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4325": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4327": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4328": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4329": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "4330": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4331": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4332": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4333": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x10F5"
    },
    "4336": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4337": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4339": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4340": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4341": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4342": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "POP",
      "path": "10"
    },
    "4343": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "GAS",
      "path": "10"
    },
    "4344": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "CALL",
      "path": "10"
    },
    "4345": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4346": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "POP",
      "path": "10"
    },
    "4347": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "POP",
      "path": "10"
    },
    "4348": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "POP",
      "path": "10"
    },
    "4349": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4350": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4351": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1106"
    },
    "4354": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4355": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "POP",
      "path": "10"
    },
    "4356": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4358": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5481,
        5672
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4359": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5477,
        5753
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1114"
    },
    "4362": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5477,
        5753
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4363": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5737,
        5742
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 74,
      "value": "0x0"
    },
    "4365": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5730,
        5742
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4366": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5730,
        5742
      ],
      "op": "POP",
      "path": "10"
    },
    "4367": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5730,
        5742
      ],
      "op": "POP",
      "path": "10"
    },
    "4368": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5730,
        5742
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CA"
    },
    "4371": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5730,
        5742
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4372": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5477,
        5753
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4373": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5694,
        5698
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 75,
      "value": "0x1"
    },
    "4375": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5687,
        5698
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4376": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5687,
        5698
      ],
      "op": "POP",
      "path": "10"
    },
    "4377": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5687,
        5698
      ],
      "op": "POP",
      "path": "10"
    },
    "4378": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5687,
        5698
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x4CA"
    },
    "4381": {
      "fn": "CalFundToken.swapTokensForWMatic",
      "offset": [
        5687,
        5698
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4382": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5765,
        5950
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4383": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5846
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x9"
    },
    "4385": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5846
      ],
      "op": "SLOAD",
      "path": "10"
    },
    "4386": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4388": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4389": {
      "op": "PUSH4",
      "value": "0x2E1A7D4D"
    },
    "4394": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4396": {
      "op": "SHL"
    },
    "4397": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4398": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4399": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x4"
    },
    "4401": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4402": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "ADD",
      "path": "10"
    },
    "4403": {
      "op": "DUP4"
    },
    "4404": {
      "op": "SWAP1"
    },
    "4405": {
      "op": "MSTORE"
    },
    "4406": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5820,
        5824
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4408": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5820,
        5824
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4415": {
      "op": "SHL"
    },
    "4416": {
      "op": "SUB"
    },
    "4417": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5846
      ],
      "op": "AND",
      "path": "10"
    },
    "4418": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5846
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4419": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5855
      ],
      "op": "PUSH4",
      "path": "10",
      "value": "0x2E1A7D4D"
    },
    "4424": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5855
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4425": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4427": {
      "op": "ADD"
    },
    "4428": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4430": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4432": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4433": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4434": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4435": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "SUB",
      "path": "10"
    },
    "4436": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4437": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4439": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4440": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4441": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "EXTCODESIZE",
      "path": "10"
    },
    "4442": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4443": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4444": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4445": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1165"
    },
    "4448": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4449": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4451": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4452": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "REVERT",
      "path": "10"
    },
    "4453": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4454": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "POP",
      "path": "10"
    },
    "4455": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "GAS",
      "path": "10"
    },
    "4456": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "CALL",
      "path": "10"
    },
    "4457": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4458": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "POP",
      "path": "10"
    },
    "4459": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "POP",
      "path": "10"
    },
    "4460": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "POP",
      "path": "10"
    },
    "4461": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4462": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "4463": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1176"
    },
    "4466": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4467": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "POP",
      "path": "10"
    },
    "4468": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "4470": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5840,
        5863
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4471": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5836,
        5944
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x1182"
    },
    "4474": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5836,
        5944
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4475": {
      "op": "POP"
    },
    "4476": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5928,
        5933
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 76,
      "value": "0x0"
    },
    "4478": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5928,
        5933
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4479": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5765,
        5950
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "fn": "CalFundToken.unwrapWMatic",
      "jump": "o",
      "offset": [
        5765,
        5950
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4482": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5836,
        5944
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4483": {
      "op": "POP"
    },
    "4484": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5885,
        5889
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 77,
      "value": "0x1"
    },
    "4486": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5885,
        5889
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4487": {
      "fn": "CalFundToken.unwrapWMatic",
      "offset": [
        5765,
        5950
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4488": {
      "op": "POP"
    },
    "4489": {
      "fn": "CalFundToken.unwrapWMatic",
      "jump": "o",
      "offset": [
        5765,
        5950
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4490": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        5956,
        6111
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4491": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6020,
        6024
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4493": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6037,
        6049
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4494": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6056
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4501": {
      "op": "SHL"
    },
    "4502": {
      "op": "SUB"
    },
    "4503": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6061
      ],
      "op": "AND",
      "path": "10"
    },
    "4504": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6069,
        6075
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4505": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4507": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4508": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4510": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4512": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4513": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4514": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP4",
      "path": "10"
    },
    "4515": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "SUB",
      "path": "10"
    },
    "4516": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4517": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP6",
      "path": "10"
    },
    "4518": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP8",
      "path": "10"
    },
    "4519": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "GAS",
      "path": "10"
    },
    "4520": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "CALL",
      "path": "10"
    },
    "4521": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "4522": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "POP",
      "path": "10"
    },
    "4523": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "POP",
      "path": "10"
    },
    "4524": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "POP",
      "path": "10"
    },
    "4525": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4526": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP1",
      "path": "10"
    },
    "4527": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4529": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP2",
      "path": "10"
    },
    "4530": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "EQ",
      "path": "10"
    },
    "4531": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11D8"
    },
    "4534": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "4535": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4537": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "4538": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4539": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "POP",
      "path": "10"
    },
    "4540": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "4542": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "NOT",
      "path": "10"
    },
    "4543": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x3F"
    },
    "4545": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4546": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "ADD",
      "path": "10"
    },
    "4547": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "AND",
      "path": "10"
    },
    "4548": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4549": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "ADD",
      "path": "10"
    },
    "4550": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "4552": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4553": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4554": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP3",
      "path": "10"
    },
    "4555": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "4556": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "RETURNDATASIZE",
      "path": "10"
    },
    "4557": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "4559": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "4561": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "DUP5",
      "path": "10"
    },
    "4562": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "ADD",
      "path": "10"
    },
    "4563": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "RETURNDATACOPY",
      "path": "10"
    },
    "4564": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0x11DD"
    },
    "4567": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4568": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4569": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "4571": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "4572": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "POP",
      "path": "10"
    },
    "4573": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6054,
        6080
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "4574": {
      "op": "POP"
    },
    "4575": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6036,
        6080
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "4576": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        6036,
        6080
      ],
      "op": "SWAP6",
      "path": "10"
    },
    "4577": {
      "fn": "CalFundToken.sendMatic",
      "offset": [
        5956,
        6111
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "4578": {
      "op": "POP"
    },
    "4579": {
      "op": "POP"
    },
    "4580": {
      "op": "POP"
    },
    "4581": {
      "op": "POP"
    },
    "4582": {
      "op": "POP"
    },
    "4583": {
      "fn": "CalFundToken.sendMatic",
      "jump": "o",
      "offset": [
        5956,
        6111
      ],
      "op": "JUMP",
      "path": "10"
    },
    "4584": {
      "op": "JUMPDEST"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4587": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4589": {
      "op": "DUP1"
    },
    "4590": {
      "op": "DUP4"
    },
    "4591": {
      "op": "MSTORE"
    },
    "4592": {
      "op": "DUP4"
    },
    "4593": {
      "op": "MLOAD"
    },
    "4594": {
      "op": "DUP1"
    },
    "4595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4597": {
      "op": "DUP6"
    },
    "4598": {
      "op": "ADD"
    },
    "4599": {
      "op": "MSTORE"
    },
    "4600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4602": {
      "op": "JUMPDEST"
    },
    "4603": {
      "op": "DUP2"
    },
    "4604": {
      "op": "DUP2"
    },
    "4605": {
      "op": "LT"
    },
    "4606": {
      "op": "ISZERO"
    },
    "4607": {
      "op": "PUSH2",
      "value": "0x1216"
    },
    "4610": {
      "op": "JUMPI"
    },
    "4611": {
      "op": "DUP6"
    },
    "4612": {
      "op": "DUP2"
    },
    "4613": {
      "op": "ADD"
    },
    "4614": {
      "op": "DUP4"
    },
    "4615": {
      "op": "ADD"
    },
    "4616": {
      "op": "MLOAD"
    },
    "4617": {
      "op": "DUP6"
    },
    "4618": {
      "op": "DUP3"
    },
    "4619": {
      "op": "ADD"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4622": {
      "op": "ADD"
    },
    "4623": {
      "op": "MSTORE"
    },
    "4624": {
      "op": "DUP3"
    },
    "4625": {
      "op": "ADD"
    },
    "4626": {
      "op": "PUSH2",
      "value": "0x11FA"
    },
    "4629": {
      "op": "JUMP"
    },
    "4630": {
      "op": "JUMPDEST"
    },
    "4631": {
      "op": "POP"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4634": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4636": {
      "op": "DUP3"
    },
    "4637": {
      "op": "DUP7"
    },
    "4638": {
      "op": "ADD"
    },
    "4639": {
      "op": "ADD"
    },
    "4640": {
      "op": "MSTORE"
    },
    "4641": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4643": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4645": {
      "op": "NOT"
    },
    "4646": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4648": {
      "op": "DUP4"
    },
    "4649": {
      "op": "ADD"
    },
    "4650": {
      "op": "AND"
    },
    "4651": {
      "op": "DUP6"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "ADD"
    },
    "4654": {
      "op": "SWAP3"
    },
    "4655": {
      "op": "POP"
    },
    "4656": {
      "op": "POP"
    },
    "4657": {
      "op": "POP"
    },
    "4658": {
      "op": "SWAP3"
    },
    "4659": {
      "op": "SWAP2"
    },
    "4660": {
      "op": "POP"
    },
    "4661": {
      "op": "POP"
    },
    "4662": {
      "jump": "o",
      "op": "JUMP"
    },
    "4663": {
      "op": "JUMPDEST"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4666": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4668": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4670": {
      "op": "SHL"
    },
    "4671": {
      "op": "SUB"
    },
    "4672": {
      "op": "DUP2"
    },
    "4673": {
      "op": "AND"
    },
    "4674": {
      "op": "DUP2"
    },
    "4675": {
      "op": "EQ"
    },
    "4676": {
      "op": "PUSH2",
      "value": "0x9EE"
    },
    "4679": {
      "op": "JUMPI"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4682": {
      "op": "DUP1"
    },
    "4683": {
      "op": "REVERT"
    },
    "4684": {
      "op": "JUMPDEST"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4687": {
      "op": "DUP1"
    },
    "4688": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4690": {
      "op": "DUP4"
    },
    "4691": {
      "op": "DUP6"
    },
    "4692": {
      "op": "SUB"
    },
    "4693": {
      "op": "SLT"
    },
    "4694": {
      "op": "ISZERO"
    },
    "4695": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4698": {
      "op": "JUMPI"
    },
    "4699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4701": {
      "op": "DUP1"
    },
    "4702": {
      "op": "REVERT"
    },
    "4703": {
      "op": "JUMPDEST"
    },
    "4704": {
      "op": "DUP3"
    },
    "4705": {
      "op": "CALLDATALOAD"
    },
    "4706": {
      "op": "PUSH2",
      "value": "0x126A"
    },
    "4709": {
      "op": "DUP2"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4713": {
      "jump": "i",
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "SWAP5"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4718": {
      "op": "SWAP4"
    },
    "4719": {
      "op": "SWAP1"
    },
    "4720": {
      "op": "SWAP4"
    },
    "4721": {
      "op": "ADD"
    },
    "4722": {
      "op": "CALLDATALOAD"
    },
    "4723": {
      "op": "SWAP4"
    },
    "4724": {
      "op": "POP"
    },
    "4725": {
      "op": "POP"
    },
    "4726": {
      "op": "POP"
    },
    "4727": {
      "jump": "o",
      "op": "JUMP"
    },
    "4728": {
      "op": "JUMPDEST"
    },
    "4729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4731": {
      "op": "DUP1"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4734": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4736": {
      "op": "DUP5"
    },
    "4737": {
      "op": "DUP7"
    },
    "4738": {
      "op": "SUB"
    },
    "4739": {
      "op": "SLT"
    },
    "4740": {
      "op": "ISZERO"
    },
    "4741": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4744": {
      "op": "JUMPI"
    },
    "4745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4747": {
      "op": "DUP1"
    },
    "4748": {
      "op": "REVERT"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "DUP4"
    },
    "4751": {
      "op": "CALLDATALOAD"
    },
    "4752": {
      "op": "PUSH2",
      "value": "0x1298"
    },
    "4755": {
      "op": "DUP2"
    },
    "4756": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4759": {
      "jump": "i",
      "op": "JUMP"
    },
    "4760": {
      "op": "JUMPDEST"
    },
    "4761": {
      "op": "SWAP3"
    },
    "4762": {
      "op": "POP"
    },
    "4763": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4765": {
      "op": "DUP5"
    },
    "4766": {
      "op": "ADD"
    },
    "4767": {
      "op": "CALLDATALOAD"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x12A8"
    },
    "4771": {
      "op": "DUP2"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4775": {
      "jump": "i",
      "op": "JUMP"
    },
    "4776": {
      "op": "JUMPDEST"
    },
    "4777": {
      "op": "SWAP3"
    },
    "4778": {
      "op": "SWAP6"
    },
    "4779": {
      "op": "SWAP3"
    },
    "4780": {
      "op": "SWAP5"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "POP"
    },
    "4783": {
      "op": "POP"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4786": {
      "op": "SWAP2"
    },
    "4787": {
      "op": "SWAP1"
    },
    "4788": {
      "op": "SWAP2"
    },
    "4789": {
      "op": "ADD"
    },
    "4790": {
      "op": "CALLDATALOAD"
    },
    "4791": {
      "op": "SWAP1"
    },
    "4792": {
      "jump": "o",
      "op": "JUMP"
    },
    "4793": {
      "op": "JUMPDEST"
    },
    "4794": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4798": {
      "op": "DUP3"
    },
    "4799": {
      "op": "DUP5"
    },
    "4800": {
      "op": "SUB"
    },
    "4801": {
      "op": "SLT"
    },
    "4802": {
      "op": "ISZERO"
    },
    "4803": {
      "op": "PUSH2",
      "value": "0x12CB"
    },
    "4806": {
      "op": "JUMPI"
    },
    "4807": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4809": {
      "op": "DUP1"
    },
    "4810": {
      "op": "REVERT"
    },
    "4811": {
      "op": "JUMPDEST"
    },
    "4812": {
      "op": "DUP2"
    },
    "4813": {
      "op": "CALLDATALOAD"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "4817": {
      "op": "DUP2"
    },
    "4818": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4821": {
      "jump": "i",
      "op": "JUMP"
    },
    "4822": {
      "op": "JUMPDEST"
    },
    "4823": {
      "op": "SWAP4"
    },
    "4824": {
      "op": "SWAP3"
    },
    "4825": {
      "op": "POP"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "jump": "o",
      "op": "JUMP"
    },
    "4829": {
      "op": "JUMPDEST"
    },
    "4830": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4832": {
      "op": "DUP1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4835": {
      "op": "DUP4"
    },
    "4836": {
      "op": "DUP6"
    },
    "4837": {
      "op": "SUB"
    },
    "4838": {
      "op": "SLT"
    },
    "4839": {
      "op": "ISZERO"
    },
    "4840": {
      "op": "PUSH2",
      "value": "0x12F0"
    },
    "4843": {
      "op": "JUMPI"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4846": {
      "op": "DUP1"
    },
    "4847": {
      "op": "REVERT"
    },
    "4848": {
      "op": "JUMPDEST"
    },
    "4849": {
      "op": "DUP3"
    },
    "4850": {
      "op": "CALLDATALOAD"
    },
    "4851": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4854": {
      "op": "DUP2"
    },
    "4855": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4858": {
      "jump": "i",
      "op": "JUMP"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "SWAP2"
    },
    "4861": {
      "op": "POP"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4864": {
      "op": "DUP4"
    },
    "4865": {
      "op": "ADD"
    },
    "4866": {
      "op": "CALLDATALOAD"
    },
    "4867": {
      "op": "PUSH2",
      "value": "0x130B"
    },
    "4870": {
      "op": "DUP2"
    },
    "4871": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "4874": {
      "jump": "i",
      "op": "JUMP"
    },
    "4875": {
      "op": "JUMPDEST"
    },
    "4876": {
      "op": "DUP1"
    },
    "4877": {
      "op": "SWAP2"
    },
    "4878": {
      "op": "POP"
    },
    "4879": {
      "op": "POP"
    },
    "4880": {
      "op": "SWAP3"
    },
    "4881": {
      "op": "POP"
    },
    "4882": {
      "op": "SWAP3"
    },
    "4883": {
      "op": "SWAP1"
    },
    "4884": {
      "op": "POP"
    },
    "4885": {
      "jump": "o",
      "op": "JUMP"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4889": {
      "op": "DUP2"
    },
    "4890": {
      "op": "DUP2"
    },
    "4891": {
      "op": "SHR"
    },
    "4892": {
      "op": "SWAP1"
    },
    "4893": {
      "op": "DUP3"
    },
    "4894": {
      "op": "AND"
    },
    "4895": {
      "op": "DUP1"
    },
    "4896": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4899": {
      "op": "JUMPI"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4902": {
      "op": "DUP3"
    },
    "4903": {
      "op": "AND"
    },
    "4904": {
      "op": "SWAP2"
    },
    "4905": {
      "op": "POP"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4909": {
      "op": "DUP3"
    },
    "4910": {
      "op": "LT"
    },
    "4911": {
      "op": "DUP2"
    },
    "4912": {
      "op": "SUB"
    },
    "4913": {
      "op": "PUSH2",
      "value": "0x134A"
    },
    "4916": {
      "op": "JUMPI"
    },
    "4917": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4922": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4924": {
      "op": "SHL"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4927": {
      "op": "MSTORE"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4932": {
      "op": "MSTORE"
    },
    "4933": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4937": {
      "op": "REVERT"
    },
    "4938": {
      "op": "JUMPDEST"
    },
    "4939": {
      "op": "POP"
    },
    "4940": {
      "op": "SWAP2"
    },
    "4941": {
      "op": "SWAP1"
    },
    "4942": {
      "op": "POP"
    },
    "4943": {
      "jump": "o",
      "op": "JUMP"
    },
    "4944": {
      "op": "JUMPDEST"
    },
    "4945": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4952": {
      "op": "SHL"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4955": {
      "op": "MSTORE"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4960": {
      "op": "MSTORE"
    },
    "4961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4965": {
      "op": "REVERT"
    },
    "4966": {
      "op": "JUMPDEST"
    },
    "4967": {
      "op": "DUP1"
    },
    "4968": {
      "op": "DUP3"
    },
    "4969": {
      "op": "ADD"
    },
    "4970": {
      "op": "DUP1"
    },
    "4971": {
      "op": "DUP3"
    },
    "4972": {
      "op": "GT"
    },
    "4973": {
      "op": "ISZERO"
    },
    "4974": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "4977": {
      "op": "JUMPI"
    },
    "4978": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "4981": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "4984": {
      "jump": "i",
      "op": "JUMP"
    },
    "4985": {
      "op": "JUMPDEST"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4990": {
      "op": "DUP3"
    },
    "4991": {
      "op": "DUP5"
    },
    "4992": {
      "op": "SUB"
    },
    "4993": {
      "op": "SLT"
    },
    "4994": {
      "op": "ISZERO"
    },
    "4995": {
      "op": "PUSH2",
      "value": "0x138B"
    },
    "4998": {
      "op": "JUMPI"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5001": {
      "op": "DUP1"
    },
    "5002": {
      "op": "REVERT"
    },
    "5003": {
      "op": "JUMPDEST"
    },
    "5004": {
      "op": "DUP2"
    },
    "5005": {
      "op": "MLOAD"
    },
    "5006": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "5009": {
      "op": "DUP2"
    },
    "5010": {
      "op": "PUSH2",
      "value": "0x1237"
    },
    "5013": {
      "jump": "i",
      "op": "JUMP"
    },
    "5014": {
      "op": "JUMPDEST"
    },
    "5015": {
      "op": "DUP1"
    },
    "5016": {
      "op": "DUP3"
    },
    "5017": {
      "op": "MUL"
    },
    "5018": {
      "op": "DUP2"
    },
    "5019": {
      "op": "ISZERO"
    },
    "5020": {
      "op": "DUP3"
    },
    "5021": {
      "op": "DUP3"
    },
    "5022": {
      "op": "DIV"
    },
    "5023": {
      "op": "DUP5"
    },
    "5024": {
      "op": "EQ"
    },
    "5025": {
      "op": "OR"
    },
    "5026": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5029": {
      "op": "JUMPI"
    },
    "5030": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5033": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "5036": {
      "jump": "i",
      "op": "JUMP"
    },
    "5037": {
      "op": "JUMPDEST"
    },
    "5038": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5045": {
      "op": "SHL"
    },
    "5046": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5048": {
      "op": "MSTORE"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5053": {
      "op": "MSTORE"
    },
    "5054": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5056": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5058": {
      "op": "REVERT"
    },
    "5059": {
      "op": "JUMPDEST"
    },
    "5060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5062": {
      "op": "DUP3"
    },
    "5063": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5066": {
      "op": "JUMPI"
    },
    "5067": {
      "op": "PUSH2",
      "value": "0x13D2"
    },
    "5070": {
      "op": "PUSH2",
      "value": "0x13AD"
    },
    "5073": {
      "jump": "i",
      "op": "JUMP"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "DIV"
    },
    "5077": {
      "op": "SWAP1"
    },
    "5078": {
      "jump": "o",
      "op": "JUMP"
    },
    "5079": {
      "op": "JUMPDEST"
    },
    "5080": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5082": {
      "op": "DUP2"
    },
    "5083": {
      "op": "DUP2"
    },
    "5084": {
      "op": "JUMPDEST"
    },
    "5085": {
      "op": "DUP1"
    },
    "5086": {
      "op": "DUP6"
    },
    "5087": {
      "op": "GT"
    },
    "5088": {
      "op": "ISZERO"
    },
    "5089": {
      "op": "PUSH2",
      "value": "0x1412"
    },
    "5092": {
      "op": "JUMPI"
    },
    "5093": {
      "op": "DUP2"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5096": {
      "op": "NOT"
    },
    "5097": {
      "op": "DIV"
    },
    "5098": {
      "op": "DUP3"
    },
    "5099": {
      "op": "GT"
    },
    "5100": {
      "op": "ISZERO"
    },
    "5101": {
      "op": "PUSH2",
      "value": "0x13F8"
    },
    "5104": {
      "op": "JUMPI"
    },
    "5105": {
      "op": "PUSH2",
      "value": "0x13F8"
    },
    "5108": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "5111": {
      "jump": "i",
      "op": "JUMP"
    },
    "5112": {
      "op": "JUMPDEST"
    },
    "5113": {
      "op": "DUP1"
    },
    "5114": {
      "op": "DUP6"
    },
    "5115": {
      "op": "AND"
    },
    "5116": {
      "op": "ISZERO"
    },
    "5117": {
      "op": "PUSH2",
      "value": "0x1405"
    },
    "5120": {
      "op": "JUMPI"
    },
    "5121": {
      "op": "SWAP2"
    },
    "5122": {
      "op": "DUP2"
    },
    "5123": {
      "op": "MUL"
    },
    "5124": {
      "op": "SWAP2"
    },
    "5125": {
      "op": "JUMPDEST"
    },
    "5126": {
      "op": "SWAP4"
    },
    "5127": {
      "op": "DUP5"
    },
    "5128": {
      "op": "SHR"
    },
    "5129": {
      "op": "SWAP4"
    },
    "5130": {
      "op": "SWAP1"
    },
    "5131": {
      "op": "DUP1"
    },
    "5132": {
      "op": "MUL"
    },
    "5133": {
      "op": "SWAP1"
    },
    "5134": {
      "op": "PUSH2",
      "value": "0x13DC"
    },
    "5137": {
      "op": "JUMP"
    },
    "5138": {
      "op": "JUMPDEST"
    },
    "5139": {
      "op": "POP"
    },
    "5140": {
      "op": "SWAP3"
    },
    "5141": {
      "op": "POP"
    },
    "5142": {
      "op": "SWAP3"
    },
    "5143": {
      "op": "SWAP1"
    },
    "5144": {
      "op": "POP"
    },
    "5145": {
      "jump": "o",
      "op": "JUMP"
    },
    "5146": {
      "op": "JUMPDEST"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5149": {
      "op": "DUP3"
    },
    "5150": {
      "op": "PUSH2",
      "value": "0x1429"
    },
    "5153": {
      "op": "JUMPI"
    },
    "5154": {
      "op": "POP"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5157": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5160": {
      "op": "JUMP"
    },
    "5161": {
      "op": "JUMPDEST"
    },
    "5162": {
      "op": "DUP2"
    },
    "5163": {
      "op": "PUSH2",
      "value": "0x1436"
    },
    "5166": {
      "op": "JUMPI"
    },
    "5167": {
      "op": "POP"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5170": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5173": {
      "op": "JUMP"
    },
    "5174": {
      "op": "JUMPDEST"
    },
    "5175": {
      "op": "DUP2"
    },
    "5176": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5178": {
      "op": "DUP2"
    },
    "5179": {
      "op": "EQ"
    },
    "5180": {
      "op": "PUSH2",
      "value": "0x1114"
    },
    "5183": {
      "op": "JUMPI"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "5186": {
      "op": "DUP2"
    },
    "5187": {
      "op": "SUB"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0x1463"
    },
    "5191": {
      "op": "JUMPI"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5194": {
      "op": "DUP5"
    },
    "5195": {
      "op": "GT"
    },
    "5196": {
      "op": "ISZERO"
    },
    "5197": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5200": {
      "op": "JUMPI"
    },
    "5201": {
      "op": "PUSH2",
      "value": "0x1458"
    },
    "5204": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "5207": {
      "jump": "i",
      "op": "JUMP"
    },
    "5208": {
      "op": "JUMPDEST"
    },
    "5209": {
      "op": "POP"
    },
    "5210": {
      "op": "POP"
    },
    "5211": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5213": {
      "op": "DUP3"
    },
    "5214": {
      "op": "SHL"
    },
    "5215": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5218": {
      "op": "JUMP"
    },
    "5219": {
      "op": "JUMPDEST"
    },
    "5220": {
      "op": "POP"
    },
    "5221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5223": {
      "op": "DUP4"
    },
    "5224": {
      "op": "LT"
    },
    "5225": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "5228": {
      "op": "DUP4"
    },
    "5229": {
      "op": "LT"
    },
    "5230": {
      "op": "AND"
    },
    "5231": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "5233": {
      "op": "DUP5"
    },
    "5234": {
      "op": "LT"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "5237": {
      "op": "DUP5"
    },
    "5238": {
      "op": "LT"
    },
    "5239": {
      "op": "AND"
    },
    "5240": {
      "op": "OR"
    },
    "5241": {
      "op": "ISZERO"
    },
    "5242": {
      "op": "PUSH2",
      "value": "0x1486"
    },
    "5245": {
      "op": "JUMPI"
    },
    "5246": {
      "op": "POP"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "DUP2"
    },
    "5249": {
      "op": "EXP"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x4CA"
    },
    "5253": {
      "op": "JUMP"
    },
    "5254": {
      "op": "JUMPDEST"
    },
    "5255": {
      "op": "PUSH2",
      "value": "0x1490"
    },
    "5258": {
      "op": "DUP4"
    },
    "5259": {
      "op": "DUP4"
    },
    "5260": {
      "op": "PUSH2",
      "value": "0x13D7"
    },
    "5263": {
      "jump": "i",
      "op": "JUMP"
    },
    "5264": {
      "op": "JUMPDEST"
    },
    "5265": {
      "op": "DUP1"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5268": {
      "op": "NOT"
    },
    "5269": {
      "op": "DIV"
    },
    "5270": {
      "op": "DUP3"
    },
    "5271": {
      "op": "GT"
    },
    "5272": {
      "op": "ISZERO"
    },
    "5273": {
      "op": "PUSH2",
      "value": "0x14A4"
    },
    "5276": {
      "op": "JUMPI"
    },
    "5277": {
      "op": "PUSH2",
      "value": "0x14A4"
    },
    "5280": {
      "op": "PUSH2",
      "value": "0x1350"
    },
    "5283": {
      "jump": "i",
      "op": "JUMP"
    },
    "5284": {
      "op": "JUMPDEST"
    },
    "5285": {
      "op": "MUL"
    },
    "5286": {
      "op": "SWAP4"
    },
    "5287": {
      "op": "SWAP3"
    },
    "5288": {
      "op": "POP"
    },
    "5289": {
      "op": "POP"
    },
    "5290": {
      "op": "POP"
    },
    "5291": {
      "jump": "o",
      "op": "JUMP"
    },
    "5292": {
      "op": "JUMPDEST"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "5298": {
      "op": "DUP4"
    },
    "5299": {
      "op": "DUP4"
    },
    "5300": {
      "op": "PUSH2",
      "value": "0x141A"
    },
    "5303": {
      "jump": "i",
      "op": "JUMP"
    },
    "5304": {
      "op": "JUMPDEST"
    },
    "5305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5307": {
      "op": "DUP3"
    },
    "5308": {
      "op": "PUSH2",
      "value": "0x14C7"
    },
    "5311": {
      "op": "JUMPI"
    },
    "5312": {
      "op": "PUSH2",
      "value": "0x14C7"
    },
    "5315": {
      "op": "PUSH2",
      "value": "0x13AD"
    },
    "5318": {
      "jump": "i",
      "op": "JUMP"
    },
    "5319": {
      "op": "JUMPDEST"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "op": "MOD"
    },
    "5322": {
      "op": "SWAP1"
    },
    "5323": {
      "jump": "o",
      "op": "JUMP"
    },
    "5324": {
      "op": "JUMPDEST"
    },
    "5325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5329": {
      "op": "DUP3"
    },
    "5330": {
      "op": "DUP5"
    },
    "5331": {
      "op": "SUB"
    },
    "5332": {
      "op": "SLT"
    },
    "5333": {
      "op": "ISZERO"
    },
    "5334": {
      "op": "PUSH2",
      "value": "0x14DE"
    },
    "5337": {
      "op": "JUMPI"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5340": {
      "op": "DUP1"
    },
    "5341": {
      "op": "REVERT"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "DUP2"
    },
    "5344": {
      "op": "MLOAD"
    },
    "5345": {
      "op": "DUP1"
    },
    "5346": {
      "op": "ISZERO"
    },
    "5347": {
      "op": "ISZERO"
    },
    "5348": {
      "op": "DUP2"
    },
    "5349": {
      "op": "EQ"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x12D6"
    },
    "5353": {
      "op": "JUMPI"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5356": {
      "op": "DUP1"
    },
    "5357": {
      "op": "REVERT"
    },
    "5358": {
      "op": "JUMPDEST"
    },
    "5359": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5364": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5366": {
      "op": "SHL"
    },
    "5367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5369": {
      "op": "MSTORE"
    },
    "5370": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5374": {
      "op": "MSTORE"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5379": {
      "op": "REVERT"
    },
    "5380": {
      "op": "JUMPDEST"
    },
    "5381": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5383": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5385": {
      "op": "DUP3"
    },
    "5386": {
      "op": "ADD"
    },
    "5387": {
      "op": "DUP8"
    },
    "5388": {
      "op": "DUP4"
    },
    "5389": {
      "op": "MSTORE"
    },
    "5390": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5392": {
      "op": "DUP8"
    },
    "5393": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5395": {
      "op": "DUP6"
    },
    "5396": {
      "op": "ADD"
    },
    "5397": {
      "op": "MSTORE"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5400": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5402": {
      "op": "DUP6"
    },
    "5403": {
      "op": "ADD"
    },
    "5404": {
      "op": "MSTORE"
    },
    "5405": {
      "op": "DUP2"
    },
    "5406": {
      "op": "DUP8"
    },
    "5407": {
      "op": "MLOAD"
    },
    "5408": {
      "op": "DUP1"
    },
    "5409": {
      "op": "DUP5"
    },
    "5410": {
      "op": "MSTORE"
    },
    "5411": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5413": {
      "op": "DUP7"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "SWAP2"
    },
    "5416": {
      "op": "POP"
    },
    "5417": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5419": {
      "op": "DUP10"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "SWAP4"
    },
    "5422": {
      "op": "POP"
    },
    "5423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5425": {
      "op": "JUMPDEST"
    },
    "5426": {
      "op": "DUP2"
    },
    "5427": {
      "op": "DUP2"
    },
    "5428": {
      "op": "LT"
    },
    "5429": {
      "op": "ISZERO"
    },
    "5430": {
      "op": "PUSH2",
      "value": "0x1556"
    },
    "5433": {
      "op": "JUMPI"
    },
    "5434": {
      "op": "DUP5"
    },
    "5435": {
      "op": "MLOAD"
    },
    "5436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5442": {
      "op": "SHL"
    },
    "5443": {
      "op": "SUB"
    },
    "5444": {
      "op": "AND"
    },
    "5445": {
      "op": "DUP4"
    },
    "5446": {
      "op": "MSTORE"
    },
    "5447": {
      "op": "SWAP4"
    },
    "5448": {
      "op": "DUP4"
    },
    "5449": {
      "op": "ADD"
    },
    "5450": {
      "op": "SWAP4"
    },
    "5451": {
      "op": "SWAP2"
    },
    "5452": {
      "op": "DUP4"
    },
    "5453": {
      "op": "ADD"
    },
    "5454": {
      "op": "SWAP2"
    },
    "5455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5457": {
      "op": "ADD"
    },
    "5458": {
      "op": "PUSH2",
      "value": "0x1531"
    },
    "5461": {
      "op": "JUMP"
    },
    "5462": {
      "op": "JUMPDEST"
    },
    "5463": {
      "op": "POP"
    },
    "5464": {
      "op": "POP"
    },
    "5465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5471": {
      "op": "SHL"
    },
    "5472": {
      "op": "SUB"
    },
    "5473": {
      "op": "SWAP7"
    },
    "5474": {
      "op": "SWAP1"
    },
    "5475": {
      "op": "SWAP7"
    },
    "5476": {
      "op": "AND"
    },
    "5477": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5479": {
      "op": "DUP6"
    },
    "5480": {
      "op": "ADD"
    },
    "5481": {
      "op": "MSTORE"
    },
    "5482": {
      "op": "POP"
    },
    "5483": {
      "op": "POP"
    },
    "5484": {
      "op": "POP"
    },
    "5485": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5487": {
      "op": "ADD"
    },
    "5488": {
      "op": "MSTORE"
    },
    "5489": {
      "op": "SWAP4"
    },
    "5490": {
      "op": "SWAP3"
    },
    "5491": {
      "op": "POP"
    },
    "5492": {
      "op": "POP"
    },
    "5493": {
      "op": "POP"
    },
    "5494": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9a054650123b6703d2c009604ee7429cab465b2f",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol\";\nimport \"Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport \"Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\n\ninterface IWMATIC {\n    function deposit() external payable;\n    function withdraw(uint wad) external;\n    function transfer(address dst, uint wad) external returns (bool);\n}\n\ncontract CalFundToken is ERC20, Ownable {\n    IUniswapV2Router02 public uniswapRouter;\n    IUniswapV2Factory public uniswapFactory;\n    IUniswapV2Pair public uniswapPair;\n    IWMATIC public wmatic;\n    address public maticAddress;\n    address public proposedNewCommissionAddress;\n    uint256 public proposalEndTime;\n\n    event GasSubsidyProvided(address recipient, uint256 amount);\n    event GasSubsidyFailed(address recipient, uint256 amount);\n\n    constructor(address initialOwner) ERC20(\"CalFundToken\", \"CFT\") Ownable(initialOwner) {\n        _mint(msg.sender, 1000000 * 10 ** decimals()); // Initial mint for liquidity purposes\n    }\n\n    function setUniswapFactory(address _factory) external onlyOwner {\n        uniswapFactory = IUniswapV2Factory(_factory);\n    }\n\n    function setUniswapRouter(address _router) external onlyOwner {\n        uniswapRouter = IUniswapV2Router02(_router);\n    }\n\n    function setUniswapPair(address _pair) external onlyOwner {\n        uniswapPair = IUniswapV2Pair(_pair);\n    }\n\n    function setMaticAddress(address _matic) external onlyOwner {\n        maticAddress = _matic;\n    }\n\n    function setWmaticAddress(address _wmatic) external onlyOwner {\n        wmatic = IWMATIC(_wmatic);\n    }\n\n    function createPair() external onlyOwner {\n        require(address(uniswapFactory) != address(0), \"Uniswap factory not set\");\n        require(address(this) != address(0), \"Token address not set\");\n        require(maticAddress != address(0), \"MATIC address not set\");\n\n        address pairAddress = uniswapFactory.createPair(address(this), maticAddress);\n        uniswapPair = IUniswapV2Pair(pairAddress);\n    }\n\n    function mint(address recipient, uint256 amount) public onlyOwner {\n        (uint256 pureAmount, uint256 gasSubsidy) = extractGasSubsidy(amount);\n        _mint(recipient, pureAmount);\n\n        if (gasSubsidy > 0 && getMaticBalance(recipient) < 1 ether) {\n            provideGasSubsidy(recipient, gasSubsidy);\n        }\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        address sender = _msgSender();\n        (uint256 pureAmount, uint256 gasSubsidy) = extractGasSubsidy(amount);\n\n        if (gasSubsidy > 0) {\n            if (getMaticBalance(sender) < 1 ether && getMaticBalance(recipient) < 1 ether) {\n                gasSubsidy *= 2;\n                uint256 halfGasSubsidy = gasSubsidy / 2;\n                provideGasSubsidy(sender, halfGasSubsidy);\n                provideGasSubsidy(recipient, halfGasSubsidy);\n            } else if (getMaticBalance(sender) < 1 ether) {\n                provideGasSubsidy(sender, gasSubsidy);\n            } else if (getMaticBalance(recipient) < 1 ether) {\n                provideGasSubsidy(recipient, gasSubsidy);\n            }\n        }\n\n        return super.transfer(recipient, pureAmount);\n    }\n\n    function extractGasSubsidy(uint256 amount) internal pure returns (uint256, uint256) {\n        uint256 decimals = 18;\n        uint256 pureAmount = amount / (10 ** decimals) * (10 ** decimals);\n        uint256 gasSubsidy = amount % (10 ** decimals);\n\n        // Check if the subsidy pattern matches .123456000000000000\n        if (gasSubsidy / (10 ** 12) == 123456) {\n            gasSubsidy = gasSubsidy % (10 ** 12); // Only take the last 12 digits\n        } else {\n            gasSubsidy = 0; // If not a valid gas subsidy pattern, set it to 0\n        }\n\n        return (pureAmount, gasSubsidy);\n    }\n\n    function provideGasSubsidy(address recipient, uint256 gasSubsidy) internal {\n        uint256 gasPrice = tx.gasprice;\n        if (gasPrice == 0) {\n            emit GasSubsidyFailed(recipient, gasSubsidy);\n            return; // Avoid division by zero\n        }\n\n        uint256 gasLimit = gasSubsidy / gasPrice;\n        if (gasLimit == 0) {\n            emit GasSubsidyFailed(recipient, gasSubsidy);\n            return; // Avoid zero gas limit transactions\n        }\n\n        if (!swapTokensForWMatic(address(this), gasSubsidy)) {\n            emit GasSubsidyFailed(recipient, gasSubsidy);\n            return;\n        }\n\n        if (!unwrapWMatic(gasSubsidy)) {\n            emit GasSubsidyFailed(recipient, gasSubsidy);\n            return;\n        }\n\n        if (!sendMatic(recipient, gasSubsidy)) {\n            emit GasSubsidyFailed(recipient, gasSubsidy);\n            return;\n        }\n\n        emit GasSubsidyProvided(recipient, gasSubsidy);\n    }\n\n    function swapTokensForWMatic(address from, uint256 tokenAmount) private returns (bool) {\n        // Approve the router to spend the tokens\n        try this.approve(address(uniswapRouter), tokenAmount) {} catch {\n            return false;\n        }\n        \n        address[] memory path = new address[](2);\n        path[0] = address(wmatic); // WMATIC address\n        path[1] = address(this); // Custom token address\n\n        try uniswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        ) {\n            return true;\n        } catch {\n            return false;\n        }\n    }\n\n    function unwrapWMatic(uint256 amount) private returns (bool) {\n        try wmatic.withdraw(amount) {\n            return true;\n        } catch {\n            return false;\n        }\n    }\n\n    function sendMatic(address to, uint256 amount) private returns (bool) {\n        (bool success,) = to.call{value: amount}(\"\");\n        return success;\n    }\n\n    function getMaticBalance(address addr) public view returns (uint256) {\n        return addr.balance;\n    }\n\n    event GasLimitUsed(uint256 gasLimit);\n\n    function proposeNewCommissionAddress(address newAddress) public {\n        require(msg.sender == owner(), \"Unauthorized: Caller is not the owner\");\n        require(proposalEndTime < block.timestamp, \"Another proposal is still active.\");\n        proposedNewCommissionAddress = newAddress;\n        proposalEndTime = block.timestamp + 3 days;\n    }\n}\n",
  "sourceMap": "650:5967:10:-:0;;;1100:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1171:12;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3167:51:11;3140:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1195:45:10::2;1201:10;1223:16;3075:2:2::0;1223::10::2;:16;:::i;:::-;1213:26;::::0;:7:::2;:26;:::i;:::-;1195:5;:45::i;:::-;1100:186:::0;650:5967;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3167:51:11;3140:18;;7835:32:2;3021:203:11;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;5261:32:11;;6649:50:2;;;5243:51:11;5310:18;;;5303:34;;;5353:18;;;5346:34;;;5216:18;;6649:50:2;5041:345:11;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;5537::11;;5525:2;5510:18;;5391:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:290:11:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:11;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:11:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:543::-;1054:2;1049:3;1046:11;1043:446;;;1090:1;1114:5;1111:1;1104:16;1158:4;1155:1;1145:18;1228:2;1216:10;1212:19;1209:1;1205:27;1199:4;1195:38;1264:4;1252:10;1249:20;1246:47;;;-1:-1:-1;1287:4:11;1246:47;1342:2;1337:3;1333:12;1330:1;1326:20;1320:4;1316:31;1306:41;;1397:82;1415:2;1408:5;1405:13;1397:82;;;1460:17;;;1441:1;1430:13;1397:82;;;1401:3;;;1043:446;952:543;;;:::o;1671:1345::-;1791:10;;-1:-1:-1;;;;;1813:30:11;;1810:56;;;1846:18;;:::i;:::-;1875:97;1965:6;1925:38;1957:4;1951:11;1925:38;:::i;:::-;1919:4;1875:97;:::i;:::-;2027:4;;2084:2;2073:14;;2101:1;2096:663;;;;2803:1;2820:6;2817:89;;;-1:-1:-1;2872:19:11;;;2866:26;2817:89;-1:-1:-1;;1628:1:11;1624:11;;;1620:24;1616:29;1606:40;1652:1;1648:11;;;1603:57;2919:81;;2066:944;;2096:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2132:20:11;;;2250:236;2264:7;2261:1;2258:14;2250:236;;;2353:19;;;2347:26;2332:42;;2445:27;;;;2413:1;2401:14;;;;2280:19;;2250:236;;;2254:3;2514:6;2505:7;2502:19;2499:201;;;2575:19;;;2569:26;-1:-1:-1;;2658:1:11;2654:14;;;2670:3;2650:24;2646:37;2642:42;2627:58;2612:74;;2499:201;-1:-1:-1;;;;;2746:1:11;2730:14;;;2726:22;2713:36;;-1:-1:-1;1671:1345:11:o;3229:127::-;3290:10;3285:3;3281:20;3278:1;3271:31;3321:4;3318:1;3311:15;3345:4;3342:1;3335:15;3361:416;3450:1;3487:5;3450:1;3501:270;3522:7;3512:8;3509:21;3501:270;;;3581:4;3577:1;3573:6;3569:17;3563:4;3560:27;3557:53;;;3590:18;;:::i;:::-;3640:7;3630:8;3626:22;3623:55;;;3660:16;;;;3623:55;3739:22;;;;3699:15;;;;3501:270;;;3505:3;3361:416;;;;;:::o;3782:806::-;3831:5;3861:8;3851:80;;-1:-1:-1;3902:1:11;3916:5;;3851:80;3950:4;3940:76;;-1:-1:-1;3987:1:11;4001:5;;3940:76;4032:4;4050:1;4045:59;;;;4118:1;4113:130;;;;4025:218;;4045:59;4075:1;4066:10;;4089:5;;;4113:130;4150:3;4140:8;4137:17;4134:43;;;4157:18;;:::i;:::-;-1:-1:-1;;4213:1:11;4199:16;;4228:5;;4025:218;;4327:2;4317:8;4314:16;4308:3;4302:4;4299:13;4295:36;4289:2;4279:8;4276:16;4271:2;4265:4;4262:12;4258:35;4255:77;4252:159;;;-1:-1:-1;4364:19:11;;;4396:5;;4252:159;4443:34;4468:8;4462:4;4443:34;:::i;:::-;4513:6;4509:1;4505:6;4501:19;4492:7;4489:32;4486:58;;;4524:18;;:::i;:::-;4562:20;;-1:-1:-1;3782:806:11;;;;;:::o;4593:140::-;4651:5;4680:47;4721:4;4711:8;4707:19;4701:4;4680:47;:::i;4738:168::-;4811:9;;;4842;;4859:15;;;4853:22;;4839:37;4829:71;;4880:18;;:::i;4911:125::-;4976:9;;;4997:10;;;4994:36;;;5010:18;;:::i;5391:177::-;650:5967:10;;;;;;",
  "sourcePath": "contracts/CalFundToken.sol",
  "type": "contract"
}