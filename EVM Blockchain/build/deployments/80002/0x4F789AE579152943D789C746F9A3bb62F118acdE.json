{"abi": [{"inputs": [{"internalType": "address", "name": "initialOwner", "type": "address"}], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "allowance", "type": "uint256"}, {"internalType": "uint256", "name": "needed", "type": "uint256"}], "name": "ERC20InsufficientAllowance", "type": "error"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}, {"internalType": "uint256", "name": "balance", "type": "uint256"}, {"internalType": "uint256", "name": "needed", "type": "uint256"}], "name": "ERC20InsufficientBalance", "type": "error"}, {"inputs": [{"internalType": "address", "name": "approver", "type": "address"}], "name": "ERC20InvalidApprover", "type": "error"}, {"inputs": [{"internalType": "address", "name": "receiver", "type": "address"}], "name": "ERC20InvalidReceiver", "type": "error"}, {"inputs": [{"internalType": "address", "name": "sender", "type": "address"}], "name": "ERC20InvalidSender", "type": "error"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}], "name": "ERC20InvalidSpender", "type": "error"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}], "name": "OwnableInvalidOwner", "type": "error"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "OwnableUnauthorizedAccount", "type": "error"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "owner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "spender", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Approval", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": false, "internalType": "string", "name": "message", "type": "string"}], "name": "DexFailure", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "previousOwner", "type": "address"}, {"indexed": true, "internalType": "address", "name": "newOwner", "type": "address"}], "name": "OwnershipTransferred", "type": "event"}, {"anonymous": false, "inputs": [{"indexed": true, "internalType": "address", "name": "from", "type": "address"}, {"indexed": true, "internalType": "address", "name": "to", "type": "address"}, {"indexed": false, "internalType": "uint256", "name": "value", "type": "uint256"}], "name": "Transfer", "type": "event"}, {"inputs": [{"internalType": "address", "name": "owner", "type": "address"}, {"internalType": "address", "name": "spender", "type": "address"}], "name": "allowance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "spender", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}], "name": "approve", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "account", "type": "address"}], "name": "balanceOf", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "createPair", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "decimals", "outputs": [{"internalType": "uint8", "name": "", "type": "uint8"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "addr", "type": "address"}], "name": "getMaticBalance", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "maticAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "name", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "owner", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "proposalEndTime", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "proposedNewCommissionAddress", "outputs": [{"internalType": "address", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "renounceOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_matic", "type": "address"}], "name": "setMaticAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_factory", "type": "address"}], "name": "setUniswapFactory", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_pair", "type": "address"}], "name": "setUniswapPair", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_router", "type": "address"}], "name": "setUniswapRouter", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "_wmatic", "type": "address"}], "name": "setWmaticAddress", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "symbol", "outputs": [{"internalType": "string", "name": "", "type": "string"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "totalSupply", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "recipient", "type": "address"}, {"internalType": "uint256", "name": "amount", "type": "uint256"}], "name": "transfer", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "from", "type": "address"}, {"internalType": "address", "name": "to", "type": "address"}, {"internalType": "uint256", "name": "value", "type": "uint256"}], "name": "transferFrom", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [{"internalType": "address", "name": "newOwner", "type": "address"}], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "uniswapFactory", "outputs": [{"internalType": "contract IUniswapV2Factory", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "uniswapPair", "outputs": [{"internalType": "contract IUniswapV2Pair", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "uniswapRouter", "outputs": [{"internalType": "contract IUniswapV2Router02", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}, {"inputs": [], "name": "wmatic", "outputs": [{"internalType": "contract IWMATIC", "name": "", "type": "address"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol", "1": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/interfaces/draft-IERC6093.sol", "10": "contracts/CalFundToken.sol", "2": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol", "3": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/IERC20.sol", "4": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/extensions/IERC20Metadata.sol", "5": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/utils/Context.sol", "6": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol", "7": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol", "8": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router01.sol", "9": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol"}, "ast": {"absolutePath": "contracts/CalFundToken.sol", "exportedSymbols": {"CalFundToken": [683], "Context": [2014], "ERC20": [1591], "IERC20": [2229], "IERC20Errors": [2056], "IERC20Metadata": [2255], "IUniswapV2Factory": [1654], "IUniswapV2Pair": [1896], "IUniswapV2Router01": [2563], "IUniswapV2Router02": [1984], "IWMATIC": [24], "Ownable": [1076]}, "id": 684, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".4"], "nodeType": "PragmaDirective", "src": "32:23:10"}, {"absolutePath": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol", "file": "OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol", "id": 2, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 684, "sourceUnit": 1592, "src": "57:83:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/devbox6/.brownie/packages/OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol", "file": "OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol", "id": 3, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 684, "sourceUnit": 1077, "src": "141:80:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol", "file": "Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol", "id": 4, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 684, "sourceUnit": 1985, "src": "222:87:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol", "file": "Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol", "id": 5, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 684, "sourceUnit": 1655, "src": "310:82:10", "symbolAliases": [], "unitAlias": ""}, {"absolutePath": "/home/devbox6/.brownie/packages/Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol", "file": "Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol", "id": 6, "nameLocation": "-1:-1:-1", "nodeType": "ImportDirective", "scope": 684, "sourceUnit": 1897, "src": "393:79:10", "symbolAliases": [], "unitAlias": ""}, {"abstract": false, "baseContracts": [], "canonicalName": "IWMATIC", "contractDependencies": [], "contractKind": "interface", "fullyImplemented": false, "id": 24, "linearizedBaseContracts": [24], "name": "IWMATIC", "nameLocation": "484:7:10", "nodeType": "ContractDefinition", "nodes": [{"functionSelector": "d0e30db0", "id": 9, "implemented": false, "kind": "function", "modifiers": [], "name": "deposit", "nameLocation": "507:7:10", "nodeType": "FunctionDefinition", "parameters": {"id": 7, "nodeType": "ParameterList", "parameters": [], "src": "514:2:10"}, "returnParameters": {"id": 8, "nodeType": "ParameterList", "parameters": [], "src": "533:0:10"}, "scope": 24, "src": "498:36:10", "stateMutability": "payable", "virtual": false, "visibility": "external"}, {"functionSelector": "2e1a7d4d", "id": 14, "implemented": false, "kind": "function", "modifiers": [], "name": "withdraw", "nameLocation": "548:8:10", "nodeType": "FunctionDefinition", "parameters": {"id": 12, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 11, "mutability": "mutable", "name": "wad", "nameLocation": "562:3:10", "nodeType": "VariableDeclaration", "scope": 14, "src": "557:8:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 10, "name": "uint", "nodeType": "ElementaryTypeName", "src": "557:4:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "556:10:10"}, "returnParameters": {"id": 13, "nodeType": "ParameterList", "parameters": [], "src": "575:0:10"}, "scope": 24, "src": "539:37:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"functionSelector": "a9059cbb", "id": 23, "implemented": false, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "590:8:10", "nodeType": "FunctionDefinition", "parameters": {"id": 19, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 16, "mutability": "mutable", "name": "dst", "nameLocation": "607:3:10", "nodeType": "VariableDeclaration", "scope": 23, "src": "599:11:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 15, "name": "address", "nodeType": "ElementaryTypeName", "src": "599:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 18, "mutability": "mutable", "name": "wad", "nameLocation": "617:3:10", "nodeType": "VariableDeclaration", "scope": 23, "src": "612:8:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 17, "name": "uint", "nodeType": "ElementaryTypeName", "src": "612:4:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "598:23:10"}, "returnParameters": {"id": 22, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 21, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 23, "src": "640:4:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 20, "name": "bool", "nodeType": "ElementaryTypeName", "src": "640:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "639:6:10"}, "scope": 24, "src": "581:65:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}], "scope": 684, "src": "474:174:10", "usedErrors": [], "usedEvents": []}, {"abstract": false, "baseContracts": [{"baseName": {"id": 25, "name": "ERC20", "nameLocations": ["675:5:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1591, "src": "675:5:10"}, "id": 26, "nodeType": "InheritanceSpecifier", "src": "675:5:10"}, {"baseName": {"id": 27, "name": "Ownable", "nameLocations": ["682:7:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1076, "src": "682:7:10"}, "id": 28, "nodeType": "InheritanceSpecifier", "src": "682:7:10"}], "canonicalName": "CalFundToken", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 683, "linearizedBaseContracts": [683, 1076, 1591, 2056, 2255, 2229, 2014], "name": "CalFundToken", "nameLocation": "659:12:10", "nodeType": "ContractDefinition", "nodes": [{"constant": false, "functionSelector": "735de9f7", "id": 31, "mutability": "mutable", "name": "uniswapRouter", "nameLocation": "722:13:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "696:39:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}, "typeName": {"id": 30, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 29, "name": "IUniswapV2Router02", "nameLocations": ["696:18:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1984, "src": "696:18:10"}, "referencedDeclaration": 1984, "src": "696:18:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}, "visibility": "public"}, {"constant": false, "functionSelector": "8bdb2afa", "id": 34, "mutability": "mutable", "name": "uniswapFactory", "nameLocation": "766:14:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "741:39:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}, "typeName": {"id": 33, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 32, "name": "IUniswapV2Factory", "nameLocations": ["741:17:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1654, "src": "741:17:10"}, "referencedDeclaration": 1654, "src": "741:17:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}, "visibility": "public"}, {"constant": false, "functionSelector": "c816841b", "id": 37, "mutability": "mutable", "name": "uniswapPair", "nameLocation": "808:11:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "786:33:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}, "typeName": {"id": 36, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 35, "name": "IUniswapV2Pair", "nameLocations": ["786:14:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1896, "src": "786:14:10"}, "referencedDeclaration": 1896, "src": "786:14:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "visibility": "public"}, {"constant": false, "functionSelector": "fb41be16", "id": 40, "mutability": "mutable", "name": "wmatic", "nameLocation": "840:6:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "825:21:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}, "typeName": {"id": 39, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 38, "name": "IWMATIC", "nameLocations": ["825:7:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 24, "src": "825:7:10"}, "referencedDeclaration": 24, "src": "825:7:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}, "visibility": "public"}, {"constant": false, "functionSelector": "31fbfb63", "id": 42, "mutability": "mutable", "name": "maticAddress", "nameLocation": "867:12:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "852:27:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 41, "name": "address", "nodeType": "ElementaryTypeName", "src": "852:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "55ea42a5", "id": 44, "mutability": "mutable", "name": "proposedNewCommissionAddress", "nameLocation": "900:28:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "885:43:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 43, "name": "address", "nodeType": "ElementaryTypeName", "src": "885:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "public"}, {"constant": false, "functionSelector": "7f6cdf42", "id": 46, "mutability": "mutable", "name": "proposalEndTime", "nameLocation": "949:15:10", "nodeType": "VariableDeclaration", "scope": 683, "src": "934:30:10", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 45, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "934:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"anonymous": false, "eventSelector": "8c668e36435175967c02a5a7278fe0306b587bca12fe58b3ef724ebf43e21d88", "id": 50, "name": "DexFailure", "nameLocation": "977:10:10", "nodeType": "EventDefinition", "parameters": {"id": 49, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 48, "indexed": false, "mutability": "mutable", "name": "message", "nameLocation": "995:7:10", "nodeType": "VariableDeclaration", "scope": 50, "src": "988:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 47, "name": "string", "nodeType": "ElementaryTypeName", "src": "988:6:10", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "987:16:10"}, "src": "971:33:10"}, {"body": {"id": 72, "nodeType": "Block", "src": "1095:93:10", "statements": [{"expression": {"arguments": [{"expression": {"id": 63, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1111:3:10", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 64, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "1115:6:10", "memberName": "sender", "nodeType": "MemberAccess", "src": "1111:10:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"commonType": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}, "id": 69, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "31303030303030", "id": 65, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1123:7:10", "typeDescriptions": {"typeIdentifier": "t_rational_1000000_by_1", "typeString": "int_const 1000000"}, "value": "1000000"}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"commonType": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "id": 68, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "leftExpression": {"hexValue": "3130", "id": 66, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1133:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "nodeType": "BinaryOperation", "operator": "**", "rightExpression": {"hexValue": "3138", "id": 67, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1139:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_18_by_1", "typeString": "int_const 18"}, "value": "18"}, "src": "1133:8:10", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}}, "src": "1123:18:10", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_rational_1000000000000000000000000_by_1", "typeString": "int_const 1000000000000000000000000"}], "id": 62, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1431, "src": "1105:5:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 70, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1105:37:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 71, "nodeType": "ExpressionStatement", "src": "1105:37:10"}]}, "id": 73, "implemented": true, "kind": "constructor", "modifiers": [{"arguments": [{"hexValue": "43616c46756e64546f6b656e", "id": 55, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1050:14:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4999aaa82bb51925b1edd897848b1f1ab1cf0252478b410b5c1ef5096df4c8f7", "typeString": "literal_string \"CalFundToken\""}, "value": "CalFundToken"}, {"hexValue": "434654", "id": 56, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1066:5:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0162fcad39b5277c1a03887ece6852f4d9d5380f3d48dea0342b19d25dec1573", "typeString": "literal_string \"CFT\""}, "value": "CFT"}], "id": 57, "kind": "baseConstructorSpecifier", "modifierName": {"id": 54, "name": "ERC20", "nameLocations": ["1044:5:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1591, "src": "1044:5:10"}, "nodeType": "ModifierInvocation", "src": "1044:28:10"}, {"arguments": [{"id": 59, "name": "initialOwner", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 52, "src": "1081:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "id": 60, "kind": "baseConstructorSpecifier", "modifierName": {"id": 58, "name": "Ownable", "nameLocations": ["1073:7:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 1076, "src": "1073:7:10"}, "nodeType": "ModifierInvocation", "src": "1073:21:10"}], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 53, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 52, "mutability": "mutable", "name": "initialOwner", "nameLocation": "1030:12:10", "nodeType": "VariableDeclaration", "scope": 73, "src": "1022:20:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 51, "name": "address", "nodeType": "ElementaryTypeName", "src": "1022:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1021:22:10"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [], "src": "1095:0:10"}, "scope": 683, "src": "1010:178:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 86, "nodeType": "Block", "src": "1258:61:10", "statements": [{"expression": {"id": 84, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 80, "name": "uniswapFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34, "src": "1268:14:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 82, "name": "_factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 75, "src": "1303:8:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 81, "name": "IUniswapV2Factory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1654, "src": "1285:17:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$1654_$", "typeString": "type(contract IUniswapV2Factory)"}}, "id": 83, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1285:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}, "src": "1268:44:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}, "id": 85, "nodeType": "ExpressionStatement", "src": "1268:44:10"}]}, "functionSelector": "e04b677f", "id": 87, "implemented": true, "kind": "function", "modifiers": [{"id": 78, "kind": "modifierInvocation", "modifierName": {"id": 77, "name": "onlyOwner", "nameLocations": ["1248:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1248:9:10"}, "nodeType": "ModifierInvocation", "src": "1248:9:10"}], "name": "setUniswapFactory", "nameLocation": "1203:17:10", "nodeType": "FunctionDefinition", "parameters": {"id": 76, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 75, "mutability": "mutable", "name": "_factory", "nameLocation": "1229:8:10", "nodeType": "VariableDeclaration", "scope": 87, "src": "1221:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 74, "name": "address", "nodeType": "ElementaryTypeName", "src": "1221:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1220:18:10"}, "returnParameters": {"id": 79, "nodeType": "ParameterList", "parameters": [], "src": "1258:0:10"}, "scope": 683, "src": "1194:125:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 100, "nodeType": "Block", "src": "1387:60:10", "statements": [{"expression": {"id": 98, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 94, "name": "uniswapRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "1397:13:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 96, "name": "_router", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 89, "src": "1432:7:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 95, "name": "IUniswapV2Router02", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1984, "src": "1413:18:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router02_$1984_$", "typeString": "type(contract IUniswapV2Router02)"}}, "id": 97, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1413:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}, "src": "1397:43:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1397:43:10"}]}, "functionSelector": "bea9849e", "id": 101, "implemented": true, "kind": "function", "modifiers": [{"id": 92, "kind": "modifierInvocation", "modifierName": {"id": 91, "name": "onlyOwner", "nameLocations": ["1377:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1377:9:10"}, "nodeType": "ModifierInvocation", "src": "1377:9:10"}], "name": "setUniswapRouter", "nameLocation": "1334:16:10", "nodeType": "FunctionDefinition", "parameters": {"id": 90, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 89, "mutability": "mutable", "name": "_router", "nameLocation": "1359:7:10", "nodeType": "VariableDeclaration", "scope": 101, "src": "1351:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 88, "name": "address", "nodeType": "ElementaryTypeName", "src": "1351:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1350:17:10"}, "returnParameters": {"id": 93, "nodeType": "ParameterList", "parameters": [], "src": "1387:0:10"}, "scope": 683, "src": "1325:122:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 114, "nodeType": "Block", "src": "1511:52:10", "statements": [{"expression": {"id": 112, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 108, "name": "uniswapPair", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "1521:11:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 110, "name": "_pair", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 103, "src": "1550:5:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 109, "name": "IUniswapV2Pair", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "1535:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1896_$", "typeString": "type(contract IUniswapV2Pair)"}}, "id": 111, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1535:21:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "src": "1521:35:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "id": 113, "nodeType": "ExpressionStatement", "src": "1521:35:10"}]}, "functionSelector": "d5aed6bf", "id": 115, "implemented": true, "kind": "function", "modifiers": [{"id": 106, "kind": "modifierInvocation", "modifierName": {"id": 105, "name": "onlyOwner", "nameLocations": ["1501:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1501:9:10"}, "nodeType": "ModifierInvocation", "src": "1501:9:10"}], "name": "setUniswapPair", "nameLocation": "1462:14:10", "nodeType": "FunctionDefinition", "parameters": {"id": 104, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 103, "mutability": "mutable", "name": "_pair", "nameLocation": "1485:5:10", "nodeType": "VariableDeclaration", "scope": 115, "src": "1477:13:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 102, "name": "address", "nodeType": "ElementaryTypeName", "src": "1477:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1476:15:10"}, "returnParameters": {"id": 107, "nodeType": "ParameterList", "parameters": [], "src": "1511:0:10"}, "scope": 683, "src": "1453:110:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 126, "nodeType": "Block", "src": "1629:38:10", "statements": [{"expression": {"id": 124, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 122, "name": "maticAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "1639:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 123, "name": "_matic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 117, "src": "1654:6:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1639:21:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 125, "nodeType": "ExpressionStatement", "src": "1639:21:10"}]}, "functionSelector": "aa411d5b", "id": 127, "implemented": true, "kind": "function", "modifiers": [{"id": 120, "kind": "modifierInvocation", "modifierName": {"id": 119, "name": "onlyOwner", "nameLocations": ["1619:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1619:9:10"}, "nodeType": "ModifierInvocation", "src": "1619:9:10"}], "name": "setMaticAddress", "nameLocation": "1578:15:10", "nodeType": "FunctionDefinition", "parameters": {"id": 118, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 117, "mutability": "mutable", "name": "_matic", "nameLocation": "1602:6:10", "nodeType": "VariableDeclaration", "scope": 127, "src": "1594:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 116, "name": "address", "nodeType": "ElementaryTypeName", "src": "1594:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1593:16:10"}, "returnParameters": {"id": 121, "nodeType": "ParameterList", "parameters": [], "src": "1629:0:10"}, "scope": 683, "src": "1569:98:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 140, "nodeType": "Block", "src": "1735:42:10", "statements": [{"expression": {"id": 138, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 134, "name": "wmatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "1745:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 136, "name": "_wmatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 129, "src": "1762:7:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 135, "name": "IWMATIC", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 24, "src": "1754:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IWMATIC_$24_$", "typeString": "type(contract IWMATIC)"}}, "id": 137, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1754:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}, "src": "1745:25:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}, "id": 139, "nodeType": "ExpressionStatement", "src": "1745:25:10"}]}, "functionSelector": "3e37c0dc", "id": 141, "implemented": true, "kind": "function", "modifiers": [{"id": 132, "kind": "modifierInvocation", "modifierName": {"id": 131, "name": "onlyOwner", "nameLocations": ["1725:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1725:9:10"}, "nodeType": "ModifierInvocation", "src": "1725:9:10"}], "name": "setWmaticAddress", "nameLocation": "1682:16:10", "nodeType": "FunctionDefinition", "parameters": {"id": 130, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 129, "mutability": "mutable", "name": "_wmatic", "nameLocation": "1707:7:10", "nodeType": "VariableDeclaration", "scope": 141, "src": "1699:15:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 128, "name": "address", "nodeType": "ElementaryTypeName", "src": "1699:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "1698:17:10"}, "returnParameters": {"id": 133, "nodeType": "ParameterList", "parameters": [], "src": "1735:0:10"}, "scope": 683, "src": "1673:104:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 199, "nodeType": "Block", "src": "1824:369:10", "statements": [{"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 155, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 149, "name": "uniswapFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34, "src": "1850:14:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}], "id": 148, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1842:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 147, "name": "address", "nodeType": "ElementaryTypeName", "src": "1842:7:10", "typeDescriptions": {}}}, "id": 150, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1842:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 153, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1877:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 152, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1869:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 151, "name": "address", "nodeType": "ElementaryTypeName", "src": "1869:7:10", "typeDescriptions": {}}}, "id": 154, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1869:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1842:37:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "556e697377617020666163746f7279206e6f7420736574", "id": 156, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1881:25:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e8de8652e8b85e35e2c08c02659a2ec5897998a5681b8388705b52f7d945da9c", "typeString": "literal_string \"Uniswap factory not set\""}, "value": "Uniswap factory not set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e8de8652e8b85e35e2c08c02659a2ec5897998a5681b8388705b52f7d945da9c", "typeString": "literal_string \"Uniswap factory not set\""}], "id": 146, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1834:7:10", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 157, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1834:73:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 158, "nodeType": "ExpressionStatement", "src": "1834:73:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 168, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"id": 162, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "1933:4:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}], "id": 161, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1925:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 160, "name": "address", "nodeType": "ElementaryTypeName", "src": "1925:7:10", "typeDescriptions": {}}}, "id": 163, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1925:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 166, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1950:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 165, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "1942:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 164, "name": "address", "nodeType": "ElementaryTypeName", "src": "1942:7:10", "typeDescriptions": {}}}, "id": 167, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1942:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1925:27:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "546f6b656e2061646472657373206e6f7420736574", "id": 169, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "1954:23:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_3a8c766bf1bc12f13bcad124ce7e0349c455ddc5224949c14d1fb530cffbc32f", "typeString": "literal_string \"Token address not set\""}, "value": "Token address not set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_3a8c766bf1bc12f13bcad124ce7e0349c455ddc5224949c14d1fb530cffbc32f", "typeString": "literal_string \"Token address not set\""}], "id": 159, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1917:7:10", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 170, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1917:61:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 171, "nodeType": "ExpressionStatement", "src": "1917:61:10"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_address", "typeString": "address"}, "id": 178, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 173, "name": "maticAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "1996:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"arguments": [{"hexValue": "30", "id": 176, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2020:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 175, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2012:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 174, "name": "address", "nodeType": "ElementaryTypeName", "src": "2012:7:10", "typeDescriptions": {}}}, "id": 177, "isConstant": false, "isLValue": false, "isPure": true, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2012:10:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "1996:26:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4d415449432061646472657373206e6f7420736574", "id": 179, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "2024:23:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_4fbbd60a8012cd94a11d6796f73b092694a92542af3df25621e9a3060a076719", "typeString": "literal_string \"MATIC address not set\""}, "value": "MATIC address not set"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_4fbbd60a8012cd94a11d6796f73b092694a92542af3df25621e9a3060a076719", "typeString": "literal_string \"MATIC address not set\""}], "id": 172, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1988:7:10", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 180, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "1988:60:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 181, "nodeType": "ExpressionStatement", "src": "1988:60:10"}, {"assignments": [183], "declarations": [{"constant": false, "id": 183, "mutability": "mutable", "name": "pairAddress", "nameLocation": "2067:11:10", "nodeType": "VariableDeclaration", "scope": 199, "src": "2059:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 182, "name": "address", "nodeType": "ElementaryTypeName", "src": "2059:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "id": 192, "initialValue": {"arguments": [{"arguments": [{"id": 188, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "2115:4:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}], "id": 187, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "2107:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 186, "name": "address", "nodeType": "ElementaryTypeName", "src": "2107:7:10", "typeDescriptions": {}}}, "id": 189, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2107:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 190, "name": "maticAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 42, "src": "2122:12:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}], "expression": {"id": 184, "name": "uniswapFactory", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 34, "src": "2081:14:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Factory_$1654", "typeString": "contract IUniswapV2Factory"}}, "id": 185, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2096:10:10", "memberName": "createPair", "nodeType": "MemberAccess", "referencedDeclaration": 1643, "src": "2081:25:10", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$", "typeString": "function (address,address) external returns (address)"}}, "id": 191, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2081:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "VariableDeclarationStatement", "src": "2059:76:10"}, {"expression": {"id": 197, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 193, "name": "uniswapPair", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 37, "src": "2145:11:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 195, "name": "pairAddress", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 183, "src": "2174:11:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 194, "name": "IUniswapV2Pair", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1896, "src": "2159:14:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$1896_$", "typeString": "type(contract IUniswapV2Pair)"}}, "id": 196, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2159:27:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "src": "2145:41:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Pair_$1896", "typeString": "contract IUniswapV2Pair"}}, "id": 198, "nodeType": "ExpressionStatement", "src": "2145:41:10"}]}, "functionSelector": "9e78fb4f", "id": 200, "implemented": true, "kind": "function", "modifiers": [{"id": 144, "kind": "modifierInvocation", "modifierName": {"id": 143, "name": "onlyOwner", "nameLocations": ["1814:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "1814:9:10"}, "nodeType": "ModifierInvocation", "src": "1814:9:10"}], "name": "createPair", "nameLocation": "1792:10:10", "nodeType": "FunctionDefinition", "parameters": {"id": 142, "nodeType": "ParameterList", "parameters": [], "src": "1802:2:10"}, "returnParameters": {"id": 145, "nodeType": "ParameterList", "parameters": [], "src": "1824:0:10"}, "scope": 683, "src": "1783:410:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "external"}, {"body": {"id": 221, "nodeType": "Block", "src": "2265:98:10", "statements": [{"expression": {"arguments": [{"id": 210, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 202, "src": "2281:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 211, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "2292:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 209, "name": "_mint", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 1431, "src": "2275:5:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 212, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2275:24:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 213, "nodeType": "ExpressionStatement", "src": "2275:24:10"}, {"expression": {"arguments": [{"expression": {"id": 215, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2326:3:10", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 216, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2330:6:10", "memberName": "sender", "nodeType": "MemberAccess", "src": "2326:10:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 217, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 202, "src": "2338:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 218, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 204, "src": "2349:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 214, "name": "handleAutoFaucet", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 355, "src": "2309:16:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 219, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2309:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 220, "nodeType": "ExpressionStatement", "src": "2309:47:10"}]}, "functionSelector": "40c10f19", "id": 222, "implemented": true, "kind": "function", "modifiers": [{"id": 207, "kind": "modifierInvocation", "modifierName": {"id": 206, "name": "onlyOwner", "nameLocations": ["2255:9:10"], "nodeType": "IdentifierPath", "referencedDeclaration": 987, "src": "2255:9:10"}, "nodeType": "ModifierInvocation", "src": "2255:9:10"}], "name": "mint", "nameLocation": "2208:4:10", "nodeType": "FunctionDefinition", "parameters": {"id": 205, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 202, "mutability": "mutable", "name": "recipient", "nameLocation": "2221:9:10", "nodeType": "VariableDeclaration", "scope": 222, "src": "2213:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 201, "name": "address", "nodeType": "ElementaryTypeName", "src": "2213:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 204, "mutability": "mutable", "name": "amount", "nameLocation": "2240:6:10", "nodeType": "VariableDeclaration", "scope": 222, "src": "2232:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 203, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2232:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2212:35:10"}, "returnParameters": {"id": 208, "nodeType": "ParameterList", "parameters": [], "src": "2265:0:10"}, "scope": 683, "src": "2199:164:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"baseFunctions": [1201], "body": {"id": 249, "nodeType": "Block", "src": "2453:146:10", "statements": [{"assignments": [233], "declarations": [{"constant": false, "id": 233, "mutability": "mutable", "name": "success", "nameLocation": "2468:7:10", "nodeType": "VariableDeclaration", "scope": 249, "src": "2463:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 232, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2463:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 239, "initialValue": {"arguments": [{"id": 236, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 224, "src": "2493:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 237, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "2504:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 234, "name": "super", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -25, "src": "2478:5:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_super$_CalFundToken_$683_$", "typeString": "type(contract super CalFundToken)"}}, "id": 235, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2484:8:10", "memberName": "transfer", "nodeType": "MemberAccess", "referencedDeclaration": 1201, "src": "2478:14:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 238, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2478:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "2463:48:10"}, {"expression": {"arguments": [{"expression": {"id": 241, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "2538:3:10", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 242, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "2542:6:10", "memberName": "sender", "nodeType": "MemberAccess", "src": "2538:10:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 243, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 224, "src": "2550:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 244, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 226, "src": "2561:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 240, "name": "handleAutoFaucet", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 355, "src": "2521:16:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 245, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2521:47:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 246, "nodeType": "ExpressionStatement", "src": "2521:47:10"}, {"expression": {"id": 247, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 233, "src": "2585:7:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "functionReturnParameters": 231, "id": 248, "nodeType": "Return", "src": "2578:14:10"}]}, "functionSelector": "a9059cbb", "id": 250, "implemented": true, "kind": "function", "modifiers": [], "name": "transfer", "nameLocation": "2378:8:10", "nodeType": "FunctionDefinition", "overrides": {"id": 228, "nodeType": "OverrideSpecifier", "overrides": [], "src": "2429:8:10"}, "parameters": {"id": 227, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 224, "mutability": "mutable", "name": "recipient", "nameLocation": "2395:9:10", "nodeType": "VariableDeclaration", "scope": 250, "src": "2387:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 223, "name": "address", "nodeType": "ElementaryTypeName", "src": "2387:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 226, "mutability": "mutable", "name": "amount", "nameLocation": "2414:6:10", "nodeType": "VariableDeclaration", "scope": 250, "src": "2406:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 225, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2406:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2386:35:10"}, "returnParameters": {"id": 231, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 230, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 250, "src": "2447:4:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 229, "name": "bool", "nodeType": "ElementaryTypeName", "src": "2447:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "2446:6:10"}, "scope": 683, "src": "2369:230:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 354, "nodeType": "Block", "src": "2691:974:10", "statements": [{"assignments": [260], "declarations": [{"constant": false, "id": 260, "mutability": "mutable", "name": "senderBalanceMatic", "nameLocation": "2709:18:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "2701:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 259, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2701:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 264, "initialValue": {"arguments": [{"id": 262, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 252, "src": "2746:6:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 261, "name": "getMaticBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 682, "src": "2730:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 263, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2730:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2701:52:10"}, {"assignments": [266], "declarations": [{"constant": false, "id": 266, "mutability": "mutable", "name": "recipientBalanceMatic", "nameLocation": "2771:21:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "2763:29:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 265, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2763:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 270, "initialValue": {"arguments": [{"id": 268, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "2811:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}], "id": 267, "name": "getMaticBalance", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 682, "src": "2795:15:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$", "typeString": "function (address) view returns (uint256)"}}, "id": 269, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2795:26:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2763:58:10"}, {"assignments": [272], "declarations": [{"constant": false, "id": 272, "mutability": "mutable", "name": "gasLimit", "nameLocation": "2840:8:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "2832:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 271, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2832:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 276, "initialValue": {"arguments": [{"id": 274, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 256, "src": "2877:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 273, "name": "extractGasLimitFromAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 422, "src": "2851:25:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$", "typeString": "function (uint256) pure returns (uint256)"}}, "id": 275, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "2851:33:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2832:52:10"}, {"assignments": [278], "declarations": [{"constant": false, "id": 278, "mutability": "mutable", "name": "requiredAmountSender", "nameLocation": "2902:20:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "2894:28:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 277, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2894:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 289, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 281, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 279, "name": "senderBalanceMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 260, "src": "2925:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "31", "id": 280, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2946:7:10", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1"}, "src": "2925:28:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 287, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2975:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 288, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "2925:51:10", "trueExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 286, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 284, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 282, "name": "gasLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 272, "src": "2956:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "33", "id": 283, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2967:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "2956:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 285, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "2971:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "2956:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2894:82:10"}, {"assignments": [291], "declarations": [{"constant": false, "id": 291, "mutability": "mutable", "name": "requiredAmountRecipient", "nameLocation": "2994:23:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "2986:31:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 290, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2986:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 302, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 294, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 292, "name": "recipientBalanceMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 266, "src": "3020:21:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"hexValue": "31", "id": 293, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3044:7:10", "subdenomination": "ether", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1"}, "src": "3020:31:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"hexValue": "30", "id": 300, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3073:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "id": 301, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3020:54:10", "trueExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 299, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 297, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 295, "name": "gasLimit", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 272, "src": "3054:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "33", "id": 296, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3065:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_3_by_1", "typeString": "int_const 3"}, "value": "3"}, "src": "3054:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "32", "id": 298, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3069:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}, "src": "3054:16:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "2986:88:10"}, {"assignments": [304], "declarations": [{"constant": false, "id": 304, "mutability": "mutable", "name": "totalRequiredMatic", "nameLocation": "3092:18:10", "nodeType": "VariableDeclaration", "scope": 354, "src": "3084:26:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 303, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3084:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 308, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 307, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 305, "name": "requiredAmountSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3113:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"id": 306, "name": "requiredAmountRecipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 291, "src": "3136:23:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "3113:46:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3084:75:10"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 311, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 309, "name": "totalRequiredMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "3174:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 310, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3195:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3174:22:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 353, "nodeType": "IfStatement", "src": "3170:489:10", "trueBody": {"id": 352, "nodeType": "Block", "src": "3198:461:10", "statements": [{"assignments": [313], "declarations": [{"constant": false, "id": 313, "mutability": "mutable", "name": "swapSuccess", "nameLocation": "3217:11:10", "nodeType": "VariableDeclaration", "scope": 352, "src": "3212:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 312, "name": "bool", "nodeType": "ElementaryTypeName", "src": "3212:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "id": 321, "initialValue": {"arguments": [{"arguments": [{"id": 317, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "3259:4:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}], "id": 316, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3251:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 315, "name": "address", "nodeType": "ElementaryTypeName", "src": "3251:7:10", "typeDescriptions": {}}}, "id": 318, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3251:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 319, "name": "totalRequiredMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "3266:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 314, "name": "swapTokensForWMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 637, "src": "3231:19:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$", "typeString": "function (address,uint256) returns (bool)"}}, "id": 320, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3231:54:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "VariableDeclarationStatement", "src": "3212:73:10"}, {"condition": {"id": 322, "name": "swapSuccess", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 313, "src": "3303:11:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseBody": {"id": 350, "nodeType": "Block", "src": "3570:79:10", "statements": [{"eventCall": {"arguments": [{"hexValue": "546f6b656e20746f20574d617469632073776170206661696c6564", "id": 347, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "3604:29:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_befdcbde044c15b92e738bd7e51d10625179124a1ab6076ecf2c43c453349a80", "typeString": "literal_string \"Token to WMatic swap failed\""}, "value": "Token to WMatic swap failed"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_befdcbde044c15b92e738bd7e51d10625179124a1ab6076ecf2c43c453349a80", "typeString": "literal_string \"Token to WMatic swap failed\""}], "id": 346, "name": "DexFailure", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 50, "src": "3593:10:10", "typeDescriptions": {"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory)"}}, "id": 348, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3593:41:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 349, "nodeType": "EmitStatement", "src": "3588:46:10"}]}, "id": 351, "nodeType": "IfStatement", "src": "3299:350:10", "trueBody": {"id": 345, "nodeType": "Block", "src": "3316:248:10", "statements": [{"expression": {"arguments": [{"id": 324, "name": "totalRequiredMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 304, "src": "3347:18:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 323, "name": "unwrapWMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 649, "src": "3334:12:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256)"}}, "id": 325, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3334:32:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 326, "nodeType": "ExpressionStatement", "src": "3334:32:10"}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 329, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 327, "name": "requiredAmountSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3388:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 328, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3411:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3388:24:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 335, "nodeType": "IfStatement", "src": "3384:69:10", "trueBody": {"expression": {"arguments": [{"id": 331, "name": "sender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 252, "src": "3424:6:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 332, "name": "requiredAmountSender", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 278, "src": "3432:20:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 330, "name": "sendMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 671, "src": "3414:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 333, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3414:39:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 334, "nodeType": "ExpressionStatement", "src": "3414:39:10"}}, {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 338, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 336, "name": "requiredAmountRecipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 291, "src": "3475:23:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 337, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3501:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "3475:27:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 344, "nodeType": "IfStatement", "src": "3471:78:10", "trueBody": {"expression": {"arguments": [{"id": 340, "name": "recipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 254, "src": "3514:9:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 341, "name": "requiredAmountRecipient", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 291, "src": "3525:23:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 339, "name": "sendMatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 671, "src": "3504:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,uint256)"}}, "id": 342, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3504:45:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 343, "nodeType": "ExpressionStatement", "src": "3504:45:10"}}]}}]}}]}, "id": 355, "implemented": true, "kind": "function", "modifiers": [], "name": "handleAutoFaucet", "nameLocation": "2614:16:10", "nodeType": "FunctionDefinition", "parameters": {"id": 257, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 252, "mutability": "mutable", "name": "sender", "nameLocation": "2639:6:10", "nodeType": "VariableDeclaration", "scope": 355, "src": "2631:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 251, "name": "address", "nodeType": "ElementaryTypeName", "src": "2631:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 254, "mutability": "mutable", "name": "recipient", "nameLocation": "2655:9:10", "nodeType": "VariableDeclaration", "scope": 355, "src": "2647:17:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 253, "name": "address", "nodeType": "ElementaryTypeName", "src": "2647:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 256, "mutability": "mutable", "name": "amount", "nameLocation": "2674:6:10", "nodeType": "VariableDeclaration", "scope": 355, "src": "2666:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 255, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "2666:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "2630:51:10"}, "returnParameters": {"id": 258, "nodeType": "ParameterList", "parameters": [], "src": "2691:0:10"}, "scope": 683, "src": "2605:1060:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "internal"}, {"body": {"id": 421, "nodeType": "Block", "src": "3754:457:10", "statements": [{"assignments": [363], "declarations": [{"constant": false, "id": 363, "mutability": "mutable", "name": "fractionalPart", "nameLocation": "3772:14:10", "nodeType": "VariableDeclaration", "scope": 421, "src": "3764:22:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 362, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3764:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 367, "initialValue": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 366, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 364, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 357, "src": "3789:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "%", "rightExpression": {"hexValue": "31653138", "id": 365, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3798:4:10", "typeDescriptions": {"typeIdentifier": "t_rational_1000000000000000000_by_1", "typeString": "int_const 1000000000000000000"}, "value": "1e18"}, "src": "3789:13:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3764:38:10"}, {"assignments": [369], "declarations": [{"constant": false, "id": 369, "mutability": "mutable", "name": "fractionalStr", "nameLocation": "3826:13:10", "nodeType": "VariableDeclaration", "scope": 421, "src": "3812:27:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 368, "name": "string", "nodeType": "ElementaryTypeName", "src": "3812:6:10", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "id": 373, "initialValue": {"arguments": [{"id": 371, "name": "fractionalPart", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 363, "src": "3855:14:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 370, "name": "uintToString", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 508, "src": "3842:12:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$", "typeString": "function (uint256) pure returns (string memory)"}}, "id": 372, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3842:28:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3812:58:10"}, {"assignments": [375], "declarations": [{"constant": false, "id": 375, "mutability": "mutable", "name": "bytesStr", "nameLocation": "3893:8:10", "nodeType": "VariableDeclaration", "scope": 421, "src": "3880:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 374, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3880:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 380, "initialValue": {"arguments": [{"id": 378, "name": "fractionalStr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 369, "src": "3910:13:10", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}], "id": 377, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "3904:5:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes_storage_ptr_$", "typeString": "type(bytes storage pointer)"}, "typeName": {"id": 376, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "3904:5:10", "typeDescriptions": {}}}, "id": 379, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "3904:20:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "3880:44:10"}, {"assignments": [382], "declarations": [{"constant": false, "id": 382, "mutability": "mutable", "name": "endIndex", "nameLocation": "3942:8:10", "nodeType": "VariableDeclaration", "scope": 421, "src": "3934:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 381, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3934:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 391, "initialValue": {"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 386, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"expression": {"id": 383, "name": "bytesStr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "3953:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 384, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3962:6:10", "memberName": "length", "nodeType": "MemberAccess", "src": "3953:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "36", "id": 385, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3971:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "src": "3953:19:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "falseExpression": {"expression": {"id": 388, "name": "bytesStr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "3979:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 389, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "3988:6:10", "memberName": "length", "nodeType": "MemberAccess", "src": "3979:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 390, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "Conditional", "src": "3953:41:10", "trueExpression": {"hexValue": "36", "id": 387, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "3975:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_6_by_1", "typeString": "int_const 6"}, "value": "6"}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "3934:60:10"}, {"body": {"id": 414, "nodeType": "Block", "src": "4043:116:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}, "id": 406, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 402, "name": "bytesStr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "4061:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 404, "indexExpression": {"id": 403, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4070:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4061:11:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "39", "id": 405, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4076:3:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb", "typeString": "literal_string \"9\""}, "value": "9"}, "src": "4061:18:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 413, "nodeType": "IfStatement", "src": "4057:92:10", "trueBody": {"id": 412, "nodeType": "Block", "src": "4081:68:10", "statements": [{"expression": {"id": 409, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 407, "name": "endIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 382, "src": "4099:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"id": 408, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4110:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4099:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 410, "nodeType": "ExpressionStatement", "src": "4099:12:10"}, {"id": 411, "nodeType": "Break", "src": "4129:5:10"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 398, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 396, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4024:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 397, "name": "endIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 382, "src": "4028:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4024:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 415, "initializationExpression": {"assignments": [393], "declarations": [{"constant": false, "id": 393, "mutability": "mutable", "name": "i", "nameLocation": "4017:1:10", "nodeType": "VariableDeclaration", "scope": 415, "src": "4009:9:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 392, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4009:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 395, "initialValue": {"hexValue": "30", "id": 394, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4021:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4009:13:10"}, "isSimpleCounterLoop": true, "loopExpression": {"expression": {"id": 400, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4038:3:10", "subExpression": {"id": 399, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 393, "src": "4038:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 401, "nodeType": "ExpressionStatement", "src": "4038:3:10"}, "nodeType": "ForStatement", "src": "4004:155:10"}, {"expression": {"arguments": [{"id": 417, "name": "bytesStr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 375, "src": "4185:8:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, {"id": 418, "name": "endIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 382, "src": "4195:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 416, "name": "toUint256", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 568, "src": "4175:9:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint256_$", "typeString": "function (bytes memory,uint256) pure returns (uint256)"}}, "id": 419, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4175:29:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 361, "id": 420, "nodeType": "Return", "src": "4168:36:10"}]}, "id": 422, "implemented": true, "kind": "function", "modifiers": [], "name": "extractGasLimitFromAmount", "nameLocation": "3680:25:10", "nodeType": "FunctionDefinition", "parameters": {"id": 358, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 357, "mutability": "mutable", "name": "amount", "nameLocation": "3714:6:10", "nodeType": "VariableDeclaration", "scope": 422, "src": "3706:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 356, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3706:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3705:16:10"}, "returnParameters": {"id": 361, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 360, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 422, "src": "3745:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 359, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "3745:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "3744:9:10"}, "scope": 683, "src": "3671:540:10", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 507, "nodeType": "Block", "src": "4289:439:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 431, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 429, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4303:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "==", "rightExpression": {"hexValue": "30", "id": 430, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4309:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4303:7:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 434, "nodeType": "IfStatement", "src": "4299:23:10", "trueBody": {"expression": {"hexValue": "30", "id": 432, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4319:3:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\""}, "value": "0"}, "functionReturnParameters": 428, "id": 433, "nodeType": "Return", "src": "4312:10:10"}}, {"assignments": [436], "declarations": [{"constant": false, "id": 436, "mutability": "mutable", "name": "j", "nameLocation": "4340:1:10", "nodeType": "VariableDeclaration", "scope": 507, "src": "4332:9:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 435, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4332:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 438, "initialValue": {"id": 437, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4344:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4332:14:10"}, {"assignments": [440], "declarations": [{"constant": false, "id": 440, "mutability": "mutable", "name": "length", "nameLocation": "4364:6:10", "nodeType": "VariableDeclaration", "scope": 507, "src": "4356:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 439, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4356:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 441, "nodeType": "VariableDeclarationStatement", "src": "4356:14:10"}, {"body": {"id": 452, "nodeType": "Block", "src": "4395:54:10", "statements": [{"expression": {"id": 446, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4409:8:10", "subExpression": {"id": 445, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "4409:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 447, "nodeType": "ExpressionStatement", "src": "4409:8:10"}, {"expression": {"id": 450, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 448, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "4431:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"hexValue": "3130", "id": 449, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4436:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "4431:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 451, "nodeType": "ExpressionStatement", "src": "4431:7:10"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 444, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 442, "name": "j", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 436, "src": "4387:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 443, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4392:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4387:6:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 453, "nodeType": "WhileStatement", "src": "4380:69:10"}, {"assignments": [455], "declarations": [{"constant": false, "id": 455, "mutability": "mutable", "name": "bstr", "nameLocation": "4471:4:10", "nodeType": "VariableDeclaration", "scope": 507, "src": "4458:17:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 454, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4458:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}], "id": 460, "initialValue": {"arguments": [{"id": 458, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "4488:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 457, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "4478:9:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$", "typeString": "function (uint256) pure returns (bytes memory)"}, "typeName": {"id": 456, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4482:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}}, "id": 459, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4478:17:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "nodeType": "VariableDeclarationStatement", "src": "4458:37:10"}, {"assignments": [462], "declarations": [{"constant": false, "id": 462, "mutability": "mutable", "name": "k", "nameLocation": "4513:1:10", "nodeType": "VariableDeclaration", "scope": 507, "src": "4505:9:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 461, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4505:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 464, "initialValue": {"id": 463, "name": "length", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 440, "src": "4517:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "VariableDeclarationStatement", "src": "4505:18:10"}, {"body": {"id": 500, "nodeType": "Block", "src": "4549:144:10", "statements": [{"expression": {"id": 469, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "--", "prefix": false, "src": "4563:3:10", "subExpression": {"id": 468, "name": "k", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "4563:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 470, "nodeType": "ExpressionStatement", "src": "4563:3:10"}, {"assignments": [472], "declarations": [{"constant": false, "id": 472, "mutability": "mutable", "name": "temp", "nameLocation": "4586:4:10", "nodeType": "VariableDeclaration", "scope": 500, "src": "4580:10:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "typeName": {"id": 471, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "4580:5:10", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "visibility": "internal"}], "id": 486, "initialValue": {"components": [{"commonType": {"typeIdentifier": "t_uint8", "typeString": "uint8"}, "id": 484, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"hexValue": "3438", "id": 473, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4594:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_48_by_1", "typeString": "int_const 48"}, "value": "48"}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"arguments": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 482, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 476, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4605:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 481, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 479, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 477, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4610:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "/", "rightExpression": {"hexValue": "3130", "id": 478, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4615:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "4610:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3130", "id": 480, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4620:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "4610:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4605:17:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 475, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4599:5:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 474, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "4599:5:10", "typeDescriptions": {}}}, "id": 483, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4599:24:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "src": "4594:29:10", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "id": 485, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4593:31:10", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}, "nodeType": "VariableDeclarationStatement", "src": "4580:44:10"}, {"expression": {"id": 494, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 487, "name": "bstr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "4638:4:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 489, "indexExpression": {"id": 488, "name": "k", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 462, "src": "4643:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "4638:7:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 492, "name": "temp", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 472, "src": "4655:4:10", "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 491, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4648:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_bytes1_$", "typeString": "type(bytes1)"}, "typeName": {"id": 490, "name": "bytes1", "nodeType": "ElementaryTypeName", "src": "4648:6:10", "typeDescriptions": {}}}, "id": 493, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4648:12:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "src": "4638:22:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "id": 495, "nodeType": "ExpressionStatement", "src": "4638:22:10"}, {"expression": {"id": 498, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 496, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4674:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "/=", "rightHandSide": {"hexValue": "3130", "id": 497, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4680:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "4674:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 499, "nodeType": "ExpressionStatement", "src": "4674:8:10"}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 467, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 465, "name": "_i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 424, "src": "4540:2:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "!=", "rightExpression": {"hexValue": "30", "id": 466, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4546:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "4540:7:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 501, "nodeType": "WhileStatement", "src": "4533:160:10"}, {"expression": {"arguments": [{"id": 504, "name": "bstr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 455, "src": "4716:4:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}], "id": 503, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4709:6:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_string_storage_ptr_$", "typeString": "type(string storage pointer)"}, "typeName": {"id": 502, "name": "string", "nodeType": "ElementaryTypeName", "src": "4709:6:10", "typeDescriptions": {}}}, "id": 505, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4709:12:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, "functionReturnParameters": 428, "id": 506, "nodeType": "Return", "src": "4702:19:10"}]}, "id": 508, "implemented": true, "kind": "function", "modifiers": [], "name": "uintToString", "nameLocation": "4226:12:10", "nodeType": "FunctionDefinition", "parameters": {"id": 425, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 424, "mutability": "mutable", "name": "_i", "nameLocation": "4247:2:10", "nodeType": "VariableDeclaration", "scope": 508, "src": "4239:10:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 423, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4239:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4238:12:10"}, "returnParameters": {"id": 428, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 427, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 508, "src": "4274:13:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 426, "name": "string", "nodeType": "ElementaryTypeName", "src": "4274:6:10", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "4273:15:10"}, "scope": 683, "src": "4217:511:10", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 567, "nodeType": "Block", "src": "4819:245:10", "statements": [{"assignments": [518], "declarations": [{"constant": false, "id": 518, "mutability": "mutable", "name": "result", "nameLocation": "4837:6:10", "nodeType": "VariableDeclaration", "scope": 567, "src": "4829:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 517, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4829:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 520, "initialValue": {"hexValue": "30", "id": 519, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4846:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4829:18:10"}, {"body": {"id": 563, "nodeType": "Block", "src": "4896:139:10", "statements": [{"condition": {"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 541, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}, "id": 535, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 531, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "4914:1:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 533, "indexExpression": {"id": 532, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "4916:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4914:4:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "BinaryOperation", "operator": ">=", "rightExpression": {"hexValue": "30", "id": 534, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4922:3:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d", "typeString": "literal_string \"0\""}, "value": "0"}, "src": "4914:11:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}, "id": 540, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"baseExpression": {"id": 536, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "4929:1:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 538, "indexExpression": {"id": 537, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "4931:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4929:4:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"hexValue": "39", "id": 539, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "4937:3:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d2f8f61201b2b11a78d6e866abc9c3db2ae8631fa656bfe5cb53668255367afb", "typeString": "literal_string \"9\""}, "value": "9"}, "src": "4929:11:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "4914:26:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 562, "nodeType": "IfStatement", "src": "4910:115:10", "trueBody": {"id": 561, "nodeType": "Block", "src": "4942:83:10", "statements": [{"expression": {"id": 559, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"id": 542, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "4960:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 558, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 545, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 543, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "4969:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "*", "rightExpression": {"hexValue": "3130", "id": 544, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4978:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_10_by_1", "typeString": "int_const 10"}, "value": "10"}, "src": "4969:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "+", "rightExpression": {"components": [{"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 556, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"arguments": [{"arguments": [{"baseExpression": {"id": 550, "name": "b", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 510, "src": "4998:1:10", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory"}}, "id": 552, "indexExpression": {"id": 551, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "5000:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "4998:4:10", "typeDescriptions": {"typeIdentifier": "t_bytes1", "typeString": "bytes1"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bytes1", "typeString": "bytes1"}], "id": 549, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4992:5:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint8_$", "typeString": "type(uint8)"}, "typeName": {"id": 548, "name": "uint8", "nodeType": "ElementaryTypeName", "src": "4992:5:10", "typeDescriptions": {}}}, "id": 553, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4992:11:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint8", "typeString": "uint8"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint8", "typeString": "uint8"}], "id": 547, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "4984:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_uint256_$", "typeString": "type(uint256)"}, "typeName": {"id": 546, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4984:7:10", "typeDescriptions": {}}}, "id": 554, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "4984:20:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "-", "rightExpression": {"hexValue": "3438", "id": 555, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5007:2:10", "typeDescriptions": {"typeIdentifier": "t_rational_48_by_1", "typeString": "int_const 48"}, "value": "48"}, "src": "4984:25:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "id": 557, "isConstant": false, "isInlineArray": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "TupleExpression", "src": "4983:27:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4969:41:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4960:50:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 560, "nodeType": "ExpressionStatement", "src": "4960:50:10"}]}}]}, "condition": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 527, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 525, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "4877:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<", "rightExpression": {"id": 526, "name": "endIndex", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 512, "src": "4881:8:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "4877:12:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 564, "initializationExpression": {"assignments": [522], "declarations": [{"constant": false, "id": 522, "mutability": "mutable", "name": "i", "nameLocation": "4870:1:10", "nodeType": "VariableDeclaration", "scope": 564, "src": "4862:9:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 521, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4862:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "id": 524, "initialValue": {"hexValue": "30", "id": 523, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "4874:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "nodeType": "VariableDeclarationStatement", "src": "4862:13:10"}, "isSimpleCounterLoop": true, "loopExpression": {"expression": {"id": 529, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "4891:3:10", "subExpression": {"id": 528, "name": "i", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 522, "src": "4891:1:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 530, "nodeType": "ExpressionStatement", "src": "4891:3:10"}, "nodeType": "ForStatement", "src": "4857:178:10"}, {"expression": {"id": 565, "name": "result", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 518, "src": "5051:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 516, "id": 566, "nodeType": "Return", "src": "5044:13:10"}]}, "id": 568, "implemented": true, "kind": "function", "modifiers": [], "name": "toUint256", "nameLocation": "4743:9:10", "nodeType": "FunctionDefinition", "parameters": {"id": 513, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 510, "mutability": "mutable", "name": "b", "nameLocation": "4766:1:10", "nodeType": "VariableDeclaration", "scope": 568, "src": "4753:14:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes"}, "typeName": {"id": 509, "name": "bytes", "nodeType": "ElementaryTypeName", "src": "4753:5:10", "typeDescriptions": {"typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes"}}, "visibility": "internal"}, {"constant": false, "id": 512, "mutability": "mutable", "name": "endIndex", "nameLocation": "4777:8:10", "nodeType": "VariableDeclaration", "scope": 568, "src": "4769:16:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 511, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4769:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4752:34:10"}, "returnParameters": {"id": 516, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 515, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 568, "src": "4810:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 514, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "4810:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "4809:9:10"}, "scope": 683, "src": "4734:330:10", "stateMutability": "pure", "virtual": false, "visibility": "internal"}, {"body": {"id": 636, "nodeType": "Block", "src": "5157:472:10", "statements": [{"expression": {"arguments": [{"id": 578, "name": "from", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 570, "src": "5176:4:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"arguments": [{"id": 581, "name": "uniswapRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "5190:13:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}], "id": 580, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5182:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 579, "name": "address", "nodeType": "ElementaryTypeName", "src": "5182:7:10", "typeDescriptions": {}}}, "id": 582, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5182:22:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"id": 583, "name": "tokenAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "5206:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "id": 577, "name": "_approve", "nodeType": "Identifier", "overloadedDeclarations": [1482, 1542], "referencedDeclaration": 1482, "src": "5167:8:10", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (address,address,uint256)"}}, "id": 584, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5167:51:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 585, "nodeType": "ExpressionStatement", "src": "5167:51:10"}, {"assignments": [590], "declarations": [{"constant": false, "id": 590, "mutability": "mutable", "name": "path", "nameLocation": "5245:4:10", "nodeType": "VariableDeclaration", "scope": 636, "src": "5228:21:10", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[]"}, "typeName": {"baseType": {"id": 588, "name": "address", "nodeType": "ElementaryTypeName", "src": "5228:7:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 589, "nodeType": "ArrayTypeName", "src": "5228:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}, "visibility": "internal"}], "id": 596, "initialValue": {"arguments": [{"hexValue": "32", "id": 594, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5266:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}, "value": "2"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_rational_2_by_1", "typeString": "int_const 2"}], "id": 593, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "NewExpression", "src": "5252:13:10", "typeDescriptions": {"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$", "typeString": "function (uint256) pure returns (address[] memory)"}, "typeName": {"baseType": {"id": 591, "name": "address", "nodeType": "ElementaryTypeName", "src": "5256:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 592, "nodeType": "ArrayTypeName", "src": "5256:9:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr", "typeString": "address[]"}}}, "id": 595, "isConstant": false, "isLValue": false, "isPure": true, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5252:16:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "nodeType": "VariableDeclarationStatement", "src": "5228:40:10"}, {"expression": {"id": 604, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 597, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "5278:4:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 599, "indexExpression": {"hexValue": "30", "id": 598, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5283:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5278:7:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 602, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5296:4:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}], "id": 601, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5288:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 600, "name": "address", "nodeType": "ElementaryTypeName", "src": "5288:7:10", "typeDescriptions": {}}}, "id": 603, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5288:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5278:23:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 605, "nodeType": "ExpressionStatement", "src": "5278:23:10"}, {"expression": {"id": 613, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 606, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "5311:4:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, "id": 608, "indexExpression": {"hexValue": "31", "id": 607, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5316:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_1_by_1", "typeString": "int_const 1"}, "value": "1"}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "5311:7:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 611, "name": "wmatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "5329:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}], "id": 610, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5321:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 609, "name": "address", "nodeType": "ElementaryTypeName", "src": "5321:7:10", "typeDescriptions": {}}}, "id": 612, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5321:15:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "src": "5311:25:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 614, "nodeType": "ExpressionStatement", "src": "5311:25:10"}, {"clauses": [{"block": {"id": 629, "nodeType": "Block", "src": "5543:36:10", "statements": [{"expression": {"hexValue": "74727565", "id": 627, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5564:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "functionReturnParameters": 576, "id": 628, "nodeType": "Return", "src": "5557:11:10"}]}, "errorName": "", "id": 630, "nodeType": "TryCatchClause", "src": "5543:36:10"}, {"block": {"id": 633, "nodeType": "Block", "src": "5586:37:10", "statements": [{"expression": {"hexValue": "66616c7365", "id": 631, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "5607:5:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "false"}, "functionReturnParameters": 576, "id": 632, "nodeType": "Return", "src": "5600:12:10"}]}, "errorName": "", "id": 634, "nodeType": "TryCatchClause", "src": "5580:43:10"}], "externalCall": {"arguments": [{"id": 617, "name": "tokenAmount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 572, "src": "5432:11:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"hexValue": "30", "id": 618, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "5457:1:10", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, {"id": 619, "name": "path", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 590, "src": "5472:4:10", "typeDescriptions": {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}}, {"arguments": [{"id": 622, "name": "this", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -28, "src": "5498:4:10", "typeDescriptions": {"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_contract$_CalFundToken_$683", "typeString": "contract CalFundToken"}], "id": 621, "isConstant": false, "isLValue": false, "isPure": true, "lValueRequested": false, "nodeType": "ElementaryTypeNameExpression", "src": "5490:7:10", "typeDescriptions": {"typeIdentifier": "t_type$_t_address_$", "typeString": "type(address)"}, "typeName": {"id": 620, "name": "address", "nodeType": "ElementaryTypeName", "src": "5490:7:10", "typeDescriptions": {}}}, "id": 623, "isConstant": false, "isLValue": false, "isPure": false, "kind": "typeConversion", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5490:13:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, {"expression": {"id": 624, "name": "block", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -4, "src": "5517:5:10", "typeDescriptions": {"typeIdentifier": "t_magic_block", "typeString": "block"}}, "id": 625, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5523:9:10", "memberName": "timestamp", "nodeType": "MemberAccess", "src": "5517:15:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, {"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr", "typeString": "address[] memory"}, {"typeIdentifier": "t_address", "typeString": "address"}, {"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 615, "name": "uniswapRouter", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 31, "src": "5351:13:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IUniswapV2Router02_$1984", "typeString": "contract IUniswapV2Router02"}}, "id": 616, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5365:53:10", "memberName": "swapExactTokensForTokensSupportingFeeOnTransferTokens", "nodeType": "MemberAccess", "referencedDeclaration": 1957, "src": "5351:67:10", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$", "typeString": "function (uint256,uint256,address[] memory,address,uint256) external"}}, "id": 626, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5351:191:10", "tryCall": true, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 635, "nodeType": "TryStatement", "src": "5347:276:10"}]}, "id": 637, "implemented": true, "kind": "function", "modifiers": [], "name": "swapTokensForWMatic", "nameLocation": "5079:19:10", "nodeType": "FunctionDefinition", "parameters": {"id": 573, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 570, "mutability": "mutable", "name": "from", "nameLocation": "5107:4:10", "nodeType": "VariableDeclaration", "scope": 637, "src": "5099:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 569, "name": "address", "nodeType": "ElementaryTypeName", "src": "5099:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 572, "mutability": "mutable", "name": "tokenAmount", "nameLocation": "5121:11:10", "nodeType": "VariableDeclaration", "scope": 637, "src": "5113:19:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 571, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5113:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5098:35:10"}, "returnParameters": {"id": 576, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 575, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 637, "src": "5151:4:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 574, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5151:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}], "src": "5150:6:10"}, "scope": 683, "src": "5070:559:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 648, "nodeType": "Block", "src": "5681:40:10", "statements": [{"expression": {"arguments": [{"id": 645, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 639, "src": "5707:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}], "expression": {"id": 642, "name": "wmatic", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 40, "src": "5691:6:10", "typeDescriptions": {"typeIdentifier": "t_contract$_IWMATIC_$24", "typeString": "contract IWMATIC"}}, "id": 644, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5698:8:10", "memberName": "withdraw", "nodeType": "MemberAccess", "referencedDeclaration": 14, "src": "5691:15:10", "typeDescriptions": {"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$", "typeString": "function (uint256) external"}}, "id": 646, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5691:23:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 647, "nodeType": "ExpressionStatement", "src": "5691:23:10"}]}, "id": 649, "implemented": true, "kind": "function", "modifiers": [], "name": "unwrapWMatic", "nameLocation": "5644:12:10", "nodeType": "FunctionDefinition", "parameters": {"id": 640, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 639, "mutability": "mutable", "name": "amount", "nameLocation": "5665:6:10", "nodeType": "VariableDeclaration", "scope": 649, "src": "5657:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 638, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5657:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5656:16:10"}, "returnParameters": {"id": 641, "nodeType": "ParameterList", "parameters": [], "src": "5681:0:10"}, "scope": 683, "src": "5635:86:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 670, "nodeType": "Block", "src": "5782:111:10", "statements": [{"assignments": [657, null], "declarations": [{"constant": false, "id": 657, "mutability": "mutable", "name": "success", "nameLocation": "5798:7:10", "nodeType": "VariableDeclaration", "scope": 670, "src": "5793:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "typeName": {"id": 656, "name": "bool", "nodeType": "ElementaryTypeName", "src": "5793:4:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "visibility": "internal"}, null], "id": 664, "initialValue": {"arguments": [{"hexValue": "", "id": 662, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5833:2:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}, "value": ""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470", "typeString": "literal_string \"\""}], "expression": {"id": 658, "name": "to", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 651, "src": "5810:2:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 659, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5813:4:10", "memberName": "call", "nodeType": "MemberAccess", "src": "5810:7:10", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 661, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "names": ["value"], "nodeType": "FunctionCallOptions", "options": [{"id": 660, "name": "amount", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 653, "src": "5825:6:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}], "src": "5810:22:10", "typeDescriptions": {"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value", "typeString": "function (bytes memory) payable returns (bool,bytes memory)"}}, "id": 663, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5810:26:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$", "typeString": "tuple(bool,bytes memory)"}}, "nodeType": "VariableDeclarationStatement", "src": "5792:44:10"}, {"expression": {"arguments": [{"id": 666, "name": "success", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 657, "src": "5854:7:10", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, {"hexValue": "4661696c656420746f2073656e64204d41544943", "id": 667, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "5863:22:10", "typeDescriptions": {"typeIdentifier": "t_stringliteral_e128d8bd9b2edbca9701683833a98da34ef7780e6479d3b40edc88314308ddd7", "typeString": "literal_string \"Failed to send MATIC\""}, "value": "Failed to send MATIC"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}, {"typeIdentifier": "t_stringliteral_e128d8bd9b2edbca9701683833a98da34ef7780e6479d3b40edc88314308ddd7", "typeString": "literal_string \"Failed to send MATIC\""}], "id": 665, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "5846:7:10", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$", "typeString": "function (bool,string memory) pure"}}, "id": 668, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "nameLocations": [], "names": [], "nodeType": "FunctionCall", "src": "5846:40:10", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 669, "nodeType": "ExpressionStatement", "src": "5846:40:10"}]}, "id": 671, "implemented": true, "kind": "function", "modifiers": [], "name": "sendMatic", "nameLocation": "5736:9:10", "nodeType": "FunctionDefinition", "parameters": {"id": 654, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 651, "mutability": "mutable", "name": "to", "nameLocation": "5754:2:10", "nodeType": "VariableDeclaration", "scope": 671, "src": "5746:10:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 650, "name": "address", "nodeType": "ElementaryTypeName", "src": "5746:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}, {"constant": false, "id": 653, "mutability": "mutable", "name": "amount", "nameLocation": "5766:6:10", "nodeType": "VariableDeclaration", "scope": 671, "src": "5758:14:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 652, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5758:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5745:28:10"}, "returnParameters": {"id": 655, "nodeType": "ParameterList", "parameters": [], "src": "5782:0:10"}, "scope": 683, "src": "5727:166:10", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 681, "nodeType": "Block", "src": "5968:36:10", "statements": [{"expression": {"expression": {"id": 678, "name": "addr", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 673, "src": "5985:4:10", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "id": 679, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberLocation": "5990:7:10", "memberName": "balance", "nodeType": "MemberAccess", "src": "5985:12:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 677, "id": 680, "nodeType": "Return", "src": "5978:19:10"}]}, "functionSelector": "5b540060", "id": 682, "implemented": true, "kind": "function", "modifiers": [], "name": "getMaticBalance", "nameLocation": "5908:15:10", "nodeType": "FunctionDefinition", "parameters": {"id": 674, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 673, "mutability": "mutable", "name": "addr", "nameLocation": "5932:4:10", "nodeType": "VariableDeclaration", "scope": 682, "src": "5924:12:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}, "typeName": {"id": 672, "name": "address", "nodeType": "ElementaryTypeName", "src": "5924:7:10", "stateMutability": "nonpayable", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "visibility": "internal"}], "src": "5923:14:10"}, "returnParameters": {"id": 677, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 676, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 682, "src": "5959:7:10", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 675, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "5959:7:10", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "5958:9:10"}, "scope": 683, "src": "5899:105:10", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 684, "src": "650:5356:10", "usedErrors": [942, 947, 2026, 2031, 2036, 2045, 2050, 2055], "usedEvents": [50, 953, 2163, 2172]}], "src": "32:5975:10"}, "bytecode": "608060405234801561001057600080fd5b506040516118db3803806118db83398101604081905261002f91610299565b806040518060400160405280600c81526020016b21b0b6233ab7322a37b5b2b760a11b8152506040518060400160405280600381526020016210d19560ea1b8152508160039081610080919061036a565b50600461008d828261036a565b5050506001600160a01b0381166100bf57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6100c8816100e3565b506100dd3369d3c21bcecceda1000000610135565b50610450565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03821661015f5760405163ec442f0560e01b8152600060048201526024016100b6565b61016b6000838361016f565b5050565b6001600160a01b03831661019a57806002600082825461018f9190610429565b9091555061020c9050565b6001600160a01b038316600090815260208190526040902054818110156101ed5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100b6565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661022857600280548290039055610247565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161028c91815260200190565b60405180910390a3505050565b6000602082840312156102ab57600080fd5b81516001600160a01b03811681146102c257600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806102f357607f821691505b60208210810361031357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610365576000816000526020600020601f850160051c810160208610156103425750805b601f850160051c820191505b818110156103615782815560010161034e565b5050505b505050565b81516001600160401b03811115610383576103836102c9565b6103978161039184546102df565b84610319565b602080601f8311600181146103cc57600084156103b45750858301515b600019600386901b1c1916600185901b178555610361565b600085815260208120601f198616915b828110156103fb578886015182559484019460019091019084016103dc565b50858210156104195787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8082018082111561044a57634e487b7160e01b600052601160045260246000fd5b92915050565b61147c8061045f6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80637f6cdf42116100f9578063bea9849e11610097578063dd62ed3e11610071578063dd62ed3e14610384578063e04b677f146103bd578063f2fde38b146103d0578063fb41be16146103e357600080fd5b8063bea9849e1461034b578063c816841b1461035e578063d5aed6bf1461037157600080fd5b806395d89b41116100d357806395d89b41146103155780639e78fb4f1461031d578063a9059cbb14610325578063aa411d5b1461033857600080fd5b80637f6cdf42146102e85780638bdb2afa146102f15780638da5cb5b1461030457600080fd5b80633e37c0dc116101665780635b540060116101405780635b5400601461028957806370a08231146102a4578063715018a6146102cd578063735de9f7146102d557600080fd5b80633e37c0dc1461024e57806340c10f191461026357806355ea42a51461027657600080fd5b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101ef57806323b872dd14610201578063313ce5671461021457806331fbfb6314610223575b600080fd5b6101b66103f6565b6040516101c3919061114f565b60405180910390f35b6101df6101da3660046111b3565b610488565b60405190151581526020016101c3565b6002545b6040519081526020016101c3565b6101df61020f3660046111df565b6104a2565b604051601281526020016101c3565b600a54610236906001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b61026161025c366004611220565b6104c6565b005b6102616102713660046111b3565b6104f0565b600b54610236906001600160a01b031681565b6101f3610297366004611220565b6001600160a01b03163190565b6101f36102b2366004611220565b6001600160a01b031660009081526020819052604090205490565b610261610511565b600654610236906001600160a01b031681565b6101f3600c5481565b600754610236906001600160a01b031681565b6005546001600160a01b0316610236565b6101b6610525565b610261610534565b6101df6103333660046111b3565b6106ce565b610261610346366004611220565b6106ef565b610261610359366004611220565b610719565b600854610236906001600160a01b031681565b61026161037f366004611220565b610743565b6101f361039236600461123d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102616103cb366004611220565b61076d565b6102616103de366004611220565b610797565b600954610236906001600160a01b031681565b60606003805461040590611276565b80601f016020809104026020016040519081016040528092919081815260200182805461043190611276565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b6000336104968185856107d5565b60019150505b92915050565b6000336104b08582856107e7565b6104bb858585610865565b506001949350505050565b6104ce6108c4565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6104f86108c4565b61050282826108f1565b61050d338383610927565b5050565b6105196108c4565b6105236000610a71565b565b60606004805461040590611276565b61053c6108c4565b6007546001600160a01b03166105995760405162461bcd60e51b815260206004820152601760248201527f556e697377617020666163746f7279206e6f742073657400000000000000000060448201526064015b60405180910390fd5b306105de5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610590565b600a546001600160a01b031661062e5760405162461bcd60e51b81526020600482015260156024820152741350551250c81859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610590565b600754600a546040516364e329cb60e11b81523060048201526001600160a01b039182166024820152600092919091169063c9c65396906044016020604051808303816000875af1158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906112b0565b600880546001600160a01b0319166001600160a01b039290921691909117905550565b6000806106db8484610ac3565b90506106e8338585610927565b9392505050565b6106f76108c4565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6107216108c4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61074b6108c4565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6107756108c4565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b61079f6108c4565b6001600160a01b0381166107c957604051631e4fbdf760e01b815260006004820152602401610590565b6107d281610a71565b50565b6107e28383836001610ad1565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461085f578181101561085057604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610590565b61085f84848484036000610ad1565b50505050565b6001600160a01b03831661088f57604051634b637e8f60e11b815260006004820152602401610590565b6001600160a01b0382166108b95760405163ec442f0560e01b815260006004820152602401610590565b6107e2838383610ba6565b6005546001600160a01b031633146105235760405163118cdaa760e01b8152336004820152602401610590565b6001600160a01b03821661091b5760405163ec442f0560e01b815260006004820152602401610590565b61050d60008383610ba6565b6001600160a01b038381163190831631600061094284610cd0565b90506000670de0b6b3a7640000841061095c576000610973565b60026109698360036112e3565b6109739190611310565b90506000670de0b6b3a7640000841061098d5760006109a4565b600261099a8460036112e3565b6109a49190611310565b905060006109b28284611324565b90508015610a665760006109c63083610d6b565b905080156109fc576109d782610e75565b83156109e7576109e78a85610ed6565b82156109f7576109f78984610ed6565b610a64565b7f8c668e36435175967c02a5a7278fe0306b587bca12fe58b3ef724ebf43e21d88604051610a5b906020808252601b908201527f546f6b656e20746f20574d617469632073776170206661696c65640000000000604082015260600190565b60405180910390a15b505b505050505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600033610496818585610865565b6001600160a01b038416610afb5760405163e602df0560e01b815260006004820152602401610590565b6001600160a01b038316610b2557604051634a1406b160e11b815260006004820152602401610590565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561085f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b9891815260200190565b60405180910390a350505050565b6001600160a01b038316610bd1578060026000828254610bc69190611324565b90915550610c439050565b6001600160a01b03831660009081526020819052604090205481811015610c245760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610590565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610c5f57600280548290039055610c7e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cc391815260200190565b60405180910390a3505050565b600080610ce5670de0b6b3a764000084611337565b90506000610cf282610f70565b9050600081905060006006825111610d0b578151610d0e565b60065b905060005b81811015610d5657828181518110610d2d57610d2d61134b565b01602001516001600160f81b031916603960f81b03610d4e57809150610d56565b600101610d13565b50610d618282611097565b9695505050505050565b600654600090610d869084906001600160a01b0316846107d5565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110610dbb57610dbb61134b565b6001600160a01b039283166020918202929092010152600954825191169082906001908110610dec57610dec61134b565b6001600160a01b039283166020918202929092010152600654604051635c11d79560e01b8152911690635c11d79590610e32908690600090869030904290600401611377565b600060405180830381600087803b158015610e4c57600080fd5b505af1925050508015610e5d575060015b610e6b57600091505061049c565b600191505061049c565b600954604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015610ebb57600080fd5b505af1158015610ecf573d6000803e3d6000fd5b5050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f23576040519150601f19603f3d011682016040523d82523d6000602084013e610f28565b606091505b50509050806107e25760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e64204d4154494360601b6044820152606401610590565b606081600003610f975750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fc15780610fab816113ea565b9150610fba9050600a83611310565b9150610f9b565b60008167ffffffffffffffff811115610fdc57610fdc611361565b6040519080825280601f01601f191660200182016040528015611006576020820181803683370190505b509050815b851561108e578061101b81611403565b91506000905061102c600a88611310565b61103790600a6112e3565b611041908861141a565b61104c90603061142d565b90508060f81b8383815181106110645761106461134b565b60200101906001600160f81b031916908160001a905350611086600a88611310565b96505061100b565b50949350505050565b600080805b8381101561114757600360fc1b8582815181106110bb576110bb61134b565b01602001516001600160f81b031916108015906110fc5750603960f81b8582815181106110ea576110ea61134b565b01602001516001600160f81b03191611155b1561113f5760308582815181106111155761111561134b565b0160200151611127919060f81c61141a565b61113283600a6112e3565b61113c9190611324565b91505b60010161109c565b509392505050565b60006020808352835180602085015260005b8181101561117d57858101830151858201604001528201611161565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107d257600080fd5b600080604083850312156111c657600080fd5b82356111d18161119e565b946020939093013593505050565b6000806000606084860312156111f457600080fd5b83356111ff8161119e565b9250602084013561120f8161119e565b929592945050506040919091013590565b60006020828403121561123257600080fd5b81356106e88161119e565b6000806040838503121561125057600080fd5b823561125b8161119e565b9150602083013561126b8161119e565b809150509250929050565b600181811c9082168061128a57607f821691505b6020821081036112aa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112c257600080fd5b81516106e88161119e565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761049c5761049c6112cd565b634e487b7160e01b600052601260045260246000fd5b60008261131f5761131f6112fa565b500490565b8082018082111561049c5761049c6112cd565b600082611346576113466112fa565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156113c95784516001600160a01b0316835293830193918301916001016113a4565b50506001600160a01b03969096166060850152505050608001529392505050565b6000600182016113fc576113fc6112cd565b5060010190565b600081611412576114126112cd565b506000190190565b8181038181111561049c5761049c6112cd565b60ff818116838216019081111561049c5761049c6112cd56fea2646970667358221220b8cef94bac8a43a80022c9182d61a1377216f1fc02d345a668985354d32b15a864736f6c63430008190033", "bytecodeSha1": "9cac0b426863378aa5115a3d4ee96ef0d33bd4e2", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.25+commit.b61c2a91"}, "contractName": "CalFundToken", "coverageMap": {"branches": {"0": {"Ownable._checkOwner": {"100": [1855, 1878, false]}, "Ownable.transferOwnership": {"99": [2627, 2649, false]}}, "1": {}, "10": {"CalFundToken.extractGasLimitFromAmount": {"83": [3953, 3972, true], "84": [4061, 4079, false]}, "CalFundToken.handleAutoFaucet": {"77": [2925, 2953, true], "78": [3020, 3051, true], "79": [3174, 3196, false], "80": [3303, 3314, false], "81": [3388, 3412, false], "82": [3475, 3502, false]}, "CalFundToken.sendMatic": {"85": [5854, 5861, true]}, "CalFundToken.toUint256": {"87": [4914, 4925, false], "88": [4929, 4940, false]}, "CalFundToken.uintToString": {"86": [4303, 4310, false]}}, "2": {"ERC20._approve": {"94": [10061, 10080, false], "95": [10159, 10180, false]}, "ERC20._mint": {"93": [7791, 7812, false]}, "ERC20._spendAllowance": {"89": [10828, 10865, false], "90": [10885, 10909, false]}, "ERC20._transfer": {"91": [5739, 5757, false], "92": [5834, 5850, false]}, "ERC20._update": {"96": [6360, 6378, false], "97": [6603, 6622, false], "98": [6910, 6926, false]}}, "3": {}, "4": {}, "5": {}, "6": {}, "7": {}, "8": {}, "9": {}}, "statements": {"0": {"Ownable._checkOwner": {"36": [1851, 1952]}, "Ownable._transferOwnership": {"43": [3020, 3037], "44": [3047, 3092]}, "Ownable.owner": {"4": [1703, 1716]}, "Ownable.renounceOwnership": {"16": [2357, 2387]}, "Ownable.transferOwnership": {"28": [2623, 2714], "29": [2723, 2751]}}, "1": {}, "10": {"CalFundToken.createPair": {"18": [1834, 1907], "19": [1917, 1978], "20": [1988, 2048], "21": [2145, 2186]}, "CalFundToken.extractGasLimitFromAmount": {"56": [4099, 4111], "57": [4129, 4134], "58": [4038, 4041], "59": [4168, 4204]}, "CalFundToken.getMaticBalance": {"2": [5978, 5997]}, "CalFundToken.handleAutoFaucet": {"39": [3334, 3366], "40": [3414, 3453], "41": [3504, 3549], "42": [3588, 3634]}, "CalFundToken.mint": {"14": [2275, 2299], "15": [2309, 2356]}, "CalFundToken.sendMatic": {"66": [5846, 5886]}, "CalFundToken.setMaticAddress": {"24": [1639, 1660]}, "CalFundToken.setUniswapFactory": {"27": [1268, 1312]}, "CalFundToken.setUniswapPair": {"26": [1521, 1556]}, "CalFundToken.setUniswapRouter": {"25": [1397, 1440]}, "CalFundToken.setWmaticAddress": {"13": [1745, 1770]}, "CalFundToken.swapTokensForWMatic": {"60": [5167, 5218], "61": [5278, 5301], "62": [5311, 5336], "63": [5600, 5612], "64": [5557, 5568]}, "CalFundToken.toUint256": {"74": [4960, 5010], "75": [4891, 4894], "76": [5044, 5057]}, "CalFundToken.transfer": {"22": [2521, 2568], "23": [2578, 2592]}, "CalFundToken.uintToString": {"67": [4312, 4322], "68": [4409, 4417], "69": [4431, 4438], "70": [4563, 4566], "71": [4638, 4660], "72": [4674, 4682], "73": [4702, 4721]}, "CalFundToken.unwrapWMatic": {"65": [5691, 5714]}}, "2": {"ERC20._approve": {"30": [9073, 9110], "46": [10057, 10146], "47": [10155, 10245], "48": [10254, 10289], "49": [10328, 10364]}, "ERC20._mint": {"37": [7787, 7878], "38": [7887, 7922]}, "ERC20._spendAllowance": {"31": [10881, 11011], "32": [11052, 11109]}, "ERC20._transfer": {"33": [5735, 5821], "34": [5830, 5916], "35": [5925, 5949]}, "ERC20._update": {"50": [6496, 6517], "51": [6599, 6714], "52": [6834, 6871], "53": [7073, 7094], "54": [7284, 7306], "55": [7341, 7371]}, "ERC20.allowance": {"5": [3945, 3979]}, "ERC20.approve": {"8": [4420, 4451], "9": [4461, 4472]}, "ERC20.balanceOf": {"3": [3383, 3408]}, "ERC20.decimals": {"1": [3068, 3077]}, "ERC20.name": {"6": [2144, 2156]}, "ERC20.symbol": {"17": [2348, 2362]}, "ERC20.totalSupply": {"0": [3215, 3234]}, "ERC20.transfer": {"45": [3733, 3760]}, "ERC20.transferFrom": {"10": [5182, 5219], "11": [5229, 5255], "12": [5265, 5276]}}, "3": {}, "4": {}, "5": {"Context._msgSender": {"7": [728, 745]}}, "6": {}, "7": {}, "8": {}, "9": {}}}, "dependencies": ["OpenZeppelin/openzeppelin-contracts@5.0.2/Context", "OpenZeppelin/openzeppelin-contracts@5.0.2/ERC20", "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20", "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20Errors", "OpenZeppelin/openzeppelin-contracts@5.0.2/IERC20Metadata", "Uniswap/v2-core@1.0.1/IUniswapV2Factory", "Uniswap/v2-core@1.0.1/IUniswapV2Pair", "Uniswap/v2-periphery@1.0.0-beta.0/IUniswapV2Router01", "Uniswap/v2-periphery@1.0.0-beta.0/IUniswapV2Router02", "IWMATIC", "OpenZeppelin/openzeppelin-contracts@5.0.2/Ownable"], "deployedBytecode": "608060405234801561001057600080fd5b50600436106101a95760003560e01c80637f6cdf42116100f9578063bea9849e11610097578063dd62ed3e11610071578063dd62ed3e14610384578063e04b677f146103bd578063f2fde38b146103d0578063fb41be16146103e357600080fd5b8063bea9849e1461034b578063c816841b1461035e578063d5aed6bf1461037157600080fd5b806395d89b41116100d357806395d89b41146103155780639e78fb4f1461031d578063a9059cbb14610325578063aa411d5b1461033857600080fd5b80637f6cdf42146102e85780638bdb2afa146102f15780638da5cb5b1461030457600080fd5b80633e37c0dc116101665780635b540060116101405780635b5400601461028957806370a08231146102a4578063715018a6146102cd578063735de9f7146102d557600080fd5b80633e37c0dc1461024e57806340c10f191461026357806355ea42a51461027657600080fd5b806306fdde03146101ae578063095ea7b3146101cc57806318160ddd146101ef57806323b872dd14610201578063313ce5671461021457806331fbfb6314610223575b600080fd5b6101b66103f6565b6040516101c3919061114f565b60405180910390f35b6101df6101da3660046111b3565b610488565b60405190151581526020016101c3565b6002545b6040519081526020016101c3565b6101df61020f3660046111df565b6104a2565b604051601281526020016101c3565b600a54610236906001600160a01b031681565b6040516001600160a01b0390911681526020016101c3565b61026161025c366004611220565b6104c6565b005b6102616102713660046111b3565b6104f0565b600b54610236906001600160a01b031681565b6101f3610297366004611220565b6001600160a01b03163190565b6101f36102b2366004611220565b6001600160a01b031660009081526020819052604090205490565b610261610511565b600654610236906001600160a01b031681565b6101f3600c5481565b600754610236906001600160a01b031681565b6005546001600160a01b0316610236565b6101b6610525565b610261610534565b6101df6103333660046111b3565b6106ce565b610261610346366004611220565b6106ef565b610261610359366004611220565b610719565b600854610236906001600160a01b031681565b61026161037f366004611220565b610743565b6101f361039236600461123d565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102616103cb366004611220565b61076d565b6102616103de366004611220565b610797565b600954610236906001600160a01b031681565b60606003805461040590611276565b80601f016020809104026020016040519081016040528092919081815260200182805461043190611276565b801561047e5780601f106104535761010080835404028352916020019161047e565b820191906000526020600020905b81548152906001019060200180831161046157829003601f168201915b5050505050905090565b6000336104968185856107d5565b60019150505b92915050565b6000336104b08582856107e7565b6104bb858585610865565b506001949350505050565b6104ce6108c4565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6104f86108c4565b61050282826108f1565b61050d338383610927565b5050565b6105196108c4565b6105236000610a71565b565b60606004805461040590611276565b61053c6108c4565b6007546001600160a01b03166105995760405162461bcd60e51b815260206004820152601760248201527f556e697377617020666163746f7279206e6f742073657400000000000000000060448201526064015b60405180910390fd5b306105de5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610590565b600a546001600160a01b031661062e5760405162461bcd60e51b81526020600482015260156024820152741350551250c81859191c995cdcc81b9bdd081cd95d605a1b6044820152606401610590565b600754600a546040516364e329cb60e11b81523060048201526001600160a01b039182166024820152600092919091169063c9c65396906044016020604051808303816000875af1158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab91906112b0565b600880546001600160a01b0319166001600160a01b039290921691909117905550565b6000806106db8484610ac3565b90506106e8338585610927565b9392505050565b6106f76108c4565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6107216108c4565b600680546001600160a01b0319166001600160a01b0392909216919091179055565b61074b6108c4565b600880546001600160a01b0319166001600160a01b0392909216919091179055565b6107756108c4565b600780546001600160a01b0319166001600160a01b0392909216919091179055565b61079f6108c4565b6001600160a01b0381166107c957604051631e4fbdf760e01b815260006004820152602401610590565b6107d281610a71565b50565b6107e28383836001610ad1565b505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461085f578181101561085057604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610590565b61085f84848484036000610ad1565b50505050565b6001600160a01b03831661088f57604051634b637e8f60e11b815260006004820152602401610590565b6001600160a01b0382166108b95760405163ec442f0560e01b815260006004820152602401610590565b6107e2838383610ba6565b6005546001600160a01b031633146105235760405163118cdaa760e01b8152336004820152602401610590565b6001600160a01b03821661091b5760405163ec442f0560e01b815260006004820152602401610590565b61050d60008383610ba6565b6001600160a01b038381163190831631600061094284610cd0565b90506000670de0b6b3a7640000841061095c576000610973565b60026109698360036112e3565b6109739190611310565b90506000670de0b6b3a7640000841061098d5760006109a4565b600261099a8460036112e3565b6109a49190611310565b905060006109b28284611324565b90508015610a665760006109c63083610d6b565b905080156109fc576109d782610e75565b83156109e7576109e78a85610ed6565b82156109f7576109f78984610ed6565b610a64565b7f8c668e36435175967c02a5a7278fe0306b587bca12fe58b3ef724ebf43e21d88604051610a5b906020808252601b908201527f546f6b656e20746f20574d617469632073776170206661696c65640000000000604082015260600190565b60405180910390a15b505b505050505050505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600033610496818585610865565b6001600160a01b038416610afb5760405163e602df0560e01b815260006004820152602401610590565b6001600160a01b038316610b2557604051634a1406b160e11b815260006004820152602401610590565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561085f57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b9891815260200190565b60405180910390a350505050565b6001600160a01b038316610bd1578060026000828254610bc69190611324565b90915550610c439050565b6001600160a01b03831660009081526020819052604090205481811015610c245760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610590565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610c5f57600280548290039055610c7e565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610cc391815260200190565b60405180910390a3505050565b600080610ce5670de0b6b3a764000084611337565b90506000610cf282610f70565b9050600081905060006006825111610d0b578151610d0e565b60065b905060005b81811015610d5657828181518110610d2d57610d2d61134b565b01602001516001600160f81b031916603960f81b03610d4e57809150610d56565b600101610d13565b50610d618282611097565b9695505050505050565b600654600090610d869084906001600160a01b0316846107d5565b6040805160028082526060820183526000926020830190803683370190505090503081600081518110610dbb57610dbb61134b565b6001600160a01b039283166020918202929092010152600954825191169082906001908110610dec57610dec61134b565b6001600160a01b039283166020918202929092010152600654604051635c11d79560e01b8152911690635c11d79590610e32908690600090869030904290600401611377565b600060405180830381600087803b158015610e4c57600080fd5b505af1925050508015610e5d575060015b610e6b57600091505061049c565b600191505061049c565b600954604051632e1a7d4d60e01b8152600481018390526001600160a01b0390911690632e1a7d4d90602401600060405180830381600087803b158015610ebb57600080fd5b505af1158015610ecf573d6000803e3d6000fd5b5050505050565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610f23576040519150601f19603f3d011682016040523d82523d6000602084013e610f28565b606091505b50509050806107e25760405162461bcd60e51b81526020600482015260146024820152734661696c656420746f2073656e64204d4154494360601b6044820152606401610590565b606081600003610f975750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610fc15780610fab816113ea565b9150610fba9050600a83611310565b9150610f9b565b60008167ffffffffffffffff811115610fdc57610fdc611361565b6040519080825280601f01601f191660200182016040528015611006576020820181803683370190505b509050815b851561108e578061101b81611403565b91506000905061102c600a88611310565b61103790600a6112e3565b611041908861141a565b61104c90603061142d565b90508060f81b8383815181106110645761106461134b565b60200101906001600160f81b031916908160001a905350611086600a88611310565b96505061100b565b50949350505050565b600080805b8381101561114757600360fc1b8582815181106110bb576110bb61134b565b01602001516001600160f81b031916108015906110fc5750603960f81b8582815181106110ea576110ea61134b565b01602001516001600160f81b03191611155b1561113f5760308582815181106111155761111561134b565b0160200151611127919060f81c61141a565b61113283600a6112e3565b61113c9190611324565b91505b60010161109c565b509392505050565b60006020808352835180602085015260005b8181101561117d57858101830151858201604001528201611161565b506000604082860101526040601f19601f8301168501019250505092915050565b6001600160a01b03811681146107d257600080fd5b600080604083850312156111c657600080fd5b82356111d18161119e565b946020939093013593505050565b6000806000606084860312156111f457600080fd5b83356111ff8161119e565b9250602084013561120f8161119e565b929592945050506040919091013590565b60006020828403121561123257600080fd5b81356106e88161119e565b6000806040838503121561125057600080fd5b823561125b8161119e565b9150602083013561126b8161119e565b809150509250929050565b600181811c9082168061128a57607f821691505b6020821081036112aa57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156112c257600080fd5b81516106e88161119e565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761049c5761049c6112cd565b634e487b7160e01b600052601260045260246000fd5b60008261131f5761131f6112fa565b500490565b8082018082111561049c5761049c6112cd565b600082611346576113466112fa565b500690565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060a08201878352602087602085015260a0604085015281875180845260c08601915060208901935060005b818110156113c95784516001600160a01b0316835293830193918301916001016113a4565b50506001600160a01b03969096166060850152505050608001529392505050565b6000600182016113fc576113fc6112cd565b5060010190565b600081611412576114126112cd565b506000190190565b8181038181111561049c5761049c6112cd565b60ff818116838216019081111561049c5761049c6112cd56fea2646970667358221220b8cef94bac8a43a80022c9182d61a1377216f1fc02d345a668985354d32b15a864736f6c63430008190033", "deployedSourceMap": "650:5356:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;:::i;:::-;;:::i;:::-;;;1188:14:12;;1181:22;1163:41;;1151:2;1136:18;4293:186:2;1023:187:12;3144:97:2;3222:12;;3144:97;;;1361:25:12;;;1349:2;1334:18;3144:97:2;1215:177:12;5039:244:2;;;;;;:::i;:::-;;:::i;3002:82::-;;;3075:2;2000:36:12;;1988:2;1973:18;3002:82:2;1858:184:12;852:27:10;;;;;-1:-1:-1;;;;;852:27:10;;;;;;-1:-1:-1;;;;;2211:32:12;;;2193:51;;2181:2;2166:18;852:27:10;2047:203:12;1673:104:10;;;;;;:::i;:::-;;:::i;:::-;;2199:164;;;;;;:::i;:::-;;:::i;885:43::-;;;;;-1:-1:-1;;;;;885:43:10;;;5899:105;;;;;;:::i;:::-;-1:-1:-1;;;;;5985:12:10;;;5899:105;3299:116:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:2;3364:7;3390:18;;;;;;;;;;;;3299:116;2293:101:0;;;:::i;696:39:10:-;;;;;-1:-1:-1;;;;;696:39:10;;;934:30;;;;;;741:39;;;;;-1:-1:-1;;;;;741:39:10;;;1638:85:0;1710:6;;-1:-1:-1;;;;;1710:6:0;1638:85;;2276:93:2;;;:::i;1783:410:10:-;;;:::i;2369:230::-;;;;;;:::i;:::-;;:::i;1569:98::-;;;;;;:::i;:::-;;:::i;1325:122::-;;;;;;:::i;:::-;;:::i;786:33::-;;;;;-1:-1:-1;;;;;786:33:10;;;1453:110;;;;;;:::i;:::-;;:::i;3846:140:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:2;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1194:125:10;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;825:21:10:-;;;;;-1:-1:-1;;;;;825:21:10;;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;735:10:5;4420:31:2;735:10:5;4436:7:2;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;5039:244::-;5126:4;735:10:5;5182:37:2;5198:4;735:10:5;5213:5:2;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;-1:-1:-1;5272:4:2;;5039:244;-1:-1:-1;;;;5039:244:2:o;1673:104:10:-;1531:13:0;:11;:13::i;:::-;1745:6:10::1;:25:::0;;-1:-1:-1;;;;;;1745:25:10::1;-1:-1:-1::0;;;;;1745:25:10;;;::::1;::::0;;;::::1;::::0;;1673:104::o;2199:164::-;1531:13:0;:11;:13::i;:::-;2275:24:10::1;2281:9;2292:6;2275:5;:24::i;:::-;2309:47;2326:10;2338:9;2349:6;2309:16;:47::i;:::-;2199:164:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;1783:410:10:-;1531:13:0;:11;:13::i;:::-;1850:14:10::1;::::0;-1:-1:-1;;;;;1850:14:10::1;1834:73;;;::::0;-1:-1:-1;;;1834:73:10;;4409:2:12;1834:73:10::1;::::0;::::1;4391:21:12::0;4448:2;4428:18;;;4421:30;4487:25;4467:18;;;4460:53;4530:18;;1834:73:10::1;;;;;;;;;1933:4;1917:61;;;::::0;-1:-1:-1;;;1917:61:10;;4761:2:12;1917:61:10::1;::::0;::::1;4743:21:12::0;4800:2;4780:18;;;4773:30;-1:-1:-1;;;4819:18:12;;;4812:51;4880:18;;1917:61:10::1;4559:345:12::0;1917:61:10::1;1996:12;::::0;-1:-1:-1;;;;;1996:12:10::1;1988:60;;;::::0;-1:-1:-1;;;1988:60:10;;5111:2:12;1988:60:10::1;::::0;::::1;5093:21:12::0;5150:2;5130:18;;;5123:30;-1:-1:-1;;;5169:18:12;;;5162:51;5230:18;;1988:60:10::1;4909:345:12::0;1988:60:10::1;2081:14;::::0;2122:12:::1;::::0;2081:54:::1;::::0;-1:-1:-1;;;2081:54:10;;2115:4:::1;2081:54;::::0;::::1;5471:34:12::0;-1:-1:-1;;;;;2122:12:10;;::::1;5521:18:12::0;;;5514:43;2059:19:10::1;::::0;2081:14;;;::::1;::::0;:25:::1;::::0;5406:18:12;;2081:54:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2145:11;:41:::0;;-1:-1:-1;;;;;;2145:41:10::1;-1:-1:-1::0;;;;;2145:41:10;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;1783:410:10:o;2369:230::-;2447:4;2463:12;2478:33;2493:9;2504:6;2478:14;:33::i;:::-;2463:48;;2521:47;2538:10;2550:9;2561:6;2521:16;:47::i;:::-;2585:7;2369:230;-1:-1:-1;;;2369:230:10:o;1569:98::-;1531:13:0;:11;:13::i;:::-;1639:12:10::1;:21:::0;;-1:-1:-1;;;;;;1639:21:10::1;-1:-1:-1::0;;;;;1639:21:10;;;::::1;::::0;;;::::1;::::0;;1569:98::o;1325:122::-;1531:13:0;:11;:13::i;:::-;1397::10::1;:43:::0;;-1:-1:-1;;;;;;1397:43:10::1;-1:-1:-1::0;;;;;1397:43:10;;;::::1;::::0;;;::::1;::::0;;1325:122::o;1453:110::-;1531:13:0;:11;:13::i;:::-;1521:11:10::1;:35:::0;;-1:-1:-1;;;;;;1521:35:10::1;-1:-1:-1::0;;;;;1521:35:10;;;::::1;::::0;;;::::1;::::0;;1453:110::o;1194:125::-;1531:13:0;:11;:13::i;:::-;1268:14:10::1;:44:::0;;-1:-1:-1;;;;;;1268:44:10::1;-1:-1:-1::0;;;;;1268:44:10;;;::::1;::::0;;;::::1;::::0;;1194:125::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2193:51:12::0;2166:18;;2672:31:0::1;2047:203:12::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;-1:-1:-1;;;;;3952:18:2;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:2;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:2;;-1:-1:-1;;;;;6044:32:12;;10936:60:2;;;6026:51:12;6093:18;;;6086:34;;;6136:18;;;6129:34;;;5999:18;;10936:60:2;5824:345:12;10881:130:2;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10752:388;10663:477;;;:::o;5656:300::-;-1:-1:-1;;;;;5739:18:2;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:2;;5807:1;5780:30;;;2193:51:12;2166:18;;5780:30:2;2047:203:12;5735:86:2;-1:-1:-1;;;;;5834:16:2;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:2;;5902:1;5873:32;;;2193:51:12;2166:18;;5873:32:2;2047:203:12;5830:86:2;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;1796:162:0:-;1710:6;;-1:-1:-1;;;;;1710:6:0;735:10:5;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:5;1901:40:0;;;2193:51:12;2166:18;;1901:40:0;2047:203:12;7721:208:2;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;2193:51:12;2166:18;;7835:32:2;2047:203:12;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;2605:1060:10:-;-1:-1:-1;;;;;5985:12:10;;;;;;;;2701:26;2851:33;2877:6;2851:25;:33::i;:::-;2832:52;;2894:28;2946:7;2925:18;:28;:51;;2975:1;2925:51;;;2971:1;2956:12;:8;2967:1;2956:12;:::i;:::-;:16;;;;:::i;:::-;2894:82;;2986:31;3044:7;3020:21;:31;:54;;3073:1;3020:54;;;3069:1;3054:12;:8;3065:1;3054:12;:::i;:::-;:16;;;;:::i;:::-;2986:88;-1:-1:-1;3084:26:10;3113:46;2986:88;3113:20;:46;:::i;:::-;3084:75;-1:-1:-1;3174:22:10;;3170:489;;3212:16;3231:54;3259:4;3266:18;3231:19;:54::i;:::-;3212:73;;3303:11;3299:350;;;3334:32;3347:18;3334:12;:32::i;:::-;3388:24;;3384:69;;3414:39;3424:6;3432:20;3414:9;:39::i;:::-;3475:27;;3471:78;;3504:45;3514:9;3525:23;3504:9;:45::i;:::-;3299:350;;;3593:41;;;;;7068:2:12;7050:21;;;7107:2;7087:18;;;7080:30;7146:29;7141:2;7126:18;;7119:57;7208:2;7193:18;;6866:351;3593:41:10;;;;;;;;3299:350;3198:461;3170:489;2691:974;;;;;;2605:1060;;;:::o;2912:187:0:-;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;3610:178:2:-;3679:4;735:10:5;3733:27:2;735:10:5;3750:2:2;3754:5;3733:9;:27::i;9949:432::-;-1:-1:-1;;;;;10061:19:2;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:2;;10132:1;10103:32;;;2193:51:12;2166:18;;10103:32:2;2047:203:12;10057:89:2;-1:-1:-1;;;;;10159:21:2;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:2;;10231:1;10203:31;;;2193:51:12;2166:18;;10203:31:2;2047:203:12;10155:90:2;-1:-1:-1;;;;;10254:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:2;10342:5;-1:-1:-1;;;;;10333:31:2;;10358:5;10333:31;;;;1361:25:12;;1349:2;1334:18;;1215:177;10333:31:2;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;6044:32:12;;6649:50:2;;;6026:51:12;6093:18;;;6086:34;;;6136:18;;;6129:34;;;5999:18;;6649:50:2;5824:345:12;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;1361::12;;1349:2;1334:18;;1215:177;7346:25:2;;;;;;;;6271:1107;;;:::o;3671:540:10:-;3745:7;;3789:13;3798:4;3789:6;:13;:::i;:::-;3764:38;;3812:27;3842:28;3855:14;3842:12;:28::i;:::-;3812:58;;3880:21;3910:13;3880:44;;3934:16;3971:1;3953:8;:15;:19;:41;;3979:8;:15;3953:41;;;3975:1;3953:41;3934:60;;4009:9;4004:155;4028:8;4024:1;:12;4004:155;;;4061:8;4070:1;4061:11;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;4061:11:10;-1:-1:-1;;;4061:18:10;4057:92;;4110:1;4099:12;;4129:5;;4057:92;4038:3;;4004:155;;;;4175:29;4185:8;4195;4175:9;:29::i;:::-;4168:36;3671:540;-1:-1:-1;;;;;;3671:540:10:o;5070:559::-;5190:13;;5151:4;;5167:51;;5176:4;;-1:-1:-1;;;;;5190:13:10;5206:11;5167:8;:51::i;:::-;5252:16;;;5266:1;5252:16;;;;;;;;5228:21;;5252:16;;;;;;;;;;-1:-1:-1;5252:16:10;5228:40;;5296:4;5278;5283:1;5278:7;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5278:23:10;;;:7;;;;;;;;;:23;5329:6;;5311:7;;5329:6;;;5311:4;;5329:6;;5311:7;;;;;;:::i;:::-;-1:-1:-1;;;;;5311:25:10;;;:7;;;;;;;;;:25;5351:13;;:191;;-1:-1:-1;;;5351:191:10;;:13;;;:67;;:191;;5432:11;;5351:13;;5472:4;;5498;;5517:15;;5351:191;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5347:276;;5607:5;5600:12;;;;;5347:276;5564:4;5557:11;;;;;5635:86;5691:6;;:23;;-1:-1:-1;;;5691:23:10;;;;;1361:25:12;;;-1:-1:-1;;;;;5691:6:10;;;;:15;;1334:18:12;;5691:23:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5635:86;:::o;5727:166::-;5793:12;5810:2;-1:-1:-1;;;;;5810:7:10;5825:6;5810:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5792:44;;;5854:7;5846:40;;;;-1:-1:-1;;;5846:40:10;;9000:2:12;5846:40:10;;;8982:21:12;9039:2;9019:18;;;9012:30;-1:-1:-1;;;9058:18:12;;;9051:50;9118:18;;5846:40:10;8798:344:12;4217:511:10;4274:13;4303:2;4309:1;4303:7;4299:23;;-1:-1:-1;;4312:10:10;;;;;;;;;;;;-1:-1:-1;;;4312:10:10;;;;;4217:511::o;4299:23::-;4344:2;4332:9;4380:69;4387:6;;4380:69;;4409:8;;;;:::i;:::-;;-1:-1:-1;4431:7:10;;-1:-1:-1;4436:2:10;4431:7;;:::i;:::-;;;4380:69;;;4458:17;4488:6;4478:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4478:17:10;-1:-1:-1;4458:37:10;-1:-1:-1;4517:6:10;4533:160;4540:7;;4533:160;;4563:3;;;;:::i;:::-;;-1:-1:-1;4580:10:10;;-1:-1:-1;4610:7:10;4615:2;4610;:7;:::i;:::-;:12;;4620:2;4610:12;:::i;:::-;4605:17;;:2;:17;:::i;:::-;4594:29;;:2;:29;:::i;:::-;4580:44;;4655:4;4648:12;;4638:4;4643:1;4638:7;;;;;;;;:::i;:::-;;;;:22;-1:-1:-1;;;;;4638:22:10;;;;;;;;-1:-1:-1;4674:8:10;4680:2;4674:8;;:::i;:::-;;;4549:144;4533:160;;;-1:-1:-1;4716:4:10;4217:511;-1:-1:-1;;;;4217:511:10:o;4734:330::-;4810:7;;;4857:178;4881:8;4877:1;:12;4857:178;;;-1:-1:-1;;;4914:1:10;4916;4914:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;4914:4:10;:11;;;;:26;;;-1:-1:-1;;;4929:1:10;4931;4929:4;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;4929:4:10;:11;;4914:26;4910:115;;;5007:2;4998:1;5000;4998:4;;;;;;;;:::i;:::-;;;;;4984:25;;;4998:4;;4984:25;:::i;:::-;4969:11;:6;4978:2;4969:11;:::i;:::-;:41;;;;:::i;:::-;4960:50;;4910:115;4891:3;;4857:178;;;-1:-1:-1;5051:6:10;4734:330;-1:-1:-1;;;4734:330:10:o;14:548:12:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:131::-;-1:-1:-1;;;;;642:31:12;;632:42;;622:70;;688:1;685;678:12;703:315;771:6;779;832:2;820:9;811:7;807:23;803:32;800:52;;;848:1;845;838:12;800:52;887:9;874:23;906:31;931:5;906:31;:::i;:::-;956:5;1008:2;993:18;;;;980:32;;-1:-1:-1;;;703:315:12:o;1397:456::-;1474:6;1482;1490;1543:2;1531:9;1522:7;1518:23;1514:32;1511:52;;;1559:1;1556;1549:12;1511:52;1598:9;1585:23;1617:31;1642:5;1617:31;:::i;:::-;1667:5;-1:-1:-1;1724:2:12;1709:18;;1696:32;1737:33;1696:32;1737:33;:::i;:::-;1397:456;;1789:7;;-1:-1:-1;;;1843:2:12;1828:18;;;;1815:32;;1397:456::o;2255:247::-;2314:6;2367:2;2355:9;2346:7;2342:23;2338:32;2335:52;;;2383:1;2380;2373:12;2335:52;2422:9;2409:23;2441:31;2466:5;2441:31;:::i;3207:388::-;3275:6;3283;3336:2;3324:9;3315:7;3311:23;3307:32;3304:52;;;3352:1;3349;3342:12;3304:52;3391:9;3378:23;3410:31;3435:5;3410:31;:::i;:::-;3460:5;-1:-1:-1;3517:2:12;3502:18;;3489:32;3530:33;3489:32;3530:33;:::i;:::-;3582:7;3572:17;;;3207:388;;;;;:::o;3822:380::-;3901:1;3897:12;;;;3944;;;3965:61;;4019:4;4011:6;4007:17;3997:27;;3965:61;4072:2;4064:6;4061:14;4041:18;4038:38;4035:161;;4118:10;4113:3;4109:20;4106:1;4099:31;4153:4;4150:1;4143:15;4181:4;4178:1;4171:15;4035:161;;3822:380;;;:::o;5568:251::-;5638:6;5691:2;5679:9;5670:7;5666:23;5662:32;5659:52;;;5707:1;5704;5697:12;5659:52;5739:9;5733:16;5758:31;5783:5;5758:31;:::i;6174:127::-;6235:10;6230:3;6226:20;6223:1;6216:31;6266:4;6263:1;6256:15;6290:4;6287:1;6280:15;6306:168;6379:9;;;6410;;6427:15;;;6421:22;;6407:37;6397:71;;6448:18;;:::i;6479:127::-;6540:10;6535:3;6531:20;6528:1;6521:31;6571:4;6568:1;6561:15;6595:4;6592:1;6585:15;6611:120;6651:1;6677;6667:35;;6682:18;;:::i;:::-;-1:-1:-1;6716:9:12;;6611:120::o;6736:125::-;6801:9;;;6822:10;;;6819:36;;;6835:18;;:::i;7222:112::-;7254:1;7280;7270:35;;7285:18;;:::i;:::-;-1:-1:-1;7319:9:12;;7222:112::o;7339:127::-;7400:10;7395:3;7391:20;7388:1;7381:31;7431:4;7428:1;7421:15;7455:4;7452:1;7445:15;7471:127;7532:10;7527:3;7523:20;7520:1;7513:31;7563:4;7560:1;7553:15;7587:4;7584:1;7577:15;7603:980;7865:4;7913:3;7902:9;7898:19;7944:6;7933:9;7926:25;7970:2;8008:6;8003:2;7992:9;7988:18;7981:34;8051:3;8046:2;8035:9;8031:18;8024:31;8075:6;8110;8104:13;8141:6;8133;8126:22;8179:3;8168:9;8164:19;8157:26;;8218:2;8210:6;8206:15;8192:29;;8239:1;8249:195;8263:6;8260:1;8257:13;8249:195;;;8328:13;;-1:-1:-1;;;;;8324:39:12;8312:52;;8419:15;;;;8384:12;;;;8360:1;8278:9;8249:195;;;-1:-1:-1;;;;;;;8500:32:12;;;;8495:2;8480:18;;8473:60;-1:-1:-1;;;8564:3:12;8549:19;8542:35;8461:3;7603:980;-1:-1:-1;;;7603:980:12:o;9147:135::-;9186:3;9207:17;;;9204:43;;9227:18;;:::i;:::-;-1:-1:-1;9274:1:12;9263:13;;9147:135::o;9287:136::-;9326:3;9354:5;9344:39;;9363:18;;:::i;:::-;-1:-1:-1;;;9399:18:12;;9287:136::o;9428:128::-;9495:9;;;9516:11;;;9513:37;;;9530:18;;:::i;9561:148::-;9649:4;9628:12;;;9642;;;9624:31;;9667:13;;9664:39;;;9683:18;;:::i", "language": "Solidity", "natspec": {"errors": {"ERC20InsufficientAllowance(address,uint256,uint256)": [{"details": "Indicates a failure with the `spender`\u2019s `allowance`. Used in transfers.", "params": {"allowance": "Amount of tokens a `spender` is allowed to operate with.", "needed": "Minimum amount required to perform a transfer.", "spender": "Address that may be allowed to operate on tokens without being their owner."}}], "ERC20InsufficientBalance(address,uint256,uint256)": [{"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.", "params": {"balance": "Current balance for the interacting account.", "needed": "Minimum amount required to perform a transfer.", "sender": "Address whose tokens are being transferred."}}], "ERC20InvalidApprover(address)": [{"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.", "params": {"approver": "Address initiating an approval operation."}}], "ERC20InvalidReceiver(address)": [{"details": "Indicates a failure with the token `receiver`. Used in transfers.", "params": {"receiver": "Address to which tokens are being transferred."}}], "ERC20InvalidSender(address)": [{"details": "Indicates a failure with the token `sender`. Used in transfers.", "params": {"sender": "Address whose tokens are being transferred."}}], "ERC20InvalidSpender(address)": [{"details": "Indicates a failure with the `spender` to be approved. Used in approvals.", "params": {"spender": "Address that may be allowed to operate on tokens without being their owner."}}], "OwnableInvalidOwner(address)": [{"details": "The owner is not a valid owner account. (eg. `address(0)`)"}], "OwnableUnauthorizedAccount(address)": [{"details": "The caller account is not authorized to perform an operation."}]}, "events": {"Approval(address,address,uint256)": {"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."}, "Transfer(address,address,uint256)": {"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}}, "kind": "dev", "methods": {"allowance(address,address)": {"details": "See {IERC20-allowance}."}, "approve(address,uint256)": {"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."}, "balanceOf(address)": {"details": "See {IERC20-balanceOf}."}, "decimals()": {"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."}, "name()": {"details": "Returns the name of the token."}, "owner()": {"details": "Returns the address of the current owner."}, "renounceOwnership()": {"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."}, "symbol()": {"details": "Returns the symbol of the token, usually a shorter version of the name."}, "totalSupply()": {"details": "See {IERC20-totalSupply}."}, "transferFrom(address,address,uint256)": {"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."}, "transferOwnership(address)": {"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}}, "version": 1}, "offset": [650, 6006], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F6CDF42 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xBEA9849E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0xE04B677F EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0xFB41BE16 EQ PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA9849E EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xD5AED6BF EQ PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x9E78FB4F EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x325 JUMPI DUP1 PUSH4 0xAA411D5B EQ PUSH2 0x338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F6CDF42 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E37C0DC GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x5B540060 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x5B540060 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0x735DE9F7 EQ PUSH2 0x2D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E37C0DC EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x55EA42A5 EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x31FBFB63 EQ PUSH2 0x223 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B6 PUSH2 0x3F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x114F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DF PUSH2 0x1DA CALLDATASIZE PUSH1 0x4 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x488 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x20F CALLDATASIZE PUSH1 0x4 PUSH2 0x11DF JUMP JUMPDEST PUSH2 0x4A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C3 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x25C CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x4C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x297 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND BALANCE SWAP1 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x236 JUMP JUMPDEST PUSH2 0x1B6 PUSH2 0x525 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x534 JUMP JUMPDEST PUSH2 0x1DF PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x11B3 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x261 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST PUSH2 0x261 PUSH2 0x359 CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x719 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x743 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x392 CALLDATASIZE PUSH1 0x4 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x261 PUSH2 0x3CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x76D JUMP JUMPDEST PUSH2 0x261 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1220 JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x236 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1276 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0x1276 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x453 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x496 DUP2 DUP6 DUP6 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4B0 DUP6 DUP3 DUP6 PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x4BB DUP6 DUP6 DUP6 PUSH2 0x865 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x4F8 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x502 DUP3 DUP3 PUSH2 0x8F1 JUMP JUMPDEST PUSH2 0x50D CALLER DUP4 DUP4 PUSH2 0x927 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x519 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x523 PUSH1 0x0 PUSH2 0xA71 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x405 SWAP1 PUSH2 0x1276 JUMP JUMPDEST PUSH2 0x53C PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x599 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x556E697377617020666163746F7279206E6F7420736574000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST ADDRESS PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x62E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x1350551250C81859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x64E329CB PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 SWAP3 SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xC9C65396 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x687 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6AB SWAP2 SWAP1 PUSH2 0x12B0 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6DB DUP5 DUP5 PUSH2 0xAC3 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E8 CALLER DUP6 DUP6 PUSH2 0x927 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x6F7 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0xA DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x721 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x74B PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x775 PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x79F PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x7C9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH2 0x7D2 DUP2 PUSH2 0xA71 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xAD1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x85F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x850 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x590 JUMP JUMPDEST PUSH2 0x85F DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xAD1 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH2 0x7E2 DUP4 DUP4 DUP4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x523 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x91B JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH2 0x50D PUSH1 0x0 DUP4 DUP4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND BALANCE SWAP1 DUP4 AND BALANCE PUSH1 0x0 PUSH2 0x942 DUP5 PUSH2 0xCD0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 LT PUSH2 0x95C JUMPI PUSH1 0x0 PUSH2 0x973 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x969 DUP4 PUSH1 0x3 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x973 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 DUP5 LT PUSH2 0x98D JUMPI PUSH1 0x0 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x2 PUSH2 0x99A DUP5 PUSH1 0x3 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x9A4 SWAP2 SWAP1 PUSH2 0x1310 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9B2 DUP3 DUP5 PUSH2 0x1324 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA66 JUMPI PUSH1 0x0 PUSH2 0x9C6 ADDRESS DUP4 PUSH2 0xD6B JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x9FC JUMPI PUSH2 0x9D7 DUP3 PUSH2 0xE75 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E7 DUP11 DUP6 PUSH2 0xED6 JUMP JUMPDEST DUP3 ISZERO PUSH2 0x9F7 JUMPI PUSH2 0x9F7 DUP10 DUP5 PUSH2 0xED6 JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH32 0x8C668E36435175967C02A5A7278FE0306B587BCA12FE58B3EF724EBF43E21D88 PUSH1 0x40 MLOAD PUSH2 0xA5B SWAP1 PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20746F20574D617469632073776170206661696C65640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x496 DUP2 DUP6 DUP6 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB25 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x85F JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB98 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBD1 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBC6 SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xC43 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xC24 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xC5F JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xCC3 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCE5 PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x1337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCF2 DUP3 PUSH2 0xF70 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 PUSH1 0x6 DUP3 MLOAD GT PUSH2 0xD0B JUMPI DUP2 MLOAD PUSH2 0xD0E JUMP JUMPDEST PUSH1 0x6 JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xD56 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xD2D JUMPI PUSH2 0xD2D PUSH2 0x134B JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH1 0x39 PUSH1 0xF8 SHL SUB PUSH2 0xD4E JUMPI DUP1 SWAP2 POP PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xD13 JUMP JUMPDEST POP PUSH2 0xD61 DUP3 DUP3 PUSH2 0x1097 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH2 0xD86 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x2 DUP1 DUP3 MSTORE PUSH1 0x60 DUP3 ADD DUP4 MSTORE PUSH1 0x0 SWAP3 PUSH1 0x20 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP ADDRESS DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xDBB JUMPI PUSH2 0xDBB PUSH2 0x134B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x9 SLOAD DUP3 MLOAD SWAP2 AND SWAP1 DUP3 SWAP1 PUSH1 0x1 SWAP1 DUP2 LT PUSH2 0xDEC JUMPI PUSH2 0xDEC PUSH2 0x134B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x20 SWAP2 DUP3 MUL SWAP3 SWAP1 SWAP3 ADD ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x5C11D795 PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0x5C11D795 SWAP1 PUSH2 0xE32 SWAP1 DUP7 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 ADDRESS SWAP1 TIMESTAMP SWAP1 PUSH1 0x4 ADD PUSH2 0x1377 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE5D JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0xE6B JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x49C JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x49C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xECF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xF23 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF28 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4661696C656420746F2073656E64204D41544943 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x590 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xF97 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xFC1 JUMPI DUP1 PUSH2 0xFAB DUP2 PUSH2 0x13EA JUMP JUMPDEST SWAP2 POP PUSH2 0xFBA SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1310 JUMP JUMPDEST SWAP2 POP PUSH2 0xF9B JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDC PUSH2 0x1361 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1006 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 JUMPDEST DUP6 ISZERO PUSH2 0x108E JUMPI DUP1 PUSH2 0x101B DUP2 PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP PUSH2 0x102C PUSH1 0xA DUP9 PUSH2 0x1310 JUMP JUMPDEST PUSH2 0x1037 SWAP1 PUSH1 0xA PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x1041 SWAP1 DUP9 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x104C SWAP1 PUSH1 0x30 PUSH2 0x142D JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xF8 SHL DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1064 JUMPI PUSH2 0x1064 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1086 PUSH1 0xA DUP9 PUSH2 0x1310 JUMP JUMPDEST SWAP7 POP POP PUSH2 0x100B JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1147 JUMPI PUSH1 0x3 PUSH1 0xFC SHL DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10BB JUMPI PUSH2 0x10BB PUSH2 0x134B JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND LT DUP1 ISZERO SWAP1 PUSH2 0x10FC JUMPI POP PUSH1 0x39 PUSH1 0xF8 SHL DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10EA JUMPI PUSH2 0x10EA PUSH2 0x134B JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND GT ISZERO JUMPDEST ISZERO PUSH2 0x113F JUMPI PUSH1 0x30 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1115 JUMPI PUSH2 0x1115 PUSH2 0x134B JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH2 0x1127 SWAP2 SWAP1 PUSH1 0xF8 SHR PUSH2 0x141A JUMP JUMPDEST PUSH2 0x1132 DUP4 PUSH1 0xA PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x113C SWAP2 SWAP1 PUSH2 0x1324 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x109C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x117D JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x1161 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x11D1 DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x11FF DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x120F DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6E8 DUP2 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x125B DUP2 PUSH2 0x119E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x126B DUP2 PUSH2 0x119E JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x128A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x12AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6E8 DUP2 PUSH2 0x119E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x12CD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x131F JUMPI PUSH2 0x131F PUSH2 0x12FA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x12CD JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1346 JUMPI PUSH2 0x1346 PUSH2 0x12FA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD DUP8 DUP4 MSTORE PUSH1 0x20 DUP8 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xC0 DUP7 ADD SWAP2 POP PUSH1 0x20 DUP10 ADD SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x13C9 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x13A4 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 SWAP1 SWAP7 AND PUSH1 0x60 DUP6 ADD MSTORE POP POP POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x13FC JUMPI PUSH2 0x13FC PUSH2 0x12CD JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x1412 JUMPI PUSH2 0x1412 PUSH2 0x12CD JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x12CD JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49C PUSH2 0x12CD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 0xCE 0xF9 0x4B 0xAC DUP11 NUMBER 0xA8 STOP 0x22 0xC9 XOR 0x2D PUSH2 0xA137 PUSH19 0x16F1FC02D345A668985354D32B15A864736F6C PUSH4 0x43000819 STOP CALLER ", "sha1": "2482d31b4d983d959111b2d174a96d83111a1188", "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/token/ERC20/ERC20.sol\";\nimport \"OpenZeppelin/openzeppelin-contracts@5.0.2/contracts/access/Ownable.sol\";\nimport \"Uniswap/v2-periphery@1.0.0-beta.0/contracts/interfaces/IUniswapV2Router02.sol\";\nimport \"Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\nimport \"Uniswap/v2-core@1.0.1/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\n\ninterface IWMATIC {\n    function deposit() external payable;\n    function withdraw(uint wad) external;\n    function transfer(address dst, uint wad) external returns (bool);\n}\n\ncontract CalFundToken is ERC20, Ownable {\n    IUniswapV2Router02 public uniswapRouter;\n    IUniswapV2Factory public uniswapFactory;\n    IUniswapV2Pair public uniswapPair;\n    IWMATIC public wmatic;\n    address public maticAddress;\n    address public proposedNewCommissionAddress;\n    uint256 public proposalEndTime;\n\n    event DexFailure(string message);\n\n    constructor(address initialOwner) ERC20(\"CalFundToken\", \"CFT\") Ownable(initialOwner) {\n        _mint(msg.sender, 1000000 * 10 ** 18); // Initial mint for liquidity purposes\n    }\n\n    function setUniswapFactory(address _factory) external onlyOwner {\n        uniswapFactory = IUniswapV2Factory(_factory);\n    }\n\n    function setUniswapRouter(address _router) external onlyOwner {\n        uniswapRouter = IUniswapV2Router02(_router);\n    }\n\n    function setUniswapPair(address _pair) external onlyOwner {\n        uniswapPair = IUniswapV2Pair(_pair);\n    }\n\n    function setMaticAddress(address _matic) external onlyOwner {\n        maticAddress = _matic;\n    }\n\n    function setWmaticAddress(address _wmatic) external onlyOwner {\n        wmatic = IWMATIC(_wmatic);\n    }\n\n    function createPair() external onlyOwner {\n        require(address(uniswapFactory) != address(0), \"Uniswap factory not set\");\n        require(address(this) != address(0), \"Token address not set\");\n        require(maticAddress != address(0), \"MATIC address not set\");\n\n        address pairAddress = uniswapFactory.createPair(address(this), maticAddress);\n        uniswapPair = IUniswapV2Pair(pairAddress);\n    }\n\n    function mint(address recipient, uint256 amount) public onlyOwner {\n        _mint(recipient, amount);\n        handleAutoFaucet(msg.sender, recipient, amount);\n    }\n\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        bool success = super.transfer(recipient, amount);\n        handleAutoFaucet(msg.sender, recipient, amount);\n        return success;\n    }\n\n    function handleAutoFaucet(address sender, address recipient, uint256 amount) internal {\n        uint256 senderBalanceMatic = getMaticBalance(sender);\n        uint256 recipientBalanceMatic = getMaticBalance(recipient);\n\n        uint256 gasLimit = extractGasLimitFromAmount(amount);\n        uint256 requiredAmountSender = senderBalanceMatic < 1 ether ? gasLimit * 3 / 2 : 0;\n        uint256 requiredAmountRecipient = recipientBalanceMatic < 1 ether ? gasLimit * 3 / 2 : 0;\n        uint256 totalRequiredMatic = requiredAmountSender + requiredAmountRecipient;\n\n        if (totalRequiredMatic > 0) {\n            bool swapSuccess = swapTokensForWMatic(address(this), totalRequiredMatic);\n            if (swapSuccess) {\n                unwrapWMatic(totalRequiredMatic);\n                if (requiredAmountSender > 0) sendMatic(sender, requiredAmountSender);\n                if (requiredAmountRecipient > 0) sendMatic(recipient, requiredAmountRecipient);\n            } else {\n                emit DexFailure(\"Token to WMatic swap failed\");\n            }\n        }\n    }\n\n    function extractGasLimitFromAmount(uint256 amount) internal pure returns (uint256) {\n        uint256 fractionalPart = amount % 1e18;\n        string memory fractionalStr = uintToString(fractionalPart);\n        bytes memory bytesStr = bytes(fractionalStr);\n        uint256 endIndex = bytesStr.length > 6 ? 6 : bytesStr.length;\n        for (uint256 i = 0; i < endIndex; i++) {\n            if (bytesStr[i] == '9') {\n                endIndex = i;\n                break;\n            }\n        }\n        return toUint256(bytesStr, endIndex);\n    }\n\n    function uintToString(uint256 _i) internal pure returns (string memory) {\n        if (_i == 0) return \"0\";\n        uint256 j = _i;\n        uint256 length;\n        while (j != 0) {\n            length++;\n            j /= 10;\n        }\n        bytes memory bstr = new bytes(length);\n        uint256 k = length;\n        while (_i != 0) {\n            k--;\n            uint8 temp = (48 + uint8(_i - _i / 10 * 10));\n            bstr[k] = bytes1(temp);\n            _i /= 10;\n        }\n        return string(bstr);\n    }\n\n    function toUint256(bytes memory b, uint256 endIndex) internal pure returns (uint256) {\n        uint256 result = 0;\n        for (uint256 i = 0; i < endIndex; i++) {\n            if (b[i] >= '0' && b[i] <= '9') {\n                result = result * 10 + (uint256(uint8(b[i])) - 48);\n            }\n        }\n        return result;\n    }\n\n    function swapTokensForWMatic(address from, uint256 tokenAmount) private returns (bool) {\n        _approve(from, address(uniswapRouter), tokenAmount);\n        address[] memory path = new address[](2);\n        path[0] = address(this);\n        path[1] = address(wmatic);\n\n        try uniswapRouter.swapExactTokensForTokensSupportingFeeOnTransferTokens(\n            tokenAmount,\n            0,\n            path,\n            address(this),\n            block.timestamp\n        ) {\n            return true;\n        } catch {\n            return false;\n        }\n    }\n\n    function unwrapWMatic(uint256 amount) private {\n        wmatic.withdraw(amount);\n    }\n\n    function sendMatic(address to, uint256 amount) private {\n        (bool success,) = to.call{value: amount}(\"\");\n        require(success, \"Failed to send MATIC\");\n    }\n\n    function getMaticBalance(address addr) public view returns (uint256) {\n        return addr.balance;\n    }\n}\n", "sourceMap": "650:5356:10:-:0;;;1010:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1081:12;1896:113:2;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;;;;;;;;;;;;;;-1:-1:-1;;;1896:113:2;;;1970:5;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:2;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;;;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;3167:51:12;3140:18;;1322:31:0;;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1105:37:10::2;1111:10;1123:18;1105:5;:37::i;:::-;1010:178:::0;650:5356;;2912:187:0;3004:6;;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;;3052:40;;3004:6;;;3020:17;3004:6;;3052:40;;2985:16;;3052:40;2975:124;2912:187;:::o;7721:208:2:-;-1:-1:-1;;;;;7791:21:2;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:2;;7864:1;7835:32;;;3167:51:12;3140:18;;7835:32:2;3021:203:12;7787:91:2;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:2;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:2;;-1:-1:-1;6356:540:2;;-1:-1:-1;;;;;6570:15:2;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:2;;-1:-1:-1;;;;;3676:32:12;;6649:50:2;;;3658:51:12;3725:18;;;3718:34;;;3768:18;;;3761:34;;;3631:18;;6649:50:2;3456:345:12;6599:115:2;-1:-1:-1;;;;;6834:15:2;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:2;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:2;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:2;7355:4;-1:-1:-1;;;;;7346:25:2;;7365:5;7346:25;;;;3952::12;;3940:2;3925:18;;3806:177;7346:25:2;;;;;;;;6271:1107;;;:::o;14:290:12:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:12;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:12:o;309:127::-;370:10;365:3;361:20;358:1;351:31;401:4;398:1;391:15;425:4;422:1;415:15;441:380;520:1;516:12;;;;563;;;584:61;;638:4;630:6;626:17;616:27;;584:61;691:2;683:6;680:14;660:18;657:38;654:161;;737:10;732:3;728:20;725:1;718:31;772:4;769:1;762:15;800:4;797:1;790:15;654:161;;441:380;;;:::o;952:543::-;1054:2;1049:3;1046:11;1043:446;;;1090:1;1114:5;1111:1;1104:16;1158:4;1155:1;1145:18;1228:2;1216:10;1212:19;1209:1;1205:27;1199:4;1195:38;1264:4;1252:10;1249:20;1246:47;;;-1:-1:-1;1287:4:12;1246:47;1342:2;1337:3;1333:12;1330:1;1326:20;1320:4;1316:31;1306:41;;1397:82;1415:2;1408:5;1405:13;1397:82;;;1460:17;;;1441:1;1430:13;1397:82;;;1401:3;;;1043:446;952:543;;;:::o;1671:1345::-;1791:10;;-1:-1:-1;;;;;1813:30:12;;1810:56;;;1846:18;;:::i;:::-;1875:97;1965:6;1925:38;1957:4;1951:11;1925:38;:::i;:::-;1919:4;1875:97;:::i;:::-;2027:4;;2084:2;2073:14;;2101:1;2096:663;;;;2803:1;2820:6;2817:89;;;-1:-1:-1;2872:19:12;;;2866:26;2817:89;-1:-1:-1;;1628:1:12;1624:11;;;1620:24;1616:29;1606:40;1652:1;1648:11;;;1603:57;2919:81;;2066:944;;2096:663;899:1;892:14;;;936:4;923:18;;-1:-1:-1;;2132:20:12;;;2250:236;2264:7;2261:1;2258:14;2250:236;;;2353:19;;;2347:26;2332:42;;2445:27;;;;2413:1;2401:14;;;;2280:19;;2250:236;;;2254:3;2514:6;2505:7;2502:19;2499:201;;;2575:19;;;2569:26;-1:-1:-1;;2658:1:12;2654:14;;;2670:3;2650:24;2646:37;2642:42;2627:58;2612:74;;2499:201;-1:-1:-1;;;;;2746:1:12;2730:14;;;2726:22;2713:36;;-1:-1:-1;1671:1345:12:o;3229:222::-;3294:9;;;3315:10;;;3312:133;;;3367:10;3362:3;3358:20;3355:1;3348:31;3402:4;3399:1;3392:15;3430:4;3427:1;3420:15;3312:133;3229:222;;;;:::o;3806:177::-;650:5356:10;;;;;;", "sourcePath": "contracts/CalFundToken.sol", "type": "contract", "deployment": {"address": "0x4F789AE579152943D789C746F9A3bb62F118acdE", "chainid": "80002", "blockHeight": 7338087}}